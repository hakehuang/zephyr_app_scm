 _buf << %Q`pipeline {
  agent any
  stages {
    stage('build') {
      parallel {
        stage('hello world') {
          steps {
            sh 'docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) samples/hello_world #{escape((@board).to_s)}'
            sh '''docker exec #{escape((@docker).to_s)} run_setup.sh $(basename $(pwd))'''
            sh 'docker exec #{escape((@docker).to_s)} #{escape((@run_script).to_s)} $(basename $(pwd)) samples/hello_world'
          }
        }
      }
    }\n`
    for k, items in @catalog
 _buf << %Q`    stage('#{escape((k).to_s)}') {
      parallel {\n`
      items['cases'].each do |item|
 _buf << %Q`        stage('#{escape((item[0]).to_s)}') {
          steps {
            echo 'Test #{escape((item[0]).to_s)}'\n`
            if ! item[2].nil?
 _buf << %Q`              sh '''docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((@board).to_s)} -DCONF_FILE=#{escape((item[2]).to_s)}'''\n`
            else
 _buf << %Q`              sh '''docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((@board).to_s)}'''\n`
            end
 _buf << %Q`            sh 'docker exec #{escape((@docker).to_s)} #{escape((@run_script).to_s)} $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((item[0]).to_s)}'
          }
        }\n`
      end
 _buf << %Q`      }
    }\n`
    end
 _buf << %Q`  }
}\n`
