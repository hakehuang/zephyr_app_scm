 _buf << %Q`pipeline {\r
  agent any\r
  stages {\r
    stage('build') {\r
      parallel {\r
        stage('hello world') {\r
          steps {\r
            sh 'docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) samples/hello_world #{escape((@board).to_s)}'\r
            sh '''docker exec #{escape((@docker).to_s)} run_setup.sh $(basename $(pwd)) #{escape((@board).to_s)}'''\r
            sh 'docker exec #{escape((@docker).to_s)} #{escape((@run_script).to_s)} $(basename $(pwd)) samples/hello_world'\r
          }\r
        }\r
      }\r
    }\r\n`
    for k, items in @catalog
 _buf << %Q`    stage('#{escape((k).to_s)}') {\r
      parallel {\r\n`
      items['cases'].each do |item|
 _buf << %Q`        stage('#{escape((item[0]).to_s)}') {\r
          steps {\r
            echo 'Test #{escape((item[0]).to_s)}'\r\n`
            if ! item[2].nil?
 _buf << %Q`              sh '''docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((@board).to_s)} #{escape((item[2]).to_s)}'''\r\n`
            else
 _buf << %Q`              sh '''docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((@board).to_s)}'''\r\n`
            end
 _buf << %Q`            retry(2)  {\r\n`
            if ! item[2].nil?
 _buf << %Q`              sh '''docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((@board).to_s)} #{escape((item[2]).to_s)}'''\r\n`
            else
 _buf << %Q`              sh '''docker exec #{escape((@docker).to_s)} #{escape((@build_script).to_s)}  $(basename $(pwd)) #{escape((item[1]).to_s)} #{escape((@board).to_s)}'''\r\n`
            end
 _buf << %Q`            }\r
          }\r
        }\r\n`
      end
 _buf << %Q`      }\r
    }\r\n`
    end
 _buf << %Q`  }\r
}\r\n`
