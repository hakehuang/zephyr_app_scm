<?xml version="1.0"?>
<testsuites>
    <testsuite tests="7" errors="0" failures="0" name="tests_drivers" skipped="0" time="0">
      <testcase classname="frdm_k64f:Pci" name="peripheral.pci.pci_enumerate" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart_async_api.chained_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart_async_api.double_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart_async_api.read_abort" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart_async_api.single_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart_async_api.write_abort" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Cmsis Rtos V1" name="portability.cmsis_rtos_v1.thread_apis" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="24" errors="0" failures="0" name="tests_subsys" skipped="0" time="0">
      <testcase classname="frdm_k64f:Storage" name="storage.flash_map.flash_area_to_sectors" time="0">
      </testcase>
      <testcase classname="frdm_k64f:FCB" name="filesystem.fcb.fcb_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.log_arguments" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.log_backend_runtime_filtering" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.log_from_declared_module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.log_overflow" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.log_panic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.log_strdup_gc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_core.strdup_trimming" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_list.log_list" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_list.log_list_multiple_items" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_msg.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_msg.log_hexdump_data_get_single_chunk" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_msg.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_msg.log_hexdump_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Logging" name="logging.log_msg.log_std_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Ztest" name="testing.ztest.verbose_0.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Ztest" name="testing.ztest.verbose_0.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Ztest" name="testing.ztest.verbose_1.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Ztest" name="testing.ztest.verbose_1.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Ztest" name="testing.ztest.verbose_2.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Ztest" name="testing.ztest.verbose_2.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_k64f:BOS" name="usb.bos.usb_bos" time="0">
      </testcase>
      <testcase classname="frdm_k64f:BOS" name="usb.bos.usb_bos_macros" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="36" errors="0" failures="0" name="tests_shell" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_close" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_rmdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fat_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fs_help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fs Shell" name="filesystem.fs_shell.nffs_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multifs" name="filesystem.multifs.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart.shell.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart.shell.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Uart" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.app_handler" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.cmd_clear" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.cmd_help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.cmd_history" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.cmd_resize" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.cmd_shell" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.select" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.shell_module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Shell" name="shell.shell_wildcards_static" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="0" errors="0" failures="0" name="samples_sensor" skipped="0" time="0">
  </testsuite>
    <testsuite tests="4" errors="0" failures="0" name="samples_subsys" skipped="0" time="0">
      <testcase classname="frdm_k64f:Shell" name="shell.shell_module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Usb" name="usb.device.dfu.bank_erase" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Usb" name="usb.device.dfu.request_upgrade" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Usb" name="usb.device.dfu.write_confirm" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="8" errors="0" failures="0" name="samples_net" skipped="0" time="0">
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.address_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_disable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_enable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_enable_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_send_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:VLAN" name="net.vlan.vlan_tci" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="57" errors="0" failures="0" name="samples_basic" skipped="0" time="0">
      <testcase classname="frdm_k64f:MQTT" name="net.mqtt.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="frdm_k64f:MQTT" name="net.mqtt.subscriber.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="frdm_k64f:MQTT" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fifo" name="kernel.fifo.timeout.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fifo" name="kernel.fifo.timeout.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fifo" name="kernel.fifo.timeout.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Lifo" name="kernel.lifo.usage.timeout_threads_pend_on_lifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Memory Pool" name="kernel.memory_pool.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Memory Slabs" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.coop_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.cpu_id_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.sleep_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.smp_coop_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.wakeup_pending_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.wakeup_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Multiprocessing" name="kernel.multiprocessing.yield_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Poll" name="kernel.poll.poll_threadstate" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Queue" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Queue" name="kernel.queue.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Semaphore" name="kernel.semaphore.sem_multiple_threads_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.abort_handler" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.customdata_get_set_coop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.delayed_thread_abort" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.dynamic.dyn_thread_perms" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.essential_thread_operation" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.k_thread_foreach" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.kdefine_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.kinit_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.systhreads_idle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.systhreads_main" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.thread_name_get_set" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.thread_start" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_abort_others" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_abort_repeat" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_abort_self" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_cpu_mask" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_priority_set" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_spawn_delay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_spawn_forever" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_spawn_params" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_spawn_priority" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_suspend_resume_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Threads" name="kernel.threads.user_mode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Posix" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Posix" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Posix" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="0" errors="0" failures="0" name="samples" skipped="0" time="0">
  </testsuite>
</testsuites>
