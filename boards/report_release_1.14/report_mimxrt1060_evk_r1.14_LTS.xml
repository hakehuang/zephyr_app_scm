<?xml version="1.0"?>
<testsuites>
    <testsuite tests="7" errors="0" failures="0" name="tests_drivers" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:peripheral.pci.pci_enumerate" name="peripheral.pci.pci_enumerate" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.cmsis_rtos_v1.thread_apis" name="portability.cmsis_rtos_v1.thread_apis" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="7" errors="0" failures="0" name="tests_subsys" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:logging.log_list.log_list" name="logging.log_list.log_list" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:logging.log_list.log_list_multiple_items" name="logging.log_list.log_list_multiple_items" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:logging.log_msg.log_hexdump_data_get_multiple_chunks" name="logging.log_msg.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:logging.log_msg.log_hexdump_data_get_single_chunk" name="logging.log_msg.log_hexdump_data_get_single_chunk" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:logging.log_msg.log_hexdump_data_get_two_chunks" name="logging.log_msg.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:logging.log_msg.log_hexdump_msg" name="logging.log_msg.log_hexdump_msg" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:logging.log_msg.log_std_msg" name="logging.log_msg.log_std_msg" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="0" errors="0" failures="0" name="samples_basic" skipped="0" time="0">
  </testsuite>
    <testsuite tests="234" errors="0" failures="0" name="tests_kernel_2" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:arch.common.xip.globals" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.atomic" name="kernel.common.atomic" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.bitfield" name="kernel.common.bitfield" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.busy_wait" name="kernel.common.busy_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.byteorder_mem_swap" name="kernel.common.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.byteorder_memcpy_swap" name="kernel.common.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.clock_cycle" name="kernel.common.clock_cycle" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.clock_uptime" name="kernel.common.clock_uptime" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.critical" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.dlist" name="kernel.common.dlist" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.errno.newlib.thread_context" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.errno.thread_context" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.init.verify_bootdelay" name="kernel.common.init.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.intmath" name="kernel.common.intmath" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.irq_offload" name="kernel.common.irq_offload" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.k_sleep" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.k_yield" name="kernel.common.k_yield" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_cpu_idle" name="kernel.common.kernel_cpu_idle" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_cpu_idle_atomic" name="kernel.common.kernel_cpu_idle_atomic" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_ctx_thread" name="kernel.common.kernel_ctx_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_interrupts" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_thread" name="kernel.common.kernel_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_timer_interrupts" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.atomic" name="kernel.common.misra.atomic" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.bitfield" name="kernel.common.misra.bitfield" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.byteorder_mem_swap" name="kernel.common.misra.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.byteorder_memcpy_swap" name="kernel.common.misra.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.clock_cycle" name="kernel.common.misra.clock_cycle" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.clock_uptime" name="kernel.common.misra.clock_uptime" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.dlist" name="kernel.common.misra.dlist" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.intmath" name="kernel.common.misra.intmath" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.irq_offload" name="kernel.common.misra.irq_offload" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.multilib" name="kernel.common.misra.multilib" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.printk" name="kernel.common.misra.printk" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.slist" name="kernel.common.misra.slist" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.thread_context" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.timeout_order" name="kernel.common.misra.timeout_order" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.verify_bootdelay" name="kernel.common.misra.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.version" name="kernel.common.misra.version" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.multilib" name="kernel.common.multilib" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.printk" name="kernel.common.printk" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.slist" name="kernel.common.slist" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.stack_protection.fatal" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.thread_context" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.timeout_order" name="kernel.common.timeout_order" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.timing.pending" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.timing.sleep" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.verify_bootdelay" name="kernel.common.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.version" name="kernel.common.version" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.critical" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_cancel_wait" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_get_fail" name="kernel.fifo.poll.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_is_empty_isr" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_is_empty_thread" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_isr2thread" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_loop" name="kernel.fifo.poll.fifo_loop" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_thread2isr" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.poll.fifo_thread2thread" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.timeout.poll.timeout_empty_fifo" name="kernel.fifo.timeout.poll.timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.timeout.poll.timeout_fifo_thread" name="kernel.fifo.timeout.poll.timeout_fifo_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.timeout.poll.timeout_non_empty_fifo" name="kernel.fifo.timeout.poll.timeout_non_empty_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.usage.poll.dual_fifo_play" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.usage.poll.isr_fifo_play" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.fifo.usage.poll.single_fifo_play" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.poll.poll_cancel_main_high_prio" name="kernel.poll.poll_cancel_main_high_prio" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.poll.poll_cancel_main_low_prio" name="kernel.poll.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.poll.poll_multi" name="kernel.poll.poll_multi" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.poll.poll_no_wait" name="kernel.poll.poll_no_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.poll.poll_threadstate" name="kernel.poll.poll_threadstate" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.poll.poll_wait" name="kernel.poll.poll_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.auto_free" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_alloc" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_get_2threads" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_get_fail" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_isr2thread" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_loop" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_supv_to_user" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_thread2isr" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_thread2thread" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.adc.poll_mode.adc_sample" name="peripheral.adc.poll_mode.adc_sample" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.poll.uart_fifo_fill" name="peripheral.uart.poll.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.poll.uart_fifo_read" name="peripheral.uart.poll.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.poll.uart_poll_in" name="peripheral.uart.poll.uart_poll_in" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.poll.uart_poll_out" name="peripheral.uart.poll.uart_poll_out" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.uart_poll_in" name="peripheral.uart.uart_poll_in" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:peripheral.uart.uart_poll_out" name="peripheral.uart.uart_poll_out" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.bogus_dynamic_name" name="kernel.device.bogus_dynamic_name" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.build_suspend_device_list" name="kernel.device.build_suspend_device_list" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.dummy_device" name="kernel.device.dummy_device" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.dummy_device_pm" name="kernel.device.dummy_device_pm" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.dynamic_name" name="kernel.device.dynamic_name" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.pm.bogus_dynamic_name" name="kernel.device.pm.bogus_dynamic_name" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.pm.build_suspend_device_list" name="kernel.device.pm.build_suspend_device_list" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.pm.dummy_device" name="kernel.device.pm.dummy_device" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.pm.dummy_device_pm" name="kernel.device.pm.dummy_device_pm" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.device.pm.dynamic_name" name="kernel.device.pm.dynamic_name" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:usb.device.dfu.bank_erase" name="usb.device.dfu.bank_erase" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:usb.device.dfu.request_upgrade" name="usb.device.dfu.request_upgrade" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:usb.device.dfu.write_confirm" name="usb.device.dfu.write_confirm" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:usb.device.image_util.collecting" name="use.device.image_util.collecting" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.cmsis_rtos_v1.thread_apis" name="portability.cmsis_rtos_v1.thread_apis" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.multiprocessing.preempt_resched_threads" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.lock_preemptible" name="kernel.sched.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.preempt.preempt" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.priority_preemptible" name="kernel.sched.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sched_is_preempt_thread" name="kernel.sched.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.time_slicing_disable_preemptible" name="kernel.sched.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.time_slicing_preemptible" name="kernel.sched.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.unlock_preemptible" name="kernel.sched.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.threads.customdata_get_set_preempt" name="kernel.threads.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.threads.kdefine_preempt_thread" name="kernel.threads.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.threads.kinit_preempt_thread" name="kernel.threads.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.threads.threads_suspend_resume_preemptible" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.deadline.deadline" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.stack_protection.fatal" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.access_kobject_without_init_access" name="kernel.memory_protection.access_kobject_without_init_access" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.access_kobject_without_init_with_access" name="kernel.memory_protection.access_kobject_without_init_with_access" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.app_memory" name="kernel.memory_protection.app_memory" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.boot_page_table" name="kernel.memory_protection.boot_page_table" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_essential_thread_from_user" name="kernel.memory_protection.create_new_essential_thread_from_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_higher_prio_thread_from_user" name="kernel.memory_protection.create_new_higher_prio_thread_from_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_invalid_prio_thread_from_user" name="kernel.memory_protection.create_new_invalid_prio_thread_from_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_supervisor_thread_from_user" name="kernel.memory_protection.create_new_supervisor_thread_from_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_thread_from_user" name="kernel.memory_protection.create_new_thread_from_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_thread_from_user_huge_stacksize" name="kernel.memory_protection.create_new_thread_from_user_huge_stacksize" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" name="kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.create_new_thread_from_user_no_access_stack" name="kernel.memory_protection.create_new_thread_from_user_no_access_stack" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_access_all_grant" name="kernel.memory_protection.kobject_access_all_grant" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_access_grant" name="kernel.memory_protection.kobject_access_grant" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_access_grant_to_invalid_thread" name="kernel.memory_protection.kobject_access_grant_to_invalid_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_access_invalid_kobject" name="kernel.memory_protection.kobject_access_invalid_kobject" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_grant_access_kobj" name="kernel.memory_protection.kobject_grant_access_kobj" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_grant_access_kobj_invalid" name="kernel.memory_protection.kobject_grant_access_kobj_invalid" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_reinitialize_thread_kobj" name="kernel.memory_protection.kobject_reinitialize_thread_kobj" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_release_from_user" name="kernel.memory_protection.kobject_release_from_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.kobject_revoke_access" name="kernel.memory_protection.kobject_revoke_access" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_add_partitions_invalid" name="kernel.memory_protection.mem_domain_add_partitions_invalid" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_add_partitions_simple" name="kernel.memory_protection.mem_domain_add_partitions_simple" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_destroy" name="kernel.memory_protection.mem_domain_destroy" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_invalid_access" name="kernel.memory_protection.mem_domain_invalid_access" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_partitions_supervisor_rw" name="kernel.memory_protection.mem_domain_partitions_supervisor_rw" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_partitions_user_ro" name="kernel.memory_protection.mem_domain_partitions_user_ro" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_partitions_user_rw" name="kernel.memory_protection.mem_domain_partitions_user_rw" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_remove_partitions" name="kernel.memory_protection.mem_domain_remove_partitions" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_remove_partitions_simple" name="kernel.memory_protection.mem_domain_remove_partitions_simple" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_remove_thread" name="kernel.memory_protection.mem_domain_remove_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mem_domain_valid_access" name="kernel.memory_protection.mem_domain_valid_access" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_readable_read" name="kernel.memory_protection.mmu.buffer_readable_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_readable_write" name="kernel.memory_protection.mmu.buffer_readable_write" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_rw_read" name="kernel.memory_protection.mmu.buffer_rw_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_supervisor_rw" name="kernel.memory_protection.mmu.buffer_supervisor_rw" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_supervisor_w" name="kernel.memory_protection.mmu.buffer_supervisor_w" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_user_rw_supervisor" name="kernel.memory_protection.mmu.buffer_user_rw_supervisor" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_user_rw_user" name="kernel.memory_protection.mmu.buffer_user_rw_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.buffer_writeable_write" name="kernel.memory_protection.mmu.buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_page_buffer_read" name="kernel.memory_protection.mmu.multi_page_buffer_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_page_buffer_read_user" name="kernel.memory_protection.mmu.multi_page_buffer_read_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_page_buffer_user" name="kernel.memory_protection.mmu.multi_page_buffer_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_page_buffer_write_user" name="kernel.memory_protection.mmu.multi_page_buffer_write_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_pde_buffer_readable_read" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_read" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_pde_buffer_readable_write" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_write" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_pde_buffer_rw" name="kernel.memory_protection.mmu.multi_pde_buffer_rw" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.mmu.multi_pde_buffer_writeable_write" name="kernel.memory_protection.mmu.multi_pde_buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.obj_validation.generic_object" name="kernel.memory_protection.obj_validation.generic_object" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.permission_inheritance" name="kernel.memory_protection.permission_inheritance" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.protection.exec_data" name="kernel.memory_protection.protection.exec_data" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.protection.exec_heap" name="kernel.memory_protection.protection.exec_heap" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.protection.exec_stack" name="kernel.memory_protection.protection.exec_stack" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.protection.write_ro" name="kernel.memory_protection.protection.write_ro" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.protection.write_text" name="kernel.memory_protection.protection.write_text" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.stack_random.stack_pt_randomization" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.stackprot" name="kernel.memory_protection.stackprot" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.syscall_invalid_kobject" name="kernel.memory_protection.syscall_invalid_kobject" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.syscalls.string_nlen" name="kernel.memory_protection.syscalls.string_nlen" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.syscalls.to_copy" name="kernel.memory_protection.syscalls.to_copy" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.syscalls.user_string_alloc_copy" name="kernel.memory_protection.syscalls.user_string_alloc_copy" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.syscalls.user_string_copy" name="kernel.memory_protection.syscalls.user_string_copy" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.thread_has_residual_permissions" name="kernel.memory_protection.thread_has_residual_permissions" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.thread_without_kobject_permission" name="kernel.memory_protection.thread_without_kobject_permission" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.access_after_revoke" name="kernel.memory_protection.userspace.access_after_revoke" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.access_other_memdomain" name="kernel.memory_protection.userspace.access_other_memdomain" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.disable_mmu_mpu" name="kernel.memory_protection.userspace.disable_mmu_mpu" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_add_part_context_switch" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_add_part_drop_to_user" name="kernel.memory_protection.userspace.domain_add_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_add_thread_context_switch" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_add_thread_drop_to_user" name="kernel.memory_protection.userspace.domain_add_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_remove_part_context_switch" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_remove_part_drop_to_user" name="kernel.memory_protection.userspace.domain_remove_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_remove_thread_context_switch" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" name="kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.is_usermode" name="kernel.memory_protection.userspace.is_usermode" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.pass_noperms_object" name="kernel.memory_protection.userspace.pass_noperms_object" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.pass_user_object" name="kernel.memory_protection.userspace.pass_user_object" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.read_kernel_data" name="kernel.memory_protection.userspace.read_kernel_data" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.read_kernram" name="kernel.memory_protection.userspace.read_kernram" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.read_kobject_user_pipe" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.read_other_stack" name="kernel.memory_protection.userspace.read_other_stack" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.read_priv_stack" name="kernel.memory_protection.userspace.read_priv_stack" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.revoke_noperms_object" name="kernel.memory_protection.userspace.revoke_noperms_object" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.start_kernel_thread" name="kernel.memory_protection.userspace.start_kernel_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.user_mode_enter" name="kernel.memory_protection.userspace.user_mode_enter" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_control" name="kernel.memory_protection.userspace.write_control" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_kernel_data" name="kernel.memory_protection.userspace.write_kernel_data" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_kernram" name="kernel.memory_protection.userspace.write_kernram" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_kernro" name="kernel.memory_protection.userspace.write_kernro" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_kerntext" name="kernel.memory_protection.userspace.write_kerntext" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_kobject_user_pipe" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_other_stack" name="kernel.memory_protection.userspace.write_other_stack" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_priv_stack" name="kernel.memory_protection.userspace.write_priv_stack" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="158" errors="0" failures="0" name="tests_kernel" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:arch.common.xip.globals" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.read_kobject_user_pipe" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.write_kobject_user_pipe" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.half_pipe_block_put_sema" name="kernel.pipe.half_pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.half_pipe_get_put" name="kernel.pipe.half_pipe_get_put" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_alloc" name="kernel.pipe.pipe_alloc" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_block_put" name="kernel.pipe.pipe_block_put" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_block_put_sema" name="kernel.pipe.pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_block_writer_wait" name="kernel.pipe.pipe_block_writer_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_forever_timeout" name="kernel.pipe.pipe_forever_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_forever_wait" name="kernel.pipe.pipe_forever_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_get_fail" name="kernel.pipe.pipe_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_get_invalid_size" name="kernel.pipe.pipe_get_invalid_size" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_get_on_empty_pipe" name="kernel.pipe.pipe_get_on_empty_pipe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_get_put" name="kernel.pipe.pipe_get_put" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_get_timeout" name="kernel.pipe.pipe_get_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_on_multiple_elements" name="kernel.pipe.pipe_on_multiple_elements" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_on_single_elements" name="kernel.pipe.pipe_on_single_elements" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_put_fail" name="kernel.pipe.pipe_put_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_reader_wait" name="kernel.pipe.pipe_reader_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_thread2thread" name="kernel.pipe.pipe_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_timeout" name="kernel.pipe.pipe_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_user_get_fail" name="kernel.pipe.pipe_user_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_user_put_fail" name="kernel.pipe.pipe_user_put_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.pipe_user_thread2thread" name="kernel.pipe.pipe_user_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.pipe.resource_pool_auto_free" name="kernel.pipe.resource_pool_auto_free" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_heap_mem_pool_assign" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.idt_stub" name="arch.interrupt.idt_stub" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.irq_offload" name="arch.interrupt.irq_offload" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.nested_isr" name="arch.interrupt.nested_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.prevent_interruption" name="arch.interrupt.prevent_interruption" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:arch.interrupt.static_idt" name="arch.interrupt.static_idt" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_interrupts" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.kernel_timer_interrupts" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.errno.newlib.thread_context" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.errno.thread_context" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.misra.thread_context" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.thread_context" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_add_part_context_switch" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_add_thread_context_switch" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_remove_part_context_switch" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_protection.userspace.domain_remove_thread_context_switch" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.init" name="net.context.init" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_accept_v4" name="net.context.net_ctx_accept_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_accept_v6" name="net.context.net_ctx_accept_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_bind_fail" name="net.context.net_ctx_bind_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_bind_mcast_success" name="net.context.net_ctx_bind_mcast_success" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_bind_uni_success_v4" name="net.context.net_ctx_bind_uni_success_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_bind_uni_success_v6" name="net.context.net_ctx_bind_uni_success_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_connect_v4" name="net.context.net_ctx_connect_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_connect_v6" name="net.context.net_ctx_connect_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_create" name="net.context.net_ctx_create" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_get_all" name="net.context.net_ctx_get_all" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_get_fail" name="net.context.net_ctx_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_get_success" name="net.context.net_ctx_get_success" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_listen_v4" name="net.context.net_ctx_listen_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_listen_v6" name="net.context.net_ctx_listen_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_put" name="net.context.net_ctx_put" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v4" name="net.context.net_ctx_recv_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v4_again" name="net.context.net_ctx_recv_v4_again" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v4_fail" name="net.context.net_ctx_recv_v4_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v4_reconfig" name="net.context.net_ctx_recv_v4_reconfig" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v4_timeout" name="net.context.net_ctx_recv_v4_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v4_timeout_forever" name="net.context.net_ctx_recv_v4_timeout_forever" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v6" name="net.context.net_ctx_recv_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v6_again" name="net.context.net_ctx_recv_v6_again" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v6_fail" name="net.context.net_ctx_recv_v6_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v6_reconfig" name="net.context.net_ctx_recv_v6_reconfig" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v6_timeout" name="net.context.net_ctx_recv_v6_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_recv_v6_timeout_forever" name="net.context.net_ctx_recv_v6_timeout_forever" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_send_v4" name="net.context.net_ctx_send_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_send_v6" name="net.context.net_ctx_send_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_sendto_v4" name="net.context.net_ctx_sendto_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.context.net_ctx_sendto_v6" name="net.context.net_ctx_sendto_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.dns.dns_query_invalid_context" name="net.dns.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:net.dns.no_ipv6.dns_query_invalid_context" name="net.dns.no_ipv6.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.alert.isr_alert_pending" name="kernel.alert.isr_alert_pending" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.alert.thread_alert_pending" name="kernel.alert.thread_alert_pending" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.timing.pending" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.multiprocessing.wakeup_pending_threads" name="kernel.multiprocessing.wakeup_pending_threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.pending_thread_wakeup" name="kernel.sched.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.object_tracing.obj_tracing" name="kernel.object_tracing.obj_tracing" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_alloc" name="kernel.message_queue.msgq_alloc" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_attrs_get" name="kernel.message_queue.msgq_attrs_get" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_get_fail" name="kernel.message_queue.msgq_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_isr" name="kernel.message_queue.msgq_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_pend_thread" name="kernel.message_queue.msgq_pend_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_purge_when_put" name="kernel.message_queue.msgq_purge_when_put" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_put_fail" name="kernel.message_queue.msgq_put_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_thread" name="kernel.message_queue.msgq_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_thread_overflow" name="kernel.message_queue.msgq_thread_overflow" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_user_attrs_get" name="kernel.message_queue.msgq_user_attrs_get" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_user_get_fail" name="kernel.message_queue.msgq_user_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_user_purge_when_put" name="kernel.message_queue.msgq_user_purge_when_put" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_user_put_fail" name="kernel.message_queue.msgq_user_put_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_user_thread" name="kernel.message_queue.msgq_user_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.message_queue.msgq_user_thread_overflow" name="kernel.message_queue.msgq_user_thread_overflow" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.auto_free" name="kernel.queue.auto_free" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.auto_free" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_alloc" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_get_2threads" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_get_fail" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_isr2thread" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_loop" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_supv_to_user" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_thread2isr" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.poll.queue_thread2thread" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_alloc" name="kernel.queue.queue_alloc" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_get_2threads" name="kernel.queue.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_get_fail" name="kernel.queue.queue_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_isr2thread" name="kernel.queue.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_loop" name="kernel.queue.queue_loop" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_supv_to_user" name="kernel.queue.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_thread2isr" name="kernel.queue.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.queue.queue_thread2thread" name="kernel.queue.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed" name="kernel.workqueue.delayed" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_cancel" name="kernel.workqueue.delayed_cancel" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_resubmit" name="kernel.workqueue.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_resubmit_thread" name="kernel.workqueue.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_cancel_isr" name="kernel.workqueue.delayed_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_cancel_thread" name="kernel.workqueue.delayed_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_submit_isr" name="kernel.workqueue.delayed_work_submit_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_submit_thread" name="kernel.workqueue.delayed_work_submit_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_submit_to_queue_isr" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.delayed_work_submit_to_queue_thread" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.resubmit" name="kernel.workqueue.resubmit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.sequence" name="kernel.workqueue.sequence" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.user_work_submit_to_queue_thread" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.user_workq_granted_access" name="kernel.workqueue.user_workq_granted_access" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.user_workq_granted_access_setup" name="kernel.workqueue.user_workq_granted_access_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.user_workq_start_before_submit" name="kernel.workqueue.user_workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.work_resubmit_to_queue" name="kernel.workqueue.work_resubmit_to_queue" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.work_submit_isr" name="kernel.workqueue.work_submit_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.work_submit_thread" name="kernel.workqueue.work_submit_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.work_submit_to_multipleq" name="kernel.workqueue.work_submit_to_multipleq" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.work_submit_to_queue_isr" name="kernel.workqueue.work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.work_submit_to_queue_thread" name="kernel.workqueue.work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.workqueue.workq_start_before_submit" name="kernel.workqueue.workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="1" errors="0" failures="0" name="tests_crypto" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:crypto.mbedtls.mbedtls" name="crypto.mbedtls.mbedtls" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="35" errors="0" failures="0" name="tests_benchmarks" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:kernel.multiprocessing.coop_resched_threads" name="kernel.multiprocessing.coop_resched_threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.multiprocessing.preempt_resched_threads" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.deadline.deadline" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.lock_preemptible" name="kernel.sched.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.pending_thread_wakeup" name="kernel.sched.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.preempt.preempt" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.priority_cooperative" name="kernel.sched.priority_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.priority_preemptible" name="kernel.sched.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.priority_scheduling" name="kernel.sched.priority_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sched_is_preempt_thread" name="kernel.sched.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sleep_cooperative" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.slice_reset" name="kernel.sched.slice_reset" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.slice_scheduling" name="kernel.sched.slice_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.time_slicing_disable_preemptible" name="kernel.sched.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.time_slicing_preemptible" name="kernel.sched.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.unlock_preemptible" name="kernel.sched.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.wakeup_expired_timer_thread" name="kernel.sched.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.yield_cooperative" name="kernel.sched.yield_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="0" errors="0" failures="0" name="samples" skipped="0" time="0">
  </testsuite>
    <testsuite tests="41" errors="0" failures="0" name="tests_kernel_3" skipped="0" time="0">
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_alloc_align" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_alloc_free_thread" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_alloc_timeout" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_alloc_wait_prio" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_kdefine" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_kdefine_extern" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_kinit" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.memory_slabs.mslab_used_get" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_give_take_from_isr" name="kernel.semaphore.sem_give_take_from_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_measure_timeout_from_thread" name="kernel.semaphore.sem_measure_timeout_from_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_measure_timeouts" name="kernel.semaphore.sem_measure_timeouts" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_multi_take_timeout_diff_sem" name="kernel.semaphore.sem_multi_take_timeout_diff_sem" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_multiple_take_and_timeouts" name="kernel.semaphore.sem_multiple_take_and_timeouts" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_multiple_threads_wait" name="kernel.semaphore.sem_multiple_threads_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_multiple" name="kernel.semaphore.sem_take_multiple" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_no_wait" name="kernel.semaphore.sem_take_no_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_no_wait_fails" name="kernel.semaphore.sem_take_no_wait_fails" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_timeout" name="kernel.semaphore.sem_take_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_timeout_fails" name="kernel.semaphore.sem_take_timeout_fails" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_timeout_forever" name="kernel.semaphore.sem_take_timeout_forever" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sem_take_timeout_isr" name="kernel.semaphore.sem_take_timeout_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sema_count_get" name="kernel.semaphore.sema_count_get" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sema_reset" name="kernel.semaphore.sema_reset" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sema_thread2isr" name="kernel.semaphore.sema_thread2isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.sema_thread2thread" name="kernel.semaphore.sema_thread2thread" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.simple_sem_from_isr" name="kernel.semaphore.simple_sem_from_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.semaphore.simple_sem_from_task" name="kernel.semaphore.simple_sem_from_task" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.cmsis_rtos_v1.semaphore" name="portability.cmsis_rtos_v1.semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.k_sleep" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.common.timing.sleep" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.multiprocessing.sleep_threads" name="kernel.multiprocessing.sleep_threads" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sleep_cooperative" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1060_evk:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
  </testsuite>
</testsuites>
