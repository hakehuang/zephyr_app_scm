<?xml version="1.0"?>
<testsuites>
    <testsuite tests="106" errors="0" failures="6" name="" skipped="1" time="0">
          <testcase classname="mimxrt1010_evk:sample.nfc.hello" name="sample.nfc.hello" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.i2c.i2c_burst_gy271" name="drivers.i2c.i2c_burst_gy271" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.i2c.i2c_gy271" name="drivers.i2c.i2c_gy271" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.i2c_slave.eeprom_slave" name="drivers.i2c_slave.eeprom_slave" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1010_evk:sample.drivers.i2c.fujitsu_fram" name="sample.drivers.i2c.fujitsu_fram" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1010_evk:sample.drivers.i2c_scanner" name="sample.drivers.i2c_scanner" time="0">
          <failure message="failed" type="failure">
          </failure>
          </testcase>
          <testcase classname="mimxrt1010_evk:tracing.backends.openocd" name="tracing.backends.openocd" time="0">
          </testcase>
         <testcase classname="mimxrt1010_evk:kernel.timer.starve.starve" name="kernel.timer.starve.starve" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer" name="kernel.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.monotonic" name="kernel.timer.monotonic" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.monotonic.timer" name="kernel.timer.monotonic.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.time_conversions" name="kernel.timer.tickless.time_conversions" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.time_conversions" name="kernel.timer.time_conversions" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer" name="kernel.timer.timer" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_duration_period" name="kernel.timer.timer_duration_period" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_expirefn_null" name="kernel.timer.timer_expirefn_null" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_k_define" name="kernel.timer.timer_k_define" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_period_0" name="kernel.timer.timer_period_0" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_periodicity" name="kernel.timer.timer_periodicity" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_remaining_get" name="kernel.timer.timer_remaining_get" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_status_get" name="kernel.timer.timer_status_get" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_status_get_anytime" name="kernel.timer.timer_status_get_anytime" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_status_sync" name="kernel.timer.timer_status_sync" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:kernel.timer.timer_user_data" name="kernel.timer.timer_user_data" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_0" name="testing.ztest.verbose_0" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_1" name="testing.ztest.verbose_1" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_2" name="testing.ztest.verbose_2" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.regular_output" name="testing.ztest.regular_output" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.customized_output" name="testing.ztest.customized_output" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.customized_output.assert_pass" name="testing.ztest.customized_output.assert_pass" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:testing.ztest.customized_output.assert_skip" name="testing.ztest.customized_output.assert_skip" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:sample.shell.shell_module.minimal_rtt" name="sample.shell.shell_module.minimal_rtt" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:sample.drivers.current_sensing" name="sample.drivers.current_sensing" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:sample.sensor.thermometer" name="sample.sensor.thermometer" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures" name="libraries.data_structures" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.byte_put_free" name="libraries.data_structures.byte_put_free" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.capacity" name="libraries.data_structures.capacity" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.rbtree.rbtree_spam" name="libraries.data_structures.rbtree.rbtree_spam" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.reset" name="libraries.data_structures.reset" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ring_buffer_main" name="libraries.data_structures.ring_buffer_main" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_alloc_put" name="libraries.data_structures.ringbuffer_alloc_put" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_declare_pow2" name="libraries.data_structures.ringbuffer_declare_pow2" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_declare_size" name="libraries.data_structures.ringbuffer_declare_size" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_init" name="libraries.data_structures.ringbuffer_init" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" name="libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_put_get_isr" name="libraries.data_structures.ringbuffer_put_get_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_put_get_thread" name="libraries.data_structures.ringbuffer_put_get_thread" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_put_get_thread_isr" name="libraries.data_structures.ringbuffer_put_get_thread_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_raw" name="libraries.data_structures.ringbuffer_raw" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.data_structures.ringbuffer_size_put_get_thread_isr" name="libraries.data_structures.ringbuffer_size_put_get_thread_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.async" name="libraries.onoff.async" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.blocked_restart" name="libraries.onoff.blocked_restart" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.cancel_release" name="libraries.onoff.cancel_release" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.cancel_request_ok" name="libraries.onoff.cancel_request_ok" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.cancel_request_waits" name="libraries.onoff.cancel_request_waits" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.client_init_validation" name="libraries.onoff.client_init_validation" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.half_sync" name="libraries.onoff.half_sync" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.request" name="libraries.onoff.request" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.reset" name="libraries.onoff.reset" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.service_init_validation" name="libraries.onoff.service_init_validation" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.sync" name="libraries.onoff.sync" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:libraries.onoff.validate_args" name="libraries.onoff.validate_args" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:arch.interrupt.arm.nmi" name="arch.interrupt.arm.nmi" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:arch.interrupt.arm.nmi.arm_runtime_nmi" name="arch.interrupt.arm.nmi.arm_runtime_nmi" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:arch.interrupt.arm.nmi.nmi_test_isr" name="arch.interrupt.arm.nmi.nmi_test_isr" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.ipc.mailbox" name="drivers.ipc.mailbox" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:sample.display.grove_display" name="sample.display.grove_display" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.poll.uart_fifo_fill" name="drivers.uart.poll.uart_fifo_fill" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.poll.uart_fifo_read" name="drivers.uart.poll.uart_fifo_read" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.poll.uart_poll_in" name="drivers.uart.poll.uart_poll_in" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.poll.uart_poll_out" name="drivers.uart.poll.uart_poll_out" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.shell.uart_fifo_fill" name="drivers.uart.shell.uart_fifo_fill" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.shell.uart_fifo_read" name="drivers.uart.shell.uart_fifo_read" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.shell.uart_poll_in" name="drivers.uart.shell.uart_poll_in" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.shell.uart_poll_out" name="drivers.uart.shell.uart_poll_out" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.chained_read" name="drivers.uart.uart_async_api.chained_read" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.chained_write" name="drivers.uart.uart_async_api.chained_write" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.double_buffer" name="drivers.uart.uart_async_api.double_buffer" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.long_buffers" name="drivers.uart.uart_async_api.long_buffers" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.read_abort" name="drivers.uart.uart_async_api.read_abort" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.single_read" name="drivers.uart.uart_async_api.single_read" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_async_api.write_abort" name="drivers.uart.uart_async_api.write_abort" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_fifo_fill" name="drivers.uart.uart_fifo_fill" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_fifo_read" name="drivers.uart.uart_fifo_read" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_poll_in" name="drivers.uart.uart_poll_in" time="0">
          </testcase>
          <testcase classname="mimxrt1010_evk:drivers.uart.uart_poll_out" name="drivers.uart.uart_poll_out" time="0">
          </testcase>
  </testsuite>
</testsuites>
