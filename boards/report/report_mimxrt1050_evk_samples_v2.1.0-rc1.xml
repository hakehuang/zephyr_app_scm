<?xml version="1.0"?>
<testsuites>
    <testsuite tests="734" errors="0" failures="0" name="" skipped="59" time="0">
      <testcase classname="mimxrt1050_evk:net.dns.mdns_query" name="net.dns.mdns_query" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.mdns_response" name="net.dns.mdns_response" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.assert_tests" name="testing.ztest.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.delay" name="testing.ztest.customized_output.delay" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.event_flags_isr" name="testing.ztest.customized_output.event_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.event_flags_signalled" name="testing.ztest.customized_output.event_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.kernel_apis" name="testing.ztest.customized_output.kernel_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mempool" name="testing.ztest.customized_output.mempool" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mempool_dynamic" name="testing.ztest.customized_output.mempool_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.messageq" name="testing.ztest.customized_output.messageq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mutex" name="testing.ztest.customized_output.mutex" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mutex_lock_timeout" name="testing.ztest.customized_output.mutex_lock_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.semaphore" name="testing.ztest.customized_output.semaphore" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.t- test_thread_prio_dynamic" name="testing.ztest.customized_output.t- test_thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.te6" name="testing.ztest.customized_output.te6" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thrd B started." name="testing.ztest.customized_output.thrd B started." time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_apis" name="testing.ztest.customized_output.thread_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_apis_dynamic" name="testing.ztest.customized_output.thread_apis_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_flags_isr" name="testing.ztest.customized_output.thread_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_flags_no_wait_timeout" name="testing.ztest.customized_output.thread_flags_no_wait_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_flags_signalled" name="testing.ztest.customized_output.thread_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_prio" name="testing.ztest.customized_output.thread_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_prio_dynamic" name="testing.ztest.customized_output.thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.empty_test" name="testing.ztest.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.mock.multi_value_tests" name="testing.ztest.mock.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.mock.parameter_tests" name="testing.ztest.mock.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.mock.return_value_tests" name="testing.ztest.mock.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.unit.multi_value_tests" name="testing.ztest.unit.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.unit.parameter_tests" name="testing.ztest.unit.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.unit.return_value_tests" name="testing.ztest.unit.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.threads.dynamic.thread_index_management" name="kernel.threads.dynamic.thread_index_management" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.threads.thread_index_management" name="kernel.threads.thread_index_management" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.management.kdefine_preempt_thread" name="net.management.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.management.mgmt" name="net.management.mgmt" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:power_management.power_states.power_state" name="power_management.power_states.power_state" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.allnodes" name="net.mld.allnodes" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.allny_join_group" name="net.mld.allny_join_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.catch_join_group" name="net.mld.catch_join_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.catch_leave_group" name="net.mld.catch_leave_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.catch_query" name="net.mld.catch_query" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.join_group" name="net.mld.join_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.leave_group" name="net.mld.leave_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.mld_setup" name="net.mld.mld_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_accept_v4" name="net.mld.net_ctx_accept_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_bind_fail" name="net.mld.net_ctx_bind_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_bind_mcast_success" name="net.mld.net_ctx_bind_mcast_success" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_bind_uni_success_v4" name="net.mld.net_ctx_bind_uni_success_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_bind_uni_success_v6" name="net.mld.net_ctx_bind_uni_success_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_lis net_ctx_sendto_v6" name="net.mld.net_ctx_lis net_ctx_sendto_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_liste=======" name="net.mld.net_ctx_liste=======" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_listen_v6" name="net.mld.net_ctx_listen_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_recv_v4" name="net.mld.net_ctx_recv_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_recv_v4_again" name="net.mld.net_ctx_recv_v4_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_recv_v4_reconfig" name="net.mld.net_ctx_recv_v4_reconfig" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_recv_v6" name="net.mld.net_ctx_recv_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_recv_v6_fail" name="net.mld.net_ctx_recv_v6_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_recv_v6_reconfig" name="net.mld.net_ctx_recv_v6_reconfig" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_send_v4" name="net.mld.net_ctx_send_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_send_v6" name="net.mld.net_ctx_send_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_sendto_v4" name="net.mld.net_ctx_sendto_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.net_ctx_sendto_v6" name="net.mld.net_ctx_sendto_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.solicit_node" name="net.mld.solicit_node" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.tesASS - verify_leave_group" name="net.mld.tesASS - verify_leave_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.verify_join- join_group" name="net.mld.verify_join- join_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.verify_join_group" name="net.mld.verify_join_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.verify_leave_group" name="net.mld.verify_leave_group" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mld.verify_send_report" name="net.mld.verify_send_report" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.coap.mqtt_packet" name="net.coap.mqtt_packet" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_connect" name="net.mqtt.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_disconnect" name="net.mqtt.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_init" name="net.mqtt.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_pingreq" name="net.mqtt.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_publish" name="net.mqtt.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.packet.mqtt_packet" name="net.mqtt.packet.mqtt_packet" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.packet.neighbor" name="net.mqtt.packet.neighbor" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_connect" name="net.mqtt.subscriber.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_disconnect" name="net.mqtt.subscriber.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_init" name="net.mqtt.subscriber.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_subscribe" name="net.mqtt.subscriber.mqtt_subscribe" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_unsubscribe" name="net.mqtt.subscriber.mqtt_unsubscribe" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_connect" name="net.mqtt.tls.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_disconnect" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_init" name="net.mqtt.tls.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_pingreq" name="net.mqtt.tls.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_publish" name="net.mqtt.tls.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.mbedtls.mbedtls" name="crypto.mbedtls.mbedtls" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_connect" name="net.mqtt.tls.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_disconnect" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_init" name="net.mqtt.tls.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_pingreq" name="net.mqtt.tls.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_publish" name="net.mqtt.tls.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.create_sockets" name="net.socket.register.tls.create_sockets" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_multiple_chunks" name="net.socket.register.tls.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_two_chunks" name="net.socket.register.tls.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials" name="net.tls_credentials" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_add" name="net.tls_credentials.credential_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_delete" name="net.tls_credentials.credential_delete" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_get" name="net.tls_credentials.credential_get" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_internal_iterate" name="net.tls_credentials.credential_internal_iterate" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_connect" name="net.mqtt.subscriber.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_disconnect" name="net.mqtt.subscriber.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_init" name="net.mqtt.subscriber.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_subscribe" name="net.mqtt.subscriber.mqtt_subscribe" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_unsubscribe" name="net.mqtt.subscriber.mqtt_unsubscribe" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.neighbour.addr_parse" name="net.neighbour.addr_parse" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.neighbour.neighbor" name="net.neighbour.neighbor" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.neighbour.net_addr" name="net.neighbour.net_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.neighbour.net_addrt - test_ipv4_ntop_3" name="net.neighbour.net_addrt - test_ipv4_ntop_3" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.neighbour.tetarting test - test_ipv4_ntop_3" name="net.neighbour.tetarting test - test_ipv4_ntop_3" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:benchmark.boot_time.dns_query_invalid_context" name="benchmark.boot_time.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.errno.newlib.thread_context" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.errno.thread_context" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.misra.thread_context" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.thread_context" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.fifo.timeout.dns_query_invalid_context" name="kernel.fifo.timeout.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.userspace.domain_add_part_context_switch" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.userspace.domain_add_thread_context_switch" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.userspace.domain_remove_part_context_switch" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.userspace.domain_remove_thread_context_switch" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_slabs.domain_add_part_context_switch" name="kernel.memory_slabs.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_slabs.domain_add_part_context_switchruction address (r15/pc): 0x00000c34" name="kernel.memory_slabs.domain_add_part_context_switchruction address (r15/pc): 0x00000c34" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_slabs.domain_add_thread_context_switch" name="kernel.memory_slabs.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_slabs.domain_remove_part_context_switch" name="kernel.memory_slabs.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_slabs.domain_remove_thread_context_switch" name="kernel.memory_slabs.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.init" name="net.context.init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_accept_v4" name="net.context.net_ctx_accept_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_accept_v6" name="net.context.net_ctx_accept_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_bind_fail" name="net.context.net_ctx_bind_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_bind_mcast_success" name="net.context.net_ctx_bind_mcast_success" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_bind_uni_success_v4" name="net.context.net_ctx_bind_uni_success_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_bind_uni_success_v6" name="net.context.net_ctx_bind_uni_success_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_connect_v4" name="net.context.net_ctx_connect_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_connect_v6" name="net.context.net_ctx_connect_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_create" name="net.context.net_ctx_create" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_get_all" name="net.context.net_ctx_get_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_get_fail" name="net.context.net_ctx_get_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_get_success" name="net.context.net_ctx_get_success" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_listen_v4" name="net.context.net_ctx_listen_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_listen_v6" name="net.context.net_ctx_listen_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_put" name="net.context.net_ctx_put" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v4" name="net.context.net_ctx_recv_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v4_again" name="net.context.net_ctx_recv_v4_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v4_fail" name="net.context.net_ctx_recv_v4_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v4_reconfig" name="net.context.net_ctx_recv_v4_reconfig" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v4_timeout" name="net.context.net_ctx_recv_v4_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v4_timeout_forever" name="net.context.net_ctx_recv_v4_timeout_forever" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v6" name="net.context.net_ctx_recv_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v6_again" name="net.context.net_ctx_recv_v6_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v6_fail" name="net.context.net_ctx_recv_v6_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v6_reconfig" name="net.context.net_ctx_recv_v6_reconfig" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v6_timeout" name="net.context.net_ctx_recv_v6_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_recv_v6_timeout_forever" name="net.context.net_ctx_recv_v6_timeout_forever" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_send_v4" name="net.context.net_ctx_send_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_send_v6" name="net.context.net_ctx_send_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_sendto_v4" name="net.context.net_ctx_sendto_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.context.net_ctx_sendto_v6" name="net.context.net_ctx_sendto_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.dns_query_invalid_context" name="net.dns.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.dns_query_invalid_context" name="net.dns.no_ipv6.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.change_promisc_mode_off" name="kernel.memory_protection.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.change_to_same_promisc_mode" name="kernel.memory_protection.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.check_promisc_mode_4_addr_add" name="kernel.timer.check_promisc_mode_4_addr_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.check_promisc_mode_off" name="kernel.timer.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.check_promisc_mode_on" name="kernel.timer.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.set_promisc_mode_on" name="kernel.timer.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.v4_addr_add_usASS - check_promisc_mode_off" name="kernel.timer.v4_addr_add_usASS - check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_promisc_mode_off" name="net.ethernet_mgmt.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_promisc_mode_on" name="net.ethernet_mgmt.change_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_to_same_promisc_mode" name="net.ethernet_mgmt.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.check_promisc_mode_off" name="net.iface.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.check_promisc_mode_on" name="net.iface.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.check_promisc_mode_off" name="net.iface.no_userspace_allowed.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.check_promisc_mode_on" name="net.iface.no_userspace_allowed.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_off" name="net.iface.no_userspace_allowed.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_on" name="net.iface.no_userspace_allowed.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_on_ag==========================" name="net.iface.no_userspace_allowed.set_promisc_mode_on_ag==========================" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_on_again" name="net.iface.no_userspace_allowed.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.set_promisc_mode_off" name="net.iface.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.set_promisc_mode_on" name="net.iface.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.set_promisc_mode_on_again" name="net.iface.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.check_promisc_mode_off" name="net.iface.with_userspace.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.check_promisc_mode_on" name="net.iface.with_userspace.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.set_promisc_mode_off" name="net.iface.with_userspace.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.set_promisc_mode_on" name="net.iface.with_userspace.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.set_promisc_mode_on_again" name="net.iface.with_userspace.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.iface_setup" name="net.promisc.iface_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.recv_data" name="net.promisc.recv_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_off" name="net.promisc.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_off_again" name="net.promisc.set_promisc_mode_off_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_on" name="net.promisc.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_on_again" name="net.promisc.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.verify_data" name="net.promisc.verify_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.set_promisc_mode_off" name="net.util.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.set_promisc_mode_off_again" name="net.util.set_promisc_mode_off_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_add" name="kernel.stack.route_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_add_many" name="kernel.stack.route_add_many" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_adhop" name="kernel.stack.route_adhop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_del" name="kernel.stack.route_del" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_del_again" name="kernel.stack.route_del_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_del_many" name="kernel.stack.route_del_many" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_del_nexthop" name="kernel.stack.route_del_nexthop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_del_nexthop_again" name="kernel.stack.route_del_nexthop_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_delookup_ok" name="kernel.stack.route_delookup_ok" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_get_nexthop" name="kernel.stack.route_get_nexthop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_lookup_fail" name="kernel.stack.route_lookup_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.stack.route_lookup_ok" name="kernel.stack.route_lookup_ok" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.init" name="net.route.init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.isr_stack_play" name="net.route.isr_stack_play" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.net_ctx_create" name="net.route.net_ctx_create" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.populate_nbr_cache" name="net.route.populate_nbr_cache" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_add" name="net.route.route_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_add_many" name="net.route.route_add_many" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_del" name="net.route.route_del" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_del_again" name="net.route.route_del_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_del_many" name="net.route.route_del_many" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_del_nexthop" name="net.route.route_del_nexthop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_del_nexthop_again" name="net.route.route_del_nexthop_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_get_nexthop" name="net.route.route_get_nexthop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_lookup_fail" name="net.route.route_lookup_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_lookup_ok" name="net.route.route_lookup_ok" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.route.route_update" name="net.route.route_update" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.filter_handling" name="portability.posix.filter_handling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_close" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_fd_leak" name="portability.posix.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_mkdir" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_mount" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_open" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_read" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_readdir" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_unlink" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_write" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mutex.mutex_normal" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mutex.recursive_mutex" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_multiple_threads_single_key" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_normal_mutex" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_pthread_execution" name="portability.posix.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_pthread_termination" name="portability.posix.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_realtime" name="portability.posix.posix_realtime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_recursive_mutex" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_rw_lock" name="portability.posix.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_single_thread_multiple_keys" name="portability.posix.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread" name="portability.posix.pthread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_cancel" name="portability.posix.pthread_cancel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_equal" name="portability.posix.pthread_equal" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_join" name="portability.posix.pthread_join" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_key.multiple_threads_single_key" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_key.single_thread_multiple_keys" name="portability.posix.pthread_key.single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.rw_lock" name="portability.posix.rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.sema" name="portability.posix.sema" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.filter_handling" name="portability.posix.filter_handling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_close" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_fd_leak" name="portability.posix.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_mkdir" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_mount" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_open" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_read" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_readdir" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_unlink" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_write" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mutex.mutex_normal" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mutex.recursive_mutex" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_multiple_threads_single_key" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_normal_mutex" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_pthread_execution" name="portability.posix.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_pthread_termination" name="portability.posix.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_realtime" name="portability.posix.posix_realtime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_recursive_mutex" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_rw_lock" name="portability.posix.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_single_thread_multiple_keys" name="portability.posix.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread" name="portability.posix.pthread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_cancel" name="portability.posix.pthread_cancel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_equal" name="portability.posix.pthread_equal" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_join" name="portability.posix.pthread_join" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_key.multiple_threads_single_key" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_key.single_thread_multiple_keys" name="portability.posix.pthread_key.single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.rw_lock" name="portability.posix.rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.sema" name="portability.posix.sema" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.filter_handling" name="portability.posix.filter_handling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_close" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_fd_leak" name="portability.posix.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_mkdir" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_mount" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_open" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_read" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_readdir" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_unlink" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.fs_write" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mutex.mutex_normal" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.mutex.recursive_mutex" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_multiple_threads_single_key" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_normal_mutex" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_pthread_execution" name="portability.posix.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_pthread_termination" name="portability.posix.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_realtime" name="portability.posix.posix_realtime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_recursive_mutex" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_rw_lock" name="portability.posix.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_single_thread_multiple_keys" name="portability.posix.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread" name="portability.posix.pthread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_cancel" name="portability.posix.pthread_cancel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_equal" name="portability.posix.pthread_equal" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_join" name="portability.posix.pthread_join" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_key.multiple_threads_single_key" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.pthread_key.single_thread_multiple_keys" name="portability.posix.pthread_key.single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.rw_lock" name="portability.posix.rw_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.sema" name="portability.posix.sema" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.change_promisc_mode_off" name="kernel.memory_protection.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.change_to_same_promisc_mode" name="kernel.memory_protection.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_protection.sys_sem.sprintf_misc" name="kernel.memory_protection.sys_sem.sprintf_misc" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.check_promisc_mode_4_addr_add" name="kernel.timer.check_promisc_mode_4_addr_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.check_promisc_mode_off" name="kernel.timer.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.check_promisc_mode_on" name="kernel.timer.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.set_promisc_mode_on" name="kernel.timer.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.v4_addr_add_usASS - check_promisc_mode_off" name="kernel.timer.v4_addr_add_usASS - check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:libraries.libc.sprintf_misc" name="libraries.libc.sprintf_misc" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.array" name="misc.app_dev.libcxx.array" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.exceptions.array" name="misc.app_dev.libcxx.exceptions.array" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.exceptions.sched_is_preempt_thread" name="misc.app_dev.libcxx.exceptions.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.exceptions.unlock_nested_sched_lock" name="misc.app_dev.libcxx.exceptions.unlock_nested_sched_lock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.exceptions.vector" name="misc.app_dev.libcxx.exceptions.vector" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.msg_receiver_unlimited" name="misc.app_dev.libcxx.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:misc.app_dev.libcxx.vector" name="misc.app_dev.libcxx.vector" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_promisc_mode_off" name="net.ethernet_mgmt.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_promisc_mode_on" name="net.ethernet_mgmt.change_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_to_same_promisc_mode" name="net.ethernet_mgmt.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.check_promisc_mode_off" name="net.iface.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.check_promisc_mode_on" name="net.iface.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.check_promisc_mode_off" name="net.iface.no_userspace_allowed.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.check_promisc_mode_on" name="net.iface.no_userspace_allowed.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_off" name="net.iface.no_userspace_allowed.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_on" name="net.iface.no_userspace_allowed.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_on_ag==========================" name="net.iface.no_userspace_allowed.set_promisc_mode_on_ag==========================" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.set_promisc_mode_on_again" name="net.iface.no_userspace_allowed.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.set_promisc_mode_off" name="net.iface.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.set_promisc_mode_on" name="net.iface.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.set_promisc_mode_on_again" name="net.iface.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.check_promisc_mode_off" name="net.iface.with_userspace.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.check_promisc_mode_on" name="net.iface.with_userspace.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.set_promisc_mode_off" name="net.iface.with_userspace.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.set_promisc_mode_on" name="net.iface.with_userspace.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.set_promisc_mode_on_again" name="net.iface.with_userspace.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.iface_setup" name="net.promisc.iface_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.recv_data" name="net.promisc.recv_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_off" name="net.promisc.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_off_again" name="net.promisc.set_promisc_mode_off_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_on" name="net.promisc.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.set_promisc_mode_on_again" name="net.promisc.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.promisc.verify_data" name="net.promisc.verify_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.set_promisc_mode_off" name="net.util.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.set_promisc_mode_off_again" name="net.util.set_promisc_mode_off_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.timer.select_src_iface" name="kernel.timer.select_src_iface" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.no_userspace_allowed.select_src_iface" name="net.iface.no_userspace_allowed.select_src_iface" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.select_src_iface" name="net.iface.select_src_iface" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.iface.with_userspace.select_src_iface" name="net.iface.with_userspace.select_src_iface" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.select" name="net.socket.select" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_select" name="shell.cmd_select" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.select" name="shell.select" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_hostname" name="net.app.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_hostname_fail" name="net.app.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_peer" name="net.app.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_peer_addr" name="net.app.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_peer_with_port" name="net.app.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_hostname" name="net.app.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_hostname_fail" name="net.app.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_peer" name="net.app.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_peer_addr" name="net.app.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_peer_with_port" name="net.app.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp_server_init" name="net.app.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp_server_listen" name="net.app.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_hostname" name="net.app.no-ipv4.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_hostname_fail" name="net.app.no-ipv4.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_peer" name="net.app.no-ipv4.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_peer_addr" name="net.app.no-ipv4.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_peer_with_port" name="net.app.no-ipv4.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_hostname" name="net.app.no-ipv4.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_hostname_fail" name="net.app.no-ipv4.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_peer" name="net.app.no-ipv4.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_peer_addr" name="net.app.no-ipv4.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_peer_with_port" name="net.app.no-ipv4.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp_server_init" name="net.app.no-ipv4.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp_server_listen" name="net.app.no-ipv4.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_hostname" name="net.app.no-ipv6.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_hostname_fail" name="net.app.no-ipv6.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_peer" name="net.app.no-ipv6.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_peer_addr" name="net.app.no-ipv6.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_peer_with_port" name="net.app.no-ipv6.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_hostname" name="net.app.no-ipv6.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_hostname_fail" name="net.app.no-ipv6.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_peer" name="net.app.no-ipv6.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_peer_addr" name="net.app.no-ipv6.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_peer_with_port" name="net.app.no-ipv6.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp_server_init" name="net.app.no-ipv6.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp_server_listen" name="net.app.no-ipv6.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_hostname" name="net.app.with-dns.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_hostname_fail" name="net.app.with-dns.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_peer" name="net.app.with-dns.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_peer_addr" name="net.app.with-dns.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_peer_with_port" name="net.app.with-dns.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_hostname" name="net.app.with-dns.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_hostname_fail" name="net.app.with-dns.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_peer" name="net.app.with-dns.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_peer_addr" name="net.app.with-dns.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_peer_with_port" name="net.app.with-dns.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp_server_init" name="net.app.with-dns.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp_server_listen" name="net.app.with-dns.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.arm_thread_swap" name="net.socket.tcp.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.open_close_immediately" name="net.socket.tcp.open_close_immediately" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_accept_timeout" name="net.socket.tcp.v4_accept_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_send_recv" name="net.socket.tcp.v4_send_recv" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_sendto_recvfrom" name="net.socket.tcp.v4_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_sendto_recvfrom_null_dest" name="net.socket.tcp.v4_sendto_recvfrom_null_dest" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v6_send_recv" name="net.socket.tcp.v6_send_recv" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v6_sendto_recvfrom" name="net.socket.tcp.v6_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v6_sendto_recvfrom_null_dest" name="net.socket.tcp.v6_sendto_recvfrom_null_dest" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tcp" name="net.tcp" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_hostname" name="net.app.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_hostname_fail" name="net.app.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_peer" name="net.app.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_peer_addr" name="net.app.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp4_client_peer_with_port" name="net.app.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_hostname" name="net.app.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_hostname_fail" name="net.app.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_peer" name="net.app.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_peer_addr" name="net.app.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp6_client_peer_with_port" name="net.app.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp_server_init" name="net.app.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.app_tcp_server_listen" name="net.app.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_hostname" name="net.app.no-ipv4.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_hostname_fail" name="net.app.no-ipv4.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_peer" name="net.app.no-ipv4.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_peer_addr" name="net.app.no-ipv4.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp4_client_peer_with_port" name="net.app.no-ipv4.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_hostname" name="net.app.no-ipv4.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_hostname_fail" name="net.app.no-ipv4.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_peer" name="net.app.no-ipv4.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_peer_addr" name="net.app.no-ipv4.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp6_client_peer_with_port" name="net.app.no-ipv4.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp_server_init" name="net.app.no-ipv4.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv4.app_tcp_server_listen" name="net.app.no-ipv4.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_hostname" name="net.app.no-ipv6.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_hostname_fail" name="net.app.no-ipv6.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_peer" name="net.app.no-ipv6.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_peer_addr" name="net.app.no-ipv6.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp4_client_peer_with_port" name="net.app.no-ipv6.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_hostname" name="net.app.no-ipv6.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_hostname_fail" name="net.app.no-ipv6.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_peer" name="net.app.no-ipv6.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_peer_addr" name="net.app.no-ipv6.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp6_client_peer_with_port" name="net.app.no-ipv6.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp_server_init" name="net.app.no-ipv6.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.no-ipv6.app_tcp_server_listen" name="net.app.no-ipv6.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_hostname" name="net.app.with-dns.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_hostname_fail" name="net.app.with-dns.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_peer" name="net.app.with-dns.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_peer_addr" name="net.app.with-dns.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp4_client_peer_with_port" name="net.app.with-dns.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_hostname" name="net.app.with-dns.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_hostname_fail" name="net.app.with-dns.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_peer" name="net.app.with-dns.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_peer_addr" name="net.app.with-dns.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp6_client_peer_with_port" name="net.app.with-dns.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp_server_init" name="net.app.with-dns.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.app.with-dns.app_tcp_server_listen" name="net.app.with-dns.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.arm_thread_swap" name="net.socket.tcp.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.open_close_immediately" name="net.socket.tcp.open_close_immediately" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_accept_timeout" name="net.socket.tcp.v4_accept_timeout" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_send_recv" name="net.socket.tcp.v4_send_recv" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_sendto_recvfrom" name="net.socket.tcp.v4_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v4_sendto_recvfrom_null_dest" name="net.socket.tcp.v4_sendto_recvfrom_null_dest" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v6_send_recv" name="net.socket.tcp.v6_send_recv" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v6_sendto_recvfrom" name="net.socket.tcp.v6_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.tcp.v6_sendto_recvfrom_null_dest" name="net.socket.tcp.v6_sendto_recvfrom_null_dest" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tcp" name="net.tcp" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials" name="net.tls_credentials" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_add" name="net.tls_credentials.credential_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_delete" name="net.tls_credentials.credential_delete" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_get" name="net.tls_credentials.credential_get" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_internal_iterate" name="net.tls_credentials.credential_internal_iterate" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_status" name="net.socket.mgmt.trickle_1_status" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_stopped" name="net.socket.mgmt.trickle_1_stopped" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_update" name="net.socket.mgmt.trickle_1_update" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_wa====================================" name="net.socket.mgmt.trickle_1_wa====================================" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_wait" name="net.socket.mgmt.trickle_1_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_wait_long" name="net.socket.mgmt.trickle_1_wait_long" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_2_inc" name="net.socket.mgmt.trickle_2_inc" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_2_status" name="net.socket.mgmt.trickle_2_status" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.block1_size" name="net.trickle.block1_size" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.block2_siformed_opt_ext" name="net.trickle.block2_siformed_opt_ext" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.block2_size" name="net.trickle.block2_size" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.init" name="net.trickle.init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.match_path_uri" name="net.trickle.match_path_uri" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.parse_malformed_marker" name="net.trickle.parse_malformed_marker" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.parse_malformed_opt_ext" name="net.trickle.parse_malformed_opt_ext" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.parse_malformed_opt_len_ext" name="net.trickle.parse_malformed_opt_len_ext" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_1_status" name="net.trickle.trickle_1_status" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_1_stopped" name="net.trickle.trickle_1_stopped" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_1_update" name="net.trickle.trickle_1_update" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_1_wait" name="net.trickle.trickle_1_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_1_wait_long" name="net.trickle.trickle_1_wait_long" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_2_inc" name="net.trickle.trickle_2_inc" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_2_status" name="net.trickle.trickle_2_status" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_2_wait" name="net.trickle.trickle_2_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_create" name="net.trickle.trickle_create" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_start" name="net.trickle.trickle_start" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.trickle.trickle_stop" name="net.trickle.trickle_stop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.workqueue.timestamp_cleanup" name="kernel.workqueue.timestamp_cleanup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.address_setup" name="net.timestamp.address_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.check_timestamp_after_enabling" name="net.timestamp.check_timestamp_after_enabling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.check_timestamp_before_enabling" name="net.timestamp.check_timestamp_before_enabling" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.rx_chksum_offload_enabled_test_v4" name="net.timestamp.rx_chksum_offload_enabled_test_v4" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.rx_chksum_offload_enabled_test_v6" name="net.timestamp.rx_chksum_offload_enabled_test_v6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.timestamp_cleanup" name="net.timestamp.timestamp_cleanup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.timestamp_setup" name="net.timestamp.timestamp_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.timestamp_setup_2nd_iface" name="net.timestamp.timestamp_setup_2nd_iface" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.timestamp.timestamp_setup_all" name="net.timestamp.timestamp_setup_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.fifo.timeout.poll.vlan_disable_all" name="kernel.fifo.timeout.poll.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.vlan_disable_all" name="net.dns.no_ipv6.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.vlan_send_data" name="net.dns.no_ipv6.vlan_send_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.address_setup" name="net.vlan.address_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.read (q order: 4, t/o: 70, fifo 0x2000001c)" name="net.vlan.read (q order: 4, t/o: 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeouer: 4, t/o: 70, fifo 0x2000001c)" name="net.vlan.timeouer: 4, t/o: 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_p 70, fifo 0x2000001c)" name="net.vlan.timeout_threads_p 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_fail_on_fi00001c)" name="net.vlan.timeout_threads_pend_fail_on_fi00001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_fail_on_fifo" name="net.vlan.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_on_dual_fifos" name="net.vlan.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_on_fifo" name="net.vlan.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_disable" name="net.vlan.vlan_disable" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_disable_all" name="net.vlan.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_enable" name="net.vlan.vlan_enable" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_enable_all" name="net.vlan.vlan_enable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_send_data" name="net.vlan.vlan_send_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_setup" name="net.vlan.vlan_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_tci" name="net.vlan.vlan_tci" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.fifo.timeout.poll.vlan_disable_all" name="kernel.fifo.timeout.poll.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.vlan_disable_all" name="net.dns.no_ipv6.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.vlan_send_data" name="net.dns.no_ipv6.vlan_send_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.address_setup" name="net.vlan.address_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.read (q order: 4, t/o: 70, fifo 0x2000001c)" name="net.vlan.read (q order: 4, t/o: 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeouer: 4, t/o: 70, fifo 0x2000001c)" name="net.vlan.timeouer: 4, t/o: 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_p 70, fifo 0x2000001c)" name="net.vlan.timeout_threads_p 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_fail_on_fi00001c)" name="net.vlan.timeout_threads_pend_fail_on_fi00001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_fail_on_fifo" name="net.vlan.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_on_dual_fifos" name="net.vlan.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_on_fifo" name="net.vlan.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_disable" name="net.vlan.vlan_disable" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_disable_all" name="net.vlan.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_enable" name="net.vlan.vlan_enable" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_enable_all" name="net.vlan.vlan_enable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_send_data" name="net.vlan.vlan_send_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_setup" name="net.vlan.vlan_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_tci" name="net.vlan.vlan_tci" time="0">
      </testcase>
  </testsuite>
</testsuites>
