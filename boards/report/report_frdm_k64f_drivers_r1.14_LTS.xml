<?xml version="1.0"?>
<testsuites>
    <testsuite tests="280" errors="0" failures="0" name="" skipped="69" time="0">
      <testcase classname="frdm_k64f:kernel.multiprocessing.spinlock_basic" name="kernel.multiprocessing.spinlock_basic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.multiprocessing.spinlock_bounce" name="kernel.multiprocessing.spinlock_bounce" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.spi.testing_spi" name="peripheral.spi.testing_spi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.assert_mem_equal" name="buildsystem.include_file.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_gz_inc_file" name="buildsystem.include_file.gen_gz_inc_file" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_gz_inc_file_mtime_arg" name="buildsystem.include_file.gen_gz_inc_file_mtime_arg" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_gz_inc_file_no_mtime" name="buildsystem.include_file.gen_gz_inc_file_no_mtime" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_inc_file" name="buildsystem.include_file.gen_inc_file" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:kernel.device.build_suspend_device_list" name="kernel.device.build_suspend_device_list" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:kernel.device.pm.build_suspend_device_list" name="kernel.device.pm.build_suspend_device_list" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_fifS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="kernel.fifo.timeout.poll.timeout_fifS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:net.6lo.pipe_user_putphyr OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="net.6lo.pipe_user_putphyr OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:net.coap.build_empty_pdu" name="net.coap.build_empty_pdu" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:net.coap.build_simple_pdu" name="net.coap.build_simple_pdu" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.assert_tests" name="testing.ztest.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.delay" name="testing.ztest.customized_output.delay" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.event_flags_isr" name="testing.ztest.customized_output.event_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.event_flags_signalled" name="testing.ztest.customized_output.event_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.kernel_apis" name="testing.ztest.customized_output.kernel_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.mempool" name="testing.ztest.customized_output.mempool" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.mempool_dynamic" name="testing.ztest.customized_output.mempool_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.messageq" name="testing.ztest.customized_output.messageq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.mutex" name="testing.ztest.customized_output.mutex" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.mutex_lock_timeout" name="testing.ztest.customized_output.mutex_lock_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.semaphore" name="testing.ztest.customized_output.semaphore" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.t- test_thread_prio_dynamic" name="testing.ztest.customized_output.t- test_thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.te6" name="testing.ztest.customized_output.te6" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thrd B started." name="testing.ztest.customized_output.thrd B started." time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_apis" name="testing.ztest.customized_output.thread_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_apis_dynamic" name="testing.ztest.customized_output.thread_apis_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_flags_isr" name="testing.ztest.customized_output.thread_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_flags_no_wait_timeout" name="testing.ztest.customized_output.thread_flags_no_wait_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_flags_signalled" name="testing.ztest.customized_output.thread_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_prio" name="testing.ztest.customized_output.thread_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.thread_prio_dynamic" name="testing.ztest.customized_output.thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.empty_test" name="testing.ztest.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.mock.multi_value_tests" name="testing.ztest.mock.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.mock.parameter_tests" name="testing.ztest.mock.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.mock.return_value_tests" name="testing.ztest.mock.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.unit.multi_value_tests" name="testing.ztest.unit.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.unit.parameter_tests" name="testing.ztest.unit.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.unit.return_value_tests" name="testing.ztest.unit.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:peripheral.i2c.i2c_burst_gy271" name="peripheral.i2c.i2c_burst_gy271" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.i2c.i2c_gy271" name="peripheral.i2c.i2c_gy271" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.i2c_slave.eeprom_slave" name="peripheral.i2c_slave.eeprom_slave" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_r" name="kernel.memory_protection.sys_sem.nouser.triggered_r" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_cancel_from_queue_isr" name="kernel.memory_protection.sys_sem.nouser.triggered_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_cancel_from_queue_thread" name="kernel.memory_protection.sys_sem.nouser.triggered_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_submit_isr" name="kernel.memory_protection.sys_sem.nouser.triggered_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_submit_thread" name="kernel.memory_protection.sys_sem.nouser.triggered_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_submit_to_queue_isr" name="kernel.memory_protection.sys_sem.nouser.triggered_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_submit_to_queue_thread" name="kernel.memory_protection.sys_sem.nouser.triggered_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.sys_sem.nouser.triggered_work_submitest_delayed_work_cancel_from_queue_isr" name="kernel.memory_protection.sys_sem.nouser.triggered_work_submitest_delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.already_triggered" name="kernel.workqueue.already_triggered" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered" name="kernel.workqueue.triggered" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_no_wait" name="kernel.workqueue.triggered_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_no_wait_expired" name="kernel.workqueue.triggered_no_wait_expired" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_resubmit" name="kernel.workqueue.triggered_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_wait" name="kernel.workqueue.triggered_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_wait_expired" name="kernel.workqueue.triggered_wait_expired" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_cancel_from_queue_isr" name="kernel.workqueue.triggered_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_cancel_from_queue_thread" name="kernel.workqueue.triggered_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_cancel_isr" name="kernel.workqueue.triggered_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_cancel_thread" name="kernel.workqueue.triggered_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_submit_isr" name="kernel.workqueue.triggered_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_submit_thread" name="kernel.workqueue.triggered_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_submit_to_queue_isr" name="kernel.workqueue.triggered_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.triggered_work_submit_to_queue_thread" name="kernel.workqueue.triggered_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.entropy_get_entropy" name="libraries.libc.minimal.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.entropy.entropy_get_entropy" name="peripheral.entropy.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.device_id_get" name="kernel.poll.device_id_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.device_id.device_id_get" name="peripheral.device_id.device_id_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_add_remove" name="peripheral.gpio.gpio_callback_add_remove" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_edge_high" name="peripheral.gpio.gpio_callback_edge_high" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_edge_low" name="peripheral.gpio.gpio_callback_edge_low" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_enable_disable" name="peripheral.gpio.gpio_callback_enable_disable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_level_high" name="peripheral.gpio.gpio_callback_level_high" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_level_low" name="peripheral.gpio.gpio_callback_level_low" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_callback_self_remove" name="peripheral.gpio.gpio_callback_self_remove" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.gpio.gpio_pin_read_write" name="peripheral.gpio.gpio_pin_read_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.pinmux.pinmux_gpio" name="peripheral.pinmux.pinmux_gpio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.watchdog" name="peripheral.watchdog" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.watchdog.wdt" name="peripheral.watchdog.wdt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_fifo_fill" name="peripheral.uart.poll.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_fifo_read" name="peripheral.uart.poll.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_poll_in" name="peripheral.uart.poll.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_poll_out" name="peripheral.uart.poll.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_fifo_fill" name="peripheral.uart.shell.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_fifo_read" name="peripheral.uart.shell.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.uart_fifo_fill" name="peripheral.uart.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.uart_fifo_read" name="peripheral.uart.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.uart_poll_in" name="peripheral.uart.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.uart_poll_out" name="peripheral.uart.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.create_sockets" name="kernel.fifo.poll.create_sockets" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_cancel_wait" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_get_fail" name="kernel.fifo.poll.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_is_empty_isr" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_is_empty_thread" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_isr2thread" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_loop" name="kernel.fifo.poll.fifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_thread2isr" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.poll.fifo_thread2thread" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.dns_add_remove_two_callback6" name="kernel.fifo.timeout.poll.dns_add_remove_two_callback6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.dns_remove_callback6" name="kernel.fifo.timeout.poll.dns_remove_callback6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.dns_remove_none_callback6" name="kernel.fifo.timeout.poll.dns_remove_none_callback6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.dns_remove_timeout_empty_fifo" name="kernel.fifo.timeout.poll.dns_remove_timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_empty_fifo" name="kernel.fifo.timeout.poll.timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_fifS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="kernel.fifo.timeout.poll.timeout_fifS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_fifo_thread" name="kernel.fifo.timeout.poll.timeout_fifo_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_non_empty_fifo" name="kernel.fifo.timeout.poll.timeout_non_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.timeout.poll.vlan_disable_all" name="kernel.fifo.timeout.poll.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.dual_fifo_play" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.isr_fifo_play" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.json_esc======================================" name="kernel.fifo.usage.poll.json_esc======================================" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.json_escape" name="kernel.fifo.usage.poll.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.json_escape_bounds_check" name="kernel.fifo.usage.poll.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.json_escape_empty" name="kernel.fifo.usage.poll.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.json_escape_one" name="kernel.fifo.usage.poll.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.json_key_not_in_descr" name="kernel.fifo.usage.poll.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.single_fifo_play" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.fifo.usage.poll.te=========================================================" name="kernel.fifo.usage.poll.te=========================================================" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.device_id_get" name="kernel.poll.device_id_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.poll_cancel_main_high_prio" name="kernel.poll.poll_cancel_main_high_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.poll_cancel_main_low_prio" name="kernel.poll.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.poll_multi" name="kernel.poll.poll_multi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.poll_no_wait" name="kernel.poll.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.poll_threadstate" name="kernel.poll.poll_threadstate" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.poll.poll_wait" name="kernel.poll.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.auto_free" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_alloc" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_alloc_append_user" name="kernel.queue.poll.queue_alloc_append_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_alloc_prepend_user" name="kernel.queue.poll.queue_alloc_prepend_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_get_2threads" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_get_fail" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_isr2thread" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_loop" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_supv_to_user" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_thread2isr" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.queue_thread2thread" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.queue.poll.z_free_fd" name="kernel.queue.poll.z_free_fd" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.socket.udp.poll" name="net.socket.udp.poll" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.poll_mode.adc_sample" name="peripheral.adc.poll_mode.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_fifo_fill" name="peripheral.uart.poll.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_fifo_read" name="peripheral.uart.poll.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_poll_in" name="peripheral.uart.poll.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.poll.uart_poll_out" name="peripheral.uart.poll.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.uart_poll_in" name="peripheral.uart.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.uart_poll_out" name="peripheral.uart.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_k64f:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_close" name="filesystem.fs_shell.fat_close" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_mkdir" name="filesystem.fs_shell.fat_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_mount" name="filesystem.fs_shell.fat_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_open" name="filesystem.fs_shell.fat_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_read" name="filesystem.fs_shell.fat_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_readdir" name="filesystem.fs_shell.fat_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_rmdir" name="filesystem.fs_shell.fat_rmdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_unlink" name="filesystem.fs_shell.fat_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fat_write" name="filesystem.fs_shell.fat_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fs_help" name="filesystem.fs_shell.fs_help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.fs_shell_exit" name="filesystem.fs_shell.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_mkdir" name="filesystem.fs_shell.nffs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_mount" name="filesystem.fs_shell.nffs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_open" name="filesystem.fs_shell.nffs_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_read" name="filesystem.fs_shell.nffs_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_readdir" name="filesystem.fs_shell.nffs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_unlink" name="filesystem.fs_shell.nffs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.fs_shell.nffs_write" name="filesystem.fs_shell.nffs_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:filesystem.multifs.fs_shell_exit" name="filesystem.multifs.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.cmd_shell" name="libraries.encoding.cmd_shell" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.shell_wildcards_dynamic" name="libraries.encoding.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.shell_wildcards_static" name="libraries.encoding.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.shell" name="net.shell" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.shell.ipv4_addresses" name="net.shell.ipv4_addresses" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.shell.net_shell" name="net.shell.net_shell" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.shell.setup" name="net.shell.setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_fifo_fill" name="peripheral.uart.shell.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_fifo_read" name="peripheral.uart.shell.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.app_handler" name="shell.app_handler" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.cmd_clear" name="shell.cmd_clear" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.cmd_help" name="shell.cmd_help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.cmd_history" name="shell.cmd_history" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.cmd_resize" name="shell.cmd_resize" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.cmd_select" name="shell.cmd_select" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.cmd_shell" name="shell.cmd_shell" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.exit" name="shell.exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.help" name="shell.help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.history_add_get" name="shell.history_add_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.history_get_up_and_down" name="shell.history_get_up_and_down" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.history_purge" name="shell.history_purge" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.log_output_raw_string" name="shell.log_output_raw_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.log_output_string" name="shell.log_output_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.module" name="shell.module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.no_duplicates_in_a_row" name="shell.no_duplicates_in_a_row" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.select" name="shell.select" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.shell_module" name="shell.shell_module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.shell_wildcards_dynamic" name="shell.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.shell_wildcards_static" name="shell.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.storing_long_buffers" name="shell.storing_long_buffers" time="0">
      </testcase>
      <testcase classname="frdm_k64f:shell.too_long_line_not_stored" name="shell.too_long_line_not_stored" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.array" name="kernel.mailbox.array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_async_multiple_put" name="kernel.mailbox.mbox_async_multiple_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_async_put_get_block" name="kernel.mailbox.mbox_async_put_get_block" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_async_put_get_buffer" name="kernel.mailbox.mbox_async_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_async_put_to_waiting_get" name="kernel.mailbox.mbox_async_put_to_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_block_get_buff_to_pool" name="kernel.mailbox.mbox_block_get_buff_to_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_block_get_buff_to_smaller_pool" name="kernel.mailbox.mbox_block_get_buff_to_smaller_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_block_get_invalid_pool" name="kernel.mailbox.mbox_block_get_invalid_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_clean_up_tx_pool" name="kernel.mailbox.mbox_clean_up_tx_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_dispose_size_0_msg" name="kernel.mailbox.mbox_dispose_size_0_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_get_waiting_put_incorrect_tid" name="kernel.mailbox.mbox_get_waiting_put_incorrect_tid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_incorrect_receiver_tid" name="kernel.mailbox.mbox_incorrect_receiver_tid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_incorrect_transmit_tid" name="kernel.mailbox.mbox_incorrect_transmit_tid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_kdefine" name="kernel.mailbox.mbox_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_kinit" name="kernel.mailbox.mbox_kinit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_msg_tid_mismatch" name="kernel.mailbox.mbox_msg_tid_mismatch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_multiple_waiting_get" name="kernel.mailbox.mbox_multiple_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_put_get_buffer" name="kernel.mailbox.mbox_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_put_get_null" name="kernel.mailbox.mbox_put_get_null" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_target_source_thread_block" name="kernel.mailbox.mbox_target_source_thread_block" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_target_source_thread_buffer" name="kernel.mailbox.mbox_target_source_thread_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.mbox_timed_out_mbox_get" name="kernel.mailbox.mbox_timed_out_mbox_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.msg_receiver" name="kernel.mailbox.msg_receiver" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.msg_receiver_unlimited" name="kernel.mailbox.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.mailbox.vector" name="kernel.mailbox.vector" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.mailbox.main" name="peripheral.mailbox.main" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.watchdog" name="peripheral.watchdog" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.watchdog.wdt" name="peripheral.watchdog.wdt" time="0">
      </testcase>
  </testsuite>
</testsuites>
