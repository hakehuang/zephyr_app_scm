<?xml version="1.0"?>
<testsuites>
    <testsuite tests="35" errors="0" failures="0" name="tests_benchmarks" skipped="0" time="0">
      <testcase classname="twr_ke18f:kernel.multiprocessing.coop_resched_threads" name="kernel.multiprocessing.coop_resched_threads" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.multiprocessing.preempt_resched_threads" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.deadline.deadline" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.lock_preemptible" name="kernel.sched.lock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.pending_thread_wakeup" name="kernel.sched.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.preempt.preempt" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.priority_cooperative" name="kernel.sched.priority_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.priority_preemptible" name="kernel.sched.priority_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.priority_scheduling" name="kernel.sched.priority_scheduling" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sched_is_preempt_thread" name="kernel.sched.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sleep_cooperative" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.slice_reset" name="kernel.sched.slice_reset" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.slice_scheduling" name="kernel.sched.slice_scheduling" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.time_slicing_disable_preemptible" name="kernel.sched.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.time_slicing_preemptible" name="kernel.sched.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.unlock_preemptible" name="kernel.sched.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.wakeup_expired_timer_thread" name="kernel.sched.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.yield_cooperative" name="kernel.sched.yield_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="20" errors="0" failures="0" name="tests_kernel_3" skipped="0" time="0">
      <testcase classname="twr_ke18f:kernel.fp_sharing" name="kernel.fp_sharing" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.fp_sharing.x86" name="kernel.fp_sharing.x86" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_alloc_align" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_alloc_free_thread" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_alloc_timeout" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_alloc_wait_prio" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_kdefine" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_kdefine_extern" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_kinit" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_slabs.mslab_used_get" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.k_sleep" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.timing.sleep" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.multiprocessing.sleep_threads" name="kernel.multiprocessing.sleep_threads" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sleep_cooperative" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="136" errors="0" failures="0" name="tests_kernel_2" skipped="0" time="0">
      <testcase classname="twr_ke18f:kernel.common.critical" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.bogus_dynamic_name" name="kernel.device.bogus_dynamic_name" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.build_suspend_device_list" name="kernel.device.build_suspend_device_list" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.dummy_device" name="kernel.device.dummy_device" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.dummy_device_pm" name="kernel.device.dummy_device_pm" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.dynamic_name" name="kernel.device.dynamic_name" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.pm.bogus_dynamic_name" name="kernel.device.pm.bogus_dynamic_name" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.pm.build_suspend_device_list" name="kernel.device.pm.build_suspend_device_list" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.pm.dummy_device" name="kernel.device.pm.dummy_device" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.pm.dummy_device_pm" name="kernel.device.pm.dummy_device_pm" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.device.pm.dynamic_name" name="kernel.device.pm.dynamic_name" time="0">
      </testcase>
      <testcase classname="twr_ke18f:usb.device.dfu.bank_erase" name="usb.device.dfu.bank_erase" time="0">
      </testcase>
      <testcase classname="twr_ke18f:usb.device.dfu.request_upgrade" name="usb.device.dfu.request_upgrade" time="0">
      </testcase>
      <testcase classname="twr_ke18f:usb.device.dfu.write_confirm" name="usb.device.dfu.write_confirm" time="0">
      </testcase>
      <testcase classname="twr_ke18f:usb.device.image_util.collecting" name="use.device.image_util.collecting" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.multiprocessing.preempt_resched_threads" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.lock_preemptible" name="kernel.sched.lock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.preempt.preempt" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.priority_preemptible" name="kernel.sched.priority_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sched_is_preempt_thread" name="kernel.sched.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.time_slicing_disable_preemptible" name="kernel.sched.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.time_slicing_preemptible" name="kernel.sched.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.unlock_preemptible" name="kernel.sched.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.threads.customdata_get_set_preempt" name="kernel.threads.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.threads.kdefine_preempt_thread" name="kernel.threads.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.threads.kinit_preempt_thread" name="kernel.threads.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.threads.threads_suspend_resume_preemptible" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.deadline.deadline" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.stack_random.stack_pt_randomization" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.stack_protection.fatal" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.access_kobject_without_init_access" name="kernel.memory_protection.access_kobject_without_init_access" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.access_kobject_without_init_with_access" name="kernel.memory_protection.access_kobject_without_init_with_access" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.app_memory" name="kernel.memory_protection.app_memory" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.boot_page_table" name="kernel.memory_protection.boot_page_table" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_essential_thread_from_user" name="kernel.memory_protection.create_new_essential_thread_from_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_higher_prio_thread_from_user" name="kernel.memory_protection.create_new_higher_prio_thread_from_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_invalid_prio_thread_from_user" name="kernel.memory_protection.create_new_invalid_prio_thread_from_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_supervisor_thread_from_user" name="kernel.memory_protection.create_new_supervisor_thread_from_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_thread_from_user" name="kernel.memory_protection.create_new_thread_from_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_thread_from_user_huge_stacksize" name="kernel.memory_protection.create_new_thread_from_user_huge_stacksize" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" name="kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.create_new_thread_from_user_no_access_stack" name="kernel.memory_protection.create_new_thread_from_user_no_access_stack" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_access_all_grant" name="kernel.memory_protection.kobject_access_all_grant" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_access_grant" name="kernel.memory_protection.kobject_access_grant" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_access_grant_to_invalid_thread" name="kernel.memory_protection.kobject_access_grant_to_invalid_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_access_invalid_kobject" name="kernel.memory_protection.kobject_access_invalid_kobject" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_grant_access_kobj" name="kernel.memory_protection.kobject_grant_access_kobj" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_grant_access_kobj_invalid" name="kernel.memory_protection.kobject_grant_access_kobj_invalid" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_reinitialize_thread_kobj" name="kernel.memory_protection.kobject_reinitialize_thread_kobj" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_release_from_user" name="kernel.memory_protection.kobject_release_from_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.kobject_revoke_access" name="kernel.memory_protection.kobject_revoke_access" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_add_partitions_invalid" name="kernel.memory_protection.mem_domain_add_partitions_invalid" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_add_partitions_simple" name="kernel.memory_protection.mem_domain_add_partitions_simple" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_destroy" name="kernel.memory_protection.mem_domain_destroy" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_invalid_access" name="kernel.memory_protection.mem_domain_invalid_access" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_partitions_supervisor_rw" name="kernel.memory_protection.mem_domain_partitions_supervisor_rw" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_partitions_user_ro" name="kernel.memory_protection.mem_domain_partitions_user_ro" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_partitions_user_rw" name="kernel.memory_protection.mem_domain_partitions_user_rw" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_remove_partitions" name="kernel.memory_protection.mem_domain_remove_partitions" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_remove_partitions_simple" name="kernel.memory_protection.mem_domain_remove_partitions_simple" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_remove_thread" name="kernel.memory_protection.mem_domain_remove_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mem_domain_valid_access" name="kernel.memory_protection.mem_domain_valid_access" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_readable_read" name="kernel.memory_protection.mmu.buffer_readable_read" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_readable_write" name="kernel.memory_protection.mmu.buffer_readable_write" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_rw_read" name="kernel.memory_protection.mmu.buffer_rw_read" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_supervisor_rw" name="kernel.memory_protection.mmu.buffer_supervisor_rw" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_supervisor_w" name="kernel.memory_protection.mmu.buffer_supervisor_w" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_user_rw_supervisor" name="kernel.memory_protection.mmu.buffer_user_rw_supervisor" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_user_rw_user" name="kernel.memory_protection.mmu.buffer_user_rw_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.buffer_writeable_write" name="kernel.memory_protection.mmu.buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_page_buffer_read" name="kernel.memory_protection.mmu.multi_page_buffer_read" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_page_buffer_read_user" name="kernel.memory_protection.mmu.multi_page_buffer_read_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_page_buffer_user" name="kernel.memory_protection.mmu.multi_page_buffer_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_page_buffer_write_user" name="kernel.memory_protection.mmu.multi_page_buffer_write_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_pde_buffer_readable_read" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_read" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_pde_buffer_readable_write" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_write" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_pde_buffer_rw" name="kernel.memory_protection.mmu.multi_pde_buffer_rw" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.mmu.multi_pde_buffer_writeable_write" name="kernel.memory_protection.mmu.multi_pde_buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.obj_validation.generic_object" name="kernel.memory_protection.obj_validation.generic_object" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.permission_inheritance" name="kernel.memory_protection.permission_inheritance" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.protection.exec_data" name="kernel.memory_protection.protection.exec_data" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.protection.exec_heap" name="kernel.memory_protection.protection.exec_heap" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.protection.exec_stack" name="kernel.memory_protection.protection.exec_stack" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.protection.write_ro" name="kernel.memory_protection.protection.write_ro" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.protection.write_text" name="kernel.memory_protection.protection.write_text" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.stack_random.stack_pt_randomization" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.stackprot" name="kernel.memory_protection.stackprot" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.syscall_invalid_kobject" name="kernel.memory_protection.syscall_invalid_kobject" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.syscalls.string_nlen" name="kernel.memory_protection.syscalls.string_nlen" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.syscalls.to_copy" name="kernel.memory_protection.syscalls.to_copy" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.syscalls.user_string_alloc_copy" name="kernel.memory_protection.syscalls.user_string_alloc_copy" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.syscalls.user_string_copy" name="kernel.memory_protection.syscalls.user_string_copy" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.thread_has_residual_permissions" name="kernel.memory_protection.thread_has_residual_permissions" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.thread_without_kobject_permission" name="kernel.memory_protection.thread_without_kobject_permission" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.access_after_revoke" name="kernel.memory_protection.userspace.access_after_revoke" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.access_other_memdomain" name="kernel.memory_protection.userspace.access_other_memdomain" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.disable_mmu_mpu" name="kernel.memory_protection.userspace.disable_mmu_mpu" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_add_part_context_switch" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_add_part_drop_to_user" name="kernel.memory_protection.userspace.domain_add_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_add_thread_context_switch" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_add_thread_drop_to_user" name="kernel.memory_protection.userspace.domain_add_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_remove_part_context_switch" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_remove_part_drop_to_user" name="kernel.memory_protection.userspace.domain_remove_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_remove_thread_context_switch" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" name="kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.is_usermode" name="kernel.memory_protection.userspace.is_usermode" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.pass_noperms_object" name="kernel.memory_protection.userspace.pass_noperms_object" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.pass_user_object" name="kernel.memory_protection.userspace.pass_user_object" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.read_kernel_data" name="kernel.memory_protection.userspace.read_kernel_data" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.read_kernram" name="kernel.memory_protection.userspace.read_kernram" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.read_kobject_user_pipe" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.read_other_stack" name="kernel.memory_protection.userspace.read_other_stack" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.read_priv_stack" name="kernel.memory_protection.userspace.read_priv_stack" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.revoke_noperms_object" name="kernel.memory_protection.userspace.revoke_noperms_object" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.start_kernel_thread" name="kernel.memory_protection.userspace.start_kernel_thread" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.user_mode_enter" name="kernel.memory_protection.userspace.user_mode_enter" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_control" name="kernel.memory_protection.userspace.write_control" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_kernel_data" name="kernel.memory_protection.userspace.write_kernel_data" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_kernram" name="kernel.memory_protection.userspace.write_kernram" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_kernro" name="kernel.memory_protection.userspace.write_kernro" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_kerntext" name="kernel.memory_protection.userspace.write_kerntext" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_kobject_user_pipe" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_other_stack" name="kernel.memory_protection.userspace.write_other_stack" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.write_priv_stack" name="kernel.memory_protection.userspace.write_priv_stack" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="63" errors="0" failures="0" name="tests_kernel" skipped="0" time="0">
      <testcase classname="twr_ke18f:arch.common.xip.globals" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_pool.sys_heap_mem_pool_assign" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.idt_stub" name="arch.interrupt.idt_stub" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.irq_offload" name="arch.interrupt.irq_offload" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.nested_isr" name="arch.interrupt.nested_isr" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.prevent_interruption" name="arch.interrupt.prevent_interruption" time="0">
      </testcase>
      <testcase classname="twr_ke18f:arch.interrupt.static_idt" name="arch.interrupt.static_idt" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.kernel_interrupts" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.kernel_timer_interrupts" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.errno.newlib.thread_context" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.errno.thread_context" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.misra.thread_context" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.thread_context" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_add_part_context_switch" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_add_thread_context_switch" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_remove_part_context_switch" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.memory_protection.userspace.domain_remove_thread_context_switch" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.init" name="net.context.init" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_accept_v4" name="net.context.net_ctx_accept_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_accept_v6" name="net.context.net_ctx_accept_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_bind_fail" name="net.context.net_ctx_bind_fail" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_bind_mcast_success" name="net.context.net_ctx_bind_mcast_success" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_bind_uni_success_v4" name="net.context.net_ctx_bind_uni_success_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_bind_uni_success_v6" name="net.context.net_ctx_bind_uni_success_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_connect_v4" name="net.context.net_ctx_connect_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_connect_v6" name="net.context.net_ctx_connect_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_create" name="net.context.net_ctx_create" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_get_all" name="net.context.net_ctx_get_all" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_get_fail" name="net.context.net_ctx_get_fail" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_get_success" name="net.context.net_ctx_get_success" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_listen_v4" name="net.context.net_ctx_listen_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_listen_v6" name="net.context.net_ctx_listen_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_put" name="net.context.net_ctx_put" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v4" name="net.context.net_ctx_recv_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v4_again" name="net.context.net_ctx_recv_v4_again" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v4_fail" name="net.context.net_ctx_recv_v4_fail" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v4_reconfig" name="net.context.net_ctx_recv_v4_reconfig" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v4_timeout" name="net.context.net_ctx_recv_v4_timeout" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v4_timeout_forever" name="net.context.net_ctx_recv_v4_timeout_forever" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v6" name="net.context.net_ctx_recv_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v6_again" name="net.context.net_ctx_recv_v6_again" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v6_fail" name="net.context.net_ctx_recv_v6_fail" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v6_reconfig" name="net.context.net_ctx_recv_v6_reconfig" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v6_timeout" name="net.context.net_ctx_recv_v6_timeout" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_recv_v6_timeout_forever" name="net.context.net_ctx_recv_v6_timeout_forever" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_send_v4" name="net.context.net_ctx_send_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_send_v6" name="net.context.net_ctx_send_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_sendto_v4" name="net.context.net_ctx_sendto_v4" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.context.net_ctx_sendto_v6" name="net.context.net_ctx_sendto_v6" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.dns.dns_query_invalid_context" name="net.dns.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="twr_ke18f:net.dns.no_ipv6.dns_query_invalid_context" name="net.dns.no_ipv6.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.alert.isr_alert_pending" name="kernel.alert.isr_alert_pending" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.alert.thread_alert_pending" name="kernel.alert.thread_alert_pending" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.common.timing.pending" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.multiprocessing.wakeup_pending_threads" name="kernel.multiprocessing.wakeup_pending_threads" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.sched.pending_thread_wakeup" name="kernel.sched.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="twr_ke18f:kernel.object_tracing.obj_tracing" name="kernel.object_tracing.obj_tracing" time="0">
      </testcase>
  </testsuite>
</testsuites>
