<?xml version="1.0"?>
<testsuites>
    <testsuite tests="333" errors="0" failures="0" name="" skipped="32" time="0">
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.arm_thread_swap" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.no_optimizations.hostname_set" name="arch.arm.swap.common.fp_sharing.no_optimizations.hostname_set" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.pool_block_get" name="arch.arm.swap.common.fp_sharing.pool_block_get" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.fatal" name="kernel.common.stack_protection_arm_fp_sharing.fatal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_forever_timeout" name="kernel.common.stack_protection_arm_fp_sharing.pipe_forever_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_forever_wait" name="kernel.common.stack_protection_arm_fp_sharing.pipe_forever_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_get_invalid_size" name="kernel.common.stack_protection_arm_fp_sharing.pipe_get_invalid_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_get_on_empty_pipe" name="kernel.common.stack_protection_arm_fp_sharing.pipe_get_on_empty_pipe" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_timeoung test - test_pipe_get_invalid_size" name="kernel.common.stack_protection_arm_fp_sharing.pipe_timeoung test - test_pipe_get_invalid_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_timeout" name="kernel.common.stack_protection_arm_fp_sharing.pipe_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing" name="kernel.fp_sharing" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.arm.k_float_disable_common" name="kernel.fp_sharing.float_disable.arm.k_float_disable_common" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.arm.k_float_disable_irq" name="kernel.fp_sharing.float_disable.arm.k_float_disable_irq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.arm.k_float_disable_syscall" name="kernel.fp_sharing.float_disable.arm.k_float_disable_syscall" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.arm.memalloc_max" name="kernel.fp_sharing.float_disable.arm.memalloc_max" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.x86.k_float_disable_common" name="kernel.fp_sharing.float_disable.x86.k_float_disable_common" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.x86.k_float_disable_irq" name="kernel.fp_sharing.float_disable.x86.k_float_disable_irq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.x86.k_float_disable_syscall" name="kernel.fp_sharing.float_disable.x86.k_float_disable_syscall" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.x86" name="kernel.fp_sharing.x86" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:net.dns.mdns_query" name="net.dns.mdns_query" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:net.dns.mdns_response" name="net.dns.mdns_response" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.coop_resched_threads" name="kernel.multiprocessing.coop_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.cpu_id_threads" name="kernel.multiprocessing.cpu_id_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.mp_start" name="kernel.multiprocessing.mp_start" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.preempt_resched_threads" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.sleep_threads" name="kernel.multiprocessing.sleep_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.smp_coop_threads" name="kernel.multiprocessing.smp_coop_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.spinlock_basic" name="kernel.multiprocessing.spinlock_basic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.spinlock_bounce" name="kernel.multiprocessing.spinlock_bounce" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.wakeup_pending_threads" name="kernel.multiprocessing.wakeup_pending_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.wakeup_threads" name="kernel.multiprocessing.wakeup_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.yield_threads" name="kernel.multiprocessing.yield_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.spinlock_basic" name="kernel.multiprocessing.spinlock_basic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.spinlock_bounce" name="kernel.multiprocessing.spinlock_bounce" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:tracing.openocd" name="tracing.openocd" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.bad_priorities" name="kernel.tickless.bad_priorities" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.busy_wait" name="kernel.tickless.busy_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.kernel_ctx_thread" name="kernel.tickless.kernel_ctx_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.lock_preemptible" name="kernel.tickless.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.pending_thread_wakeup" name="kernel.tickless.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.priority_cooperative" name="kernel.tickless.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.priority_preemptible" name="kernel.tickless.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.priority_scheduling" name="kernel.tickless.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep================================================" name="kernel.tickless.sleep================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_cooperative" name="kernel.tickless.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_wake===============" name="kernel.tickless.sleep_wake===============" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_wakeup_preemp======" name="kernel.tickless.sleep_wakeup_preemp======" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_wakeup_preemptible" name="kernel.tickless.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.slice_reset" name="kernel.tickless.slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.slice_scheduling" name="kernel.tickless.slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tes===" name="kernel.tickless.tes===" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.test==========================" name="kernel.tickless.test==========================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tickless" name="kernel.tickless.tickless" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tickless_slice" name="kernel.tickless.tickless_slice" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tickless_sysclock" name="kernel.tickless.tickless_sysclock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.time_slicing_disable_preemptible" name="kernel.tickless.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.time_slicing_preemptible" name="kernel.tickless.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tst - test_slice_reset" name="kernel.tickless.tst - test_slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.unlock_nested_sche test_time_slicing_disable_preemptible" name="kernel.tickless.unlock_nested_sche test_time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.unlock_nested_sched_lock" name="kernel.tickless.unlock_nested_sched_lock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.unlock_ning test - test_time_slicing_disable_preemptible" name="kernel.tickless.unlock_ning test - test_time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.unlock_preemptible" name="kernel.tickless.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.unlock_preemptiting test - test_slice_scheduling" name="kernel.tickless.unlock_preemptiting test - test_slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.user_k_is_preempt" name="kernel.tickless.user_k_is_preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.user_k_wakeup" name="kernel.tickless.user_k_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.wakeup_expired_timer_thread" name="kernel.tickless.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.wakeup_expired_tt" name="kernel.tickless.wakeup_expired_tt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.wakeupslice_reset" name="kernel.tickless.wakeupslice_reset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.yield_cooperative" name="kernel.tickless.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.delay" name="testing.ztest.customized_output.delay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.event_flags_isr" name="testing.ztest.customized_output.event_flags_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.event_flags_signalled" name="testing.ztest.customized_output.event_flags_signalled" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.kernel_apis" name="testing.ztest.customized_output.kernel_apis" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mempool" name="testing.ztest.customized_output.mempool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mempool_dynamic" name="testing.ztest.customized_output.mempool_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.messageq" name="testing.ztest.customized_output.messageq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mutex" name="testing.ztest.customized_output.mutex" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mutex_lock_timeout" name="testing.ztest.customized_output.mutex_lock_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.semaphore" name="testing.ztest.customized_output.semaphore" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.t- test_thread_prio_dynamic" name="testing.ztest.customized_output.t- test_thread_prio_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.te6" name="testing.ztest.customized_output.te6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thrd B started." name="testing.ztest.customized_output.thrd B started." time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_apis" name="testing.ztest.customized_output.thread_apis" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_apis_dynamic" name="testing.ztest.customized_output.thread_apis_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_flags_isr" name="testing.ztest.customized_output.thread_flags_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_flags_no_wait_timeout" name="testing.ztest.customized_output.thread_flags_no_wait_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_flags_signalled" name="testing.ztest.customized_output.thread_flags_signalled" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_prio" name="testing.ztest.customized_output.thread_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_prio_dynamic" name="testing.ztest.customized_output.thread_prio_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.k_sleep" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.sleep" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.usleep" name="kernel.common.timing.usleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.multiprocessing.sleep_threads" name="kernel.multiprocessing.sleep_threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.multiq.sleep_cooperative" name="kernel.sched.multiq.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.multiq.sleep_wakeup_preemptible" name="kernel.sched.multiq.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.multiq_no_timeslicing.sleep_cooperative" name="kernel.sched.multiq_no_timeslicing.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.multiq_no_timeslicing.sleep_wakeup_preemptible" name="kernel.sched.multiq_no_timeslicing.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.sleep_cooperative" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.sleep_wakeup_preemptible" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched_no_timeslicing.sleep_cooperative" name="kernel.sched_no_timeslicing.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched_no_timeslicing.sleep_wakeup_preemptible" name="kernel.sched_no_timeslicing.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep================================================" name="kernel.tickless.sleep================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_cooperative" name="kernel.tickless.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_wake===============" name="kernel.tickless.sleep_wake===============" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_wakeup_preemp======" name="kernel.tickless.sleep_wakeup_preemp======" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.sleep_wakeup_preemptible" name="kernel.tickless.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.byte_put_free" name="libraries.data_structures.byte_put_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.capacity" name="libraries.data_structures.capacity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.rbtree.rbtree_spam" name="libraries.data_structures.rbtree.rbtree_spam" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.reset" name="libraries.data_structures.reset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ring_buffer_main" name="libraries.data_structures.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_alloc_put" name="libraries.data_structures.ringbuffer_alloc_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_declare_pow2" name="libraries.data_structures.ringbuffer_declare_pow2" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_declare_size" name="libraries.data_structures.ringbuffer_declare_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_init" name="libraries.data_structures.ringbuffer_init" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" name="libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_put_get_isr" name="libraries.data_structures.ringbuffer_put_get_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_put_get_thread" name="libraries.data_structures.ringbuffer_put_get_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_put_get_thread_isr" name="libraries.data_structures.ringbuffer_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_raw" name="libraries.data_structures.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_size_put_get_thread_isr" name="libraries.data_structures.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.interrupt.nmi_test_isr" name="arch.interrupt.nmi_test_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.array" name="kernel.mailbox.array" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_multiple_put" name="kernel.mailbox.mbox_async_multiple_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_put_get_block" name="kernel.mailbox.mbox_async_put_get_block" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_put_get_buffer" name="kernel.mailbox.mbox_async_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_put_to_waiting_get" name="kernel.mailbox.mbox_async_put_to_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_block_get_buff_to_pool" name="kernel.mailbox.mbox_block_get_buff_to_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_block_get_buff_to_smaller_pool" name="kernel.mailbox.mbox_block_get_buff_to_smaller_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_block_get_invalid_pool" name="kernel.mailbox.mbox_block_get_invalid_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_clean_up_tx_pool" name="kernel.mailbox.mbox_clean_up_tx_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_dispose_size_0_msg" name="kernel.mailbox.mbox_dispose_size_0_msg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_get_waiting_put_incorrect_tid" name="kernel.mailbox.mbox_get_waiting_put_incorrect_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_incorrect_receiver_tid" name="kernel.mailbox.mbox_incorrect_receiver_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_incorrect_transmit_tid" name="kernel.mailbox.mbox_incorrect_transmit_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_kdefine" name="kernel.mailbox.mbox_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_kinit" name="kernel.mailbox.mbox_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_msg_tid_mismatch" name="kernel.mailbox.mbox_msg_tid_mismatch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_multiple_waiting_get" name="kernel.mailbox.mbox_multiple_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_put_get_buffer" name="kernel.mailbox.mbox_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_put_get_null" name="kernel.mailbox.mbox_put_get_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_target_source_thread_block" name="kernel.mailbox.mbox_target_source_thread_block" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_target_source_thread_buffer" name="kernel.mailbox.mbox_target_source_thread_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_timed_out_mbox_get" name="kernel.mailbox.mbox_timed_out_mbox_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.msg_receiver" name="kernel.mailbox.msg_receiver" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.msg_receiver_unlimited" name="kernel.mailbox.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.vector" name="kernel.mailbox.vector" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.mailbox.main" name="peripheral.mailbox.main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_fifo_fill" name="peripheral.uart.poll.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_fifo_read" name="peripheral.uart.poll.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_poll_in" name="peripheral.uart.poll.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_poll_out" name="peripheral.uart.poll.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_fifo_fill" name="peripheral.uart.shell.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_fifo_read" name="peripheral.uart.shell.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.uart_fifo_fill" name="peripheral.uart.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.uart_fifo_read" name="peripheral.uart.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.uart_poll_in" name="peripheral.uart.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.uart_poll_out" name="peripheral.uart.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.create_sockets" name="kernel.fifo.poll.create_sockets" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_cancel_wait" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_get_fail" name="kernel.fifo.poll.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_is_empty_isr" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_is_empty_thread" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_isr2thread" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_loop" name="kernel.fifo.poll.fifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_thread2isr" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_thread2thread" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.dns_add_remove_two_callback6" name="kernel.fifo.timeout.poll.dns_add_remove_two_callback6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.dns_remove_callback6" name="kernel.fifo.timeout.poll.dns_remove_callback6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.dns_remove_none_callback6" name="kernel.fifo.timeout.poll.dns_remove_none_callback6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.dns_remove_timeout_empty_fifo" name="kernel.fifo.timeout.poll.dns_remove_timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_empty_fifo" name="kernel.fifo.timeout.poll.timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_fifS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="kernel.fifo.timeout.poll.timeout_fifS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_fifo_thread" name="kernel.fifo.timeout.poll.timeout_fifo_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_non_empty_fifo" name="kernel.fifo.timeout.poll.timeout_non_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.vlan_disable_all" name="kernel.fifo.timeout.poll.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.dual_fifo_play" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.isr_fifo_play" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.json_esc======================================" name="kernel.fifo.usage.poll.json_esc======================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.json_escape" name="kernel.fifo.usage.poll.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.json_escape_bounds_check" name="kernel.fifo.usage.poll.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.json_escape_empty" name="kernel.fifo.usage.poll.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.json_escape_one" name="kernel.fifo.usage.poll.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.json_key_not_in_descr" name="kernel.fifo.usage.poll.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.single_fifo_play" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.te=========================================================" name="kernel.fifo.usage.poll.te=========================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.device_id_get" name="kernel.poll.device_id_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_cancel_main_high_prio" name="kernel.poll.poll_cancel_main_high_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_cancel_main_low_prio" name="kernel.poll.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_multi" name="kernel.poll.poll_multi" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_no_wait" name="kernel.poll.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_threadstate" name="kernel.poll.poll_threadstate" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_wait" name="kernel.poll.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.auto_free" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc_append_user" name="kernel.queue.poll.queue_alloc_append_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc_prepend_user" name="kernel.queue.poll.queue_alloc_prepend_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_get_2threads" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_get_fail" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_isr2thread" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_loop" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_supv_to_user" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_thread2isr" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_thread2thread" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.z_free_fd" name="kernel.queue.poll.z_free_fd" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.socket.udp.poll" name="net.socket.udp.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.poll_mode.adc_sample" name="peripheral.adc.poll_mode.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_fifo_fill" name="peripheral.uart.poll.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_fifo_read" name="peripheral.uart.poll.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_poll_in" name="peripheral.uart.poll.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.poll.uart_poll_out" name="peripheral.uart.poll.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.uart_poll_in" name="peripheral.uart.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.uart_poll_out" name="peripheral.uart.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_close" name="filesystem.fs_shell.fat_close" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_mkdir" name="filesystem.fs_shell.fat_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_mount" name="filesystem.fs_shell.fat_mount" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_open" name="filesystem.fs_shell.fat_open" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_read" name="filesystem.fs_shell.fat_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_readdir" name="filesystem.fs_shell.fat_readdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_rmdir" name="filesystem.fs_shell.fat_rmdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_unlink" name="filesystem.fs_shell.fat_unlink" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fat_write" name="filesystem.fs_shell.fat_write" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fs_help" name="filesystem.fs_shell.fs_help" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.fs_shell_exit" name="filesystem.fs_shell.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_mkdir" name="filesystem.fs_shell.nffs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_mount" name="filesystem.fs_shell.nffs_mount" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_open" name="filesystem.fs_shell.nffs_open" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_read" name="filesystem.fs_shell.nffs_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_readdir" name="filesystem.fs_shell.nffs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_unlink" name="filesystem.fs_shell.nffs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.fs_shell.nffs_write" name="filesystem.fs_shell.nffs_write" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:filesystem.multifs.fs_shell_exit" name="filesystem.multifs.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.encoding.cmd_shell" name="libraries.encoding.cmd_shell" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.encoding.shell_wildcards_dynamic" name="libraries.encoding.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.encoding.shell_wildcards_static" name="libraries.encoding.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.shell" name="net.shell" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.shell.ipv4_addresses" name="net.shell.ipv4_addresses" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.shell.net_shell" name="net.shell.net_shell" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.shell.setup" name="net.shell.setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_fifo_fill" name="peripheral.uart.shell.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_fifo_read" name="peripheral.uart.shell.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.app_handler" name="shell.app_handler" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.cmd_clear" name="shell.cmd_clear" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.cmd_help" name="shell.cmd_help" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.cmd_history" name="shell.cmd_history" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.cmd_resize" name="shell.cmd_resize" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.cmd_select" name="shell.cmd_select" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.cmd_shell" name="shell.cmd_shell" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.exit" name="shell.exit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.help" name="shell.help" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.history_add_get" name="shell.history_add_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.history_get_up_and_down" name="shell.history_get_up_and_down" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.history_purge" name="shell.history_purge" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.log_output_raw_string" name="shell.log_output_raw_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.log_output_string" name="shell.log_output_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.module" name="shell.module" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.no_duplicates_in_a_row" name="shell.no_duplicates_in_a_row" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.select" name="shell.select" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.shell_module" name="shell.shell_module" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.shell_wildcards_dynamic" name="shell.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.shell_wildcards_static" name="shell.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.storing_long_buffers" name="shell.storing_long_buffers" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.too_long_line_not_stored" name="shell.too_long_line_not_stored" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.device_id_get" name="kernel.poll.device_id_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.device_id.device_id_get" name="peripheral.device_id.device_id_get" time="0">
      </testcase>
  </testsuite>
</testsuites>
