<?xml version="1.0"?>
<testsuites>
    <testsuite tests="148" errors="0" failures="0" name="tests_posix" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.atomic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.bitfield" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.busy_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.dlist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.init.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.intmath" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.k_yield" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_cpu_idle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_cpu_idle_atomic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_ctx_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.atomic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.bitfield" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.dlist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.intmath" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.multilib" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.printk" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.slist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.timeout_order" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.version" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.multilib" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.printk" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.slist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.stack_sentinel.fatal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timeout_order" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.version" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fat.fat_fs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_close" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_rmdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fat_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fs_help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.fs_shell.nffs_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_close" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_rmdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fat_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fs_help" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.multifs.nffs_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.append" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.corrupt_block" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.corrupt_scratch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.gc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.gc_on_oom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.incomplete_block" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.large_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.long_filename" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.lost_found" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.many_children" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.overwrite_many" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.overwrite_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.overwrite_three" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.overwrite_two" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.rename" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.split_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.basic.wear_level" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.cache.cache_large_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.cache.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.large.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.large.large_system" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.large.large_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.performance.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="filesystem.nffs.performance.performance" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_commit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_compress_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_empty_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_empty_lookups" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_getset_bytes" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_getset_int" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_getset_int64" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_getset_unknown" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_insert" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_multiple_in_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_save_in_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_save_one_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_setup_nffs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="system.settings.nffs.config_small_file" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="440" errors="0" failures="0" name="tests_net" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="net.util.utils" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.net_ctx_create" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.populate_nbr_cache" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_add" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_add_many" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_del" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_del_again" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_del_many" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_del_nexthop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_del_nexthop_again" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_get_nexthop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_lookup_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_lookup_ok" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.route.route_update" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_auto_neg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_duplex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_link" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_mac_when_down" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_mac_when_up" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_qav_params" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_same_duplex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_same_link" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_to_same_auto_neg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_unsupported_link" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.management.mgmt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ip-addr.ip_addresses" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ip-addr.ipv4_addresses" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ip-addr.ipv6_addresses" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.6lo.loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.select_src_iface" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.send_iface1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.send_iface1_down" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.send_iface1_up" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.send_iface2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.send_iface3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.iface.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.promisc.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.ptp_clock_iface_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.ptp_clock_iface_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.timestamp.timestamp_setup_2nd_iface" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_frag" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_frag_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.recv_ipv6_fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.send_ipv6_fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.send_ipv6_fragment_large_hbho" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.packet.fragment_compact" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.packet.fragment_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.packet.fragment_split" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.parsing_ack_pkt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.parsing_beacon_pkt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.parsing_ns_pkt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.parsing_sec_data_pkt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.replying_ack_pkt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ieee802154.l2.sending_ns_pkt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_close_server" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.dns_query_ipv6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.dns_query_ipv6_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.dns_query_ipv6_numeric" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.dns_query_ipv6_server_count" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.dns_query_ipv6_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_invalid_callback" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_invalid_query" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_invalid_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv4_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv4_numeric" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv4_server_count" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv4_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv6_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv6_numeric" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv6_server_count" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_ipv6_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_server_count" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_too_many" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ip-addr.ipv6_addresses" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.add_neighbor" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.address_lifetime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.change_ll_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.cmp_prefix" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.dad_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_frag" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_frag_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.recv_ipv6_fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.send_ipv6_fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.send_ipv6_fragment_large_hbho" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.hbho_message" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.hbho_message_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.hbho_message_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.hbho_message_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.nbr_lookup_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.nbr_lookup_ok" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.prefix_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.prefix_timeout_long" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.ra_message" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.rs_message" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.send_ns_extra_options" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.send_ns_no_options" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.packet.ipv6_multi_frags" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.address_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_disable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_enable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_enable_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_send_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.vlan.vlan_tci" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_frag" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_frag_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.recv_ipv6_fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.send_ipv6_fragment" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.send_ipv6_fragment_large_hbho" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.icmpv6.icmpv6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.arp.arp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.send_recv_2_sock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v4_bind_sendto" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v4_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v6_bind_sendto" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v6_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.udp.udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.allnodes" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.catch_join_group" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.catch_leave_group" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.catch_query" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.join_group" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.leave_group" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.mld_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.solicit_node" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.verify_join_group" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.verify_leave_group" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mld.verify_send_report" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.coap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.http.http_header_fields" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.mqtt.packet.mqtt_packet" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.add_neighbor" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.neighbour.neighbor" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mailbox.mbox_async_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mailbox.mbox_block_get_buff_to_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mailbox.mbox_block_get_buff_to_smaller_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mailbox.mbox_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mailbox.mbox_target_source_thread_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_readable_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_readable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_rw_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_supervisor_rw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_supervisor_w" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_user_rw_supervisor" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_user_rw_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_read_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_write_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_rw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_alloc_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_declare_pow2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_declare_size" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_put_get_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_put_get_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_big_buf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_clone" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_fixed_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_multi_frags" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.buf.net_buf_var_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart_async_api.double_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_auto_neg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_duplex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_link" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_mac_when_down" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_mac_when_up" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_qav_params" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_same_duplex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_same_link" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_to_same_auto_neg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ethernet_mgmt.change_unsupported_link" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_tcp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.tcp.v4_send_recv" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.tcp.v4_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.tcp.v4_sendto_recvfrom_null_dest" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.tcp.v6_send_recv" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.tcp.v6_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.tcp.v6_sendto_recvfrom_null_dest" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.tcp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_1_status" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_1_stopped" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_1_update" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_1_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_1_wait_long" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_2_inc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_2_status" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_2_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_create" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_start" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.trickle.trickle_stop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.tickless.tickless_sysclock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.address_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.check_interfaces" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.ptp_clock_iface_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.ptp_clock_iface_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ptp.clock.ptp_clock_interfaces" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.packet.net_pkt_append_memset" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.util.net_pkt_addr_parse" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv4.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.no-ipv6.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp4_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_hostname" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_hostname_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_peer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_peer_addr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp6_client_peer_with_port" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp_server_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.app.with-dns.app_udp_server_listen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_hbho_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.ipv6.fragment.find_last_ipv6_fragment_udp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.send_recv_2_sock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v4_bind_sendto" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v4_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v6_bind_sendto" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.socket.udp.v6_sendto_recvfrom" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.udp.udp" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="32" errors="0" failures="0" name="tests_lib" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.base64_codec" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.rbtree.rbtree_spam" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.libc.sprintf_double" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.libc.sprintf_integer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.libc.sprintf_misc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.libc.sprintf_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.libc.vsprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_alloc_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_declare_pow2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_declare_size" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_put_get_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_put_get_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.data_structures.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_decoding_array_array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_escape_no_op" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_invalid_unicode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_item_wrong_type" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_missing_quote" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_obj_arr_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_obj_arr_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="libraries.encoding.json_wrong_token" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="69" errors="0" failures="0" name="tests_kernel_3" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="kernel.fp_sharing" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fp_sharing.x86" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_give_take_from_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_measure_timeout_from_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_measure_timeouts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_multi_take_timeout_diff_sem" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_multiple_take_and_timeouts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_multiple_threads_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_multiple" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_no_wait_fails" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_timeout_fails" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_timeout_forever" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sem_take_timeout_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sema_count_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sema_reset" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sema_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.sema_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.simple_sem_from_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.semaphore.simple_sem_from_task" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.cmsis_rtos_v1.semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mutex.mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mutex.mutex_lock_unlock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mutex.mutex_reent_lock_forever" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mutex.mutex_reent_lock_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mutex.mutex_reent_lock_timeout_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.mutex.mutex_reent_lock_timeout_pass" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.cmsis_rtos_v1.mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.cmsis_rtos_v1.mutex_lock_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.tickless.tickless" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.tickless.tickless_slice" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.tickless.tickless_sysclock" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_duration_period" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_expirefn_null" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_k_define" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_period_0" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_periodicity" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_remaining_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_status_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_status_sync" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.timer.tickless.timer_user_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.multiprocessing.sleep_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="270" errors="0" failures="0" name="tests_kernel_2" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.atomic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.bitfield" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.busy_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.dlist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.init.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.intmath" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.k_yield" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_cpu_idle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_cpu_idle_atomic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_ctx_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.atomic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.bitfield" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.dlist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.intmath" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.multilib" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.printk" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.slist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.timeout_order" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.version" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.multilib" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.printk" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.slist" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.stack_sentinel.fatal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timeout_order" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.version" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.timeout.poll.timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.timeout.poll.timeout_fifo_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.timeout.poll.timeout_non_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.poll.poll_cancel_main_high_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.poll.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.poll.poll_multi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.poll.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.poll.poll_threadstate" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.poll.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.adc.poll_mode.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.poll.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.poll.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.poll.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.poll.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.uart_poll_in" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="peripheral.uart.uart_poll_out" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.bogus_dynamic_name" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.build_suspend_device_list" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.dummy_device" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.dummy_device_pm" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.dynamic_name" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.pm.bogus_dynamic_name" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.pm.build_suspend_device_list" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.pm.dummy_device" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.pm.dummy_device_pm" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.device.pm.dynamic_name" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="usb.device.dfu.bank_erase" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="usb.device.dfu.request_upgrade" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="usb.device.dfu.write_confirm" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="use.device.image_util.collecting" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.cmsis_rtos_v1.thread_apis" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.threads.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.threads.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.threads.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.access_after_revoke" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.access_other_memdomain" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.disable_mmu_mpu" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.is_usermode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.pass_noperms_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.pass_user_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kernel_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kernram" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_other_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_priv_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.revoke_noperms_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.start_kernel_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.user_mode_enter" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_control" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kernel_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kernram" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kernro" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kerntext" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_other_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_priv_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.obj_validation.generic_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.string_nlen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.to_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.user_string_alloc_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.user_string_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.access_kobject_without_init_access" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.access_kobject_without_init_with_access" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.app_memory" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.boot_page_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_essential_thread_from_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_higher_prio_thread_from_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_invalid_prio_thread_from_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_supervisor_thread_from_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_thread_from_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_thread_from_user_huge_stacksize" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.create_new_thread_from_user_no_access_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_access_all_grant" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_access_grant" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_access_grant_to_invalid_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_access_invalid_kobject" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_grant_access_kobj" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_grant_access_kobj_invalid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_reinitialize_thread_kobj" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_release_from_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.kobject_revoke_access" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_add_partitions_invalid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_add_partitions_simple" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_destroy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_invalid_access" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_partitions_supervisor_rw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_partitions_user_ro" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_partitions_user_rw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_remove_partitions" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_remove_partitions_simple" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_remove_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mem_domain_valid_access" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_readable_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_readable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_rw_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_supervisor_rw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_supervisor_w" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_user_rw_supervisor" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_user_rw_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_read_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_page_buffer_write_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_read" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_readable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_rw" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.mmu.multi_pde_buffer_writeable_write" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.obj_validation.generic_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.permission_inheritance" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.protection.exec_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.protection.exec_heap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.protection.exec_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.protection.write_ro" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.protection.write_text" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.stackprot" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscall_invalid_kobject" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.string_nlen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.to_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.user_string_alloc_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.syscalls.user_string_copy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.thread_has_residual_permissions" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.thread_without_kobject_permission" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.access_after_revoke" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.access_other_memdomain" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.disable_mmu_mpu" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.is_usermode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.pass_noperms_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.pass_user_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kernel_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kernram" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_other_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_priv_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.revoke_noperms_object" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.start_kernel_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.user_mode_enter" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_control" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kernel_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kernram" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kernro" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kerntext" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_other_stack" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_priv_stack" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="158" errors="0" failures="0" name="tests_kernel" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.half_pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.half_pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_block_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_block_writer_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_forever_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_forever_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_get_invalid_size" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_get_on_empty_pipe" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_get_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_on_multiple_elements" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_on_single_elements" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_reader_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.pipe_user_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.pipe.resource_pool_auto_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.idt_stub" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.nested_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.prevent_interruption" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="arch.interrupt.static_idt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.init" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_accept_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_accept_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_bind_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_bind_mcast_success" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_bind_uni_success_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_bind_uni_success_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_connect_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_connect_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_create" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_get_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_get_success" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_listen_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_listen_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v4_again" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v4_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v4_reconfig" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v4_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v4_timeout_forever" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v6_again" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v6_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v6_reconfig" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v6_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_recv_v6_timeout_forever" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_send_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_send_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_sendto_v4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.context.net_ctx_sendto_v6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="net.dns.no_ipv6.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.alert.isr_alert_pending" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.alert.thread_alert_pending" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.multiprocessing.wakeup_pending_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.object_tracing.obj_tracing" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_attrs_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_pend_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_purge_when_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_thread_overflow" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_user_attrs_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_user_purge_when_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.message_queue.msgq_user_thread_overflow" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.queue.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.sequence" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.user_workq_granted_access" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.user_workq_granted_access_setup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.user_workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.work_resubmit_to_queue" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.work_submit_to_multipleq" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.workqueue.workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.posix_mqueue" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="46" errors="0" failures="0" name="tests_crypto" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="crypto.mbedtls.mbedtls" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.aes_fixed_key_variable_text" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.aes_key_chain" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.aes_variable_key_fixed_text" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.aes_vectors" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.cbc_sp_800_38a_encrypt_decrypt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_5" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_7" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ccm_vector_8" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.cmac_mode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ctr_prng_reseed" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ctr_prng_robustness" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ctr_prng_uninstantiate" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ctr_prng_vector" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ctr_sp_800_38a_encrypt_decrypt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ecc_dh" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.ecc_dsa" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_5" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_7" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.hmac_prng" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_10" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_11" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_12" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_13_and_14" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_3" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_4" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_5" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_6" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_7" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_8" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.tinycrypt.sha256_9" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.rand32.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      </testcase>
  </testsuite>
    <testsuite tests="35" errors="0" failures="0" name="tests_benchmarks" skipped="0" time="0">
      <testcase classname="frdm_k64f:Fat" name="kernel.multiprocessing.coop_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.multiprocessing.preempt_resched_threads" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="kernel.sched.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k64f:Fat" name="portability.posix.sched_policy" time="0">
      </testcase>
  </testsuite>
</testsuites>
