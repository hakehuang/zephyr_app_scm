<?xml version="1.0"?>
<testsuites>
    <testsuite tests="299" errors="0" failures="0" name="" skipped="59" time="0">
      <testcase classname="frdm_k82f:net.dns.mdns_query" name="net.dns.mdns_query" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:net.dns.mdns_response" name="net.dns.mdns_response" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.assert_tests" name="testing.ztest.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.delay" name="testing.ztest.customized_output.delay" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.event_flags_isr" name="testing.ztest.customized_output.event_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.event_flags_signalled" name="testing.ztest.customized_output.event_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.kernel_apis" name="testing.ztest.customized_output.kernel_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.mempool" name="testing.ztest.customized_output.mempool" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.mempool_dynamic" name="testing.ztest.customized_output.mempool_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.messageq" name="testing.ztest.customized_output.messageq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.mutex" name="testing.ztest.customized_output.mutex" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.mutex_lock_timeout" name="testing.ztest.customized_output.mutex_lock_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.semaphore" name="testing.ztest.customized_output.semaphore" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.t- test_thread_prio_dynamic" name="testing.ztest.customized_output.t- test_thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.te6" name="testing.ztest.customized_output.te6" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thrd B started." name="testing.ztest.customized_output.thrd B started." time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_apis" name="testing.ztest.customized_output.thread_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_apis_dynamic" name="testing.ztest.customized_output.thread_apis_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_flags_isr" name="testing.ztest.customized_output.thread_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_flags_no_wait_timeout" name="testing.ztest.customized_output.thread_flags_no_wait_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_flags_signalled" name="testing.ztest.customized_output.thread_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_prio" name="testing.ztest.customized_output.thread_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.thread_prio_dynamic" name="testing.ztest.customized_output.thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.empty_test" name="testing.ztest.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.mock.multi_value_tests" name="testing.ztest.mock.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.mock.parameter_tests" name="testing.ztest.mock.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.mock.return_value_tests" name="testing.ztest.mock.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.unit.multi_value_tests" name="testing.ztest.unit.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.unit.parameter_tests" name="testing.ztest.unit.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.unit.return_value_tests" name="testing.ztest.unit.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.filter_handling" name="portability.posix.filter_handling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_close" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_fd_leak" name="portability.posix.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_mkdir" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_mount" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_open" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_read" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_readdir" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_unlink" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_write" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mutex.mutex_normal" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mutex.recursive_mutex" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_multiple_threads_single_key" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_normal_mutex" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_pthread_execution" name="portability.posix.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_pthread_termination" name="portability.posix.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_realtime" name="portability.posix.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_recursive_mutex" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_rw_lock" name="portability.posix.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_single_thread_multiple_keys" name="portability.posix.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread" name="portability.posix.pthread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_cancel" name="portability.posix.pthread_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_equal" name="portability.posix.pthread_equal" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_join" name="portability.posix.pthread_join" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_key.multiple_threads_single_key" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_key.single_thread_multiple_keys" name="portability.posix.pthread_key.single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.rw_lock" name="portability.posix.rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.sema" name="portability.posix.sema" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.filter_handling" name="portability.posix.filter_handling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_close" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_fd_leak" name="portability.posix.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_mkdir" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_mount" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_open" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_read" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_readdir" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_unlink" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_write" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mutex.mutex_normal" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mutex.recursive_mutex" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_multiple_threads_single_key" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_normal_mutex" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_pthread_execution" name="portability.posix.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_pthread_termination" name="portability.posix.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_realtime" name="portability.posix.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_recursive_mutex" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_rw_lock" name="portability.posix.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_single_thread_multiple_keys" name="portability.posix.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread" name="portability.posix.pthread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_cancel" name="portability.posix.pthread_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_equal" name="portability.posix.pthread_equal" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_join" name="portability.posix.pthread_join" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_key.multiple_threads_single_key" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_key.single_thread_multiple_keys" name="portability.posix.pthread_key.single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.rw_lock" name="portability.posix.rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.sema" name="portability.posix.sema" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.lock_preemptible" name="kernel.sched.native_posix.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.pending_thread_wakeup" name="kernel.sched.native_posix.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_cooperative" name="kernel.sched.native_posix.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_preemptible" name="kernel.sched.native_posix.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.priority_scheduling" name="kernel.sched.native_posix.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sched_is_preempt_thread" name="kernel.sched.native_posix.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sleep_cooperative" name="kernel.sched.native_posix.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.sleep_wakeup_preemptible" name="kernel.sched.native_posix.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.slice_reset" name="kernel.sched.native_posix.slice_reset" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.slice_scheduling" name="kernel.sched.native_posix.slice_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.time_slicing_disable_preemptible" name="kernel.sched.native_posix.time_slicing_disable_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.time_slicing_preemptible" name="kernel.sched.native_posix.time_slicing_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.unlock_preemptible" name="kernel.sched.native_posix.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:kernel.sched.native_posix.yield_cooperative" name="kernel.sched.native_posix.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.filter_handling" name="portability.posix.filter_handling" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_close" name="portability.posix.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_fd_leak" name="portability.posix.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_mkdir" name="portability.posix.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_mount" name="portability.posix.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_open" name="portability.posix.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_read" name="portability.posix.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_readdir" name="portability.posix.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_unlink" name="portability.posix.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.fs_write" name="portability.posix.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mqueue" name="portability.posix.mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mutex.mutex_normal" name="portability.posix.mutex.mutex_normal" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.mutex.recursive_mutex" name="portability.posix.mutex.recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_mqueue" name="portability.posix.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_multiple_threads_single_key" name="portability.posix.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_normal_mutex" name="portability.posix.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_pthread_execution" name="portability.posix.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_pthread_termination" name="portability.posix.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_realtime" name="portability.posix.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_recursive_mutex" name="portability.posix.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_rw_lock" name="portability.posix.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_semaphore" name="portability.posix.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_single_thread_multiple_keys" name="portability.posix.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread" name="portability.posix.pthread" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_cancel" name="portability.posix.pthread_cancel" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_equal" name="portability.posix.pthread_equal" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_join" name="portability.posix.pthread_join" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_key.multiple_threads_single_key" name="portability.posix.pthread_key.multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.pthread_key.single_thread_multiple_keys" name="portability.posix.pthread_key.single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.rw_lock" name="portability.posix.rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.sched_policy" name="portability.posix.sched_policy" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.sema" name="portability.posix.sema" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="frdm_k82f:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
  </testsuite>
</testsuites>
