<?xml version="1.0"?>
<testsuites>
    <testsuite tests="261" errors="0" failures="0" name="" skipped="59" time="0">
      <testcase classname="mimxrt1050_evk:libraries.libc.minimal.entropy_get_entropy" name="libraries.libc.minimal.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.entropy.entropy_get_entropy" name="peripheral.entropy.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:arch.zero_latency_interrupts.arm_zero_latency_irqs" name="arch.zero_latency_interrupts.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:benchmark.latency.loo6lo_sac1_sam01_dac1_dam01" name="benchmark.latency.loo6lo_sac1_sam01_dac1_dam01" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:benchmark.latency.loop" name="benchmark.latency.loop" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.memory_pool.arm_zero_latency_irqs" name="kernel.memory_pool.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.i2c.i2c_burst_gy271" name="peripheral.i2c.i2c_burst_gy271" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.i2c.i2c_gy271" name="peripheral.i2c.i2c_gy271" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.i2c_slave.eeprom_slave" name="peripheral.i2c_slave.eeprom_slave" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.mdns_query" name="net.dns.mdns_query" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.mdns_response" name="net.dns.mdns_response" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.assert_tests" name="testing.ztest.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.delay" name="testing.ztest.customized_output.delay" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.event_flags_isr" name="testing.ztest.customized_output.event_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.event_flags_signalled" name="testing.ztest.customized_output.event_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.kernel_apis" name="testing.ztest.customized_output.kernel_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mempool" name="testing.ztest.customized_output.mempool" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mempool_dynamic" name="testing.ztest.customized_output.mempool_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.messageq" name="testing.ztest.customized_output.messageq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mutex" name="testing.ztest.customized_output.mutex" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.mutex_lock_timeout" name="testing.ztest.customized_output.mutex_lock_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.semaphore" name="testing.ztest.customized_output.semaphore" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.t- test_thread_prio_dynamic" name="testing.ztest.customized_output.t- test_thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.te6" name="testing.ztest.customized_output.te6" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thrd B started." name="testing.ztest.customized_output.thrd B started." time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_apis" name="testing.ztest.customized_output.thread_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_apis_dynamic" name="testing.ztest.customized_output.thread_apis_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_flags_isr" name="testing.ztest.customized_output.thread_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_flags_no_wait_timeout" name="testing.ztest.customized_output.thread_flags_no_wait_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_flags_signalled" name="testing.ztest.customized_output.thread_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_prio" name="testing.ztest.customized_output.thread_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.thread_prio_dynamic" name="testing.ztest.customized_output.thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.empty_test" name="testing.ztest.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.mock.multi_value_tests" name="testing.ztest.mock.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.mock.parameter_tests" name="testing.ztest.mock.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.mock.return_value_tests" name="testing.ztest.mock.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.unit.multi_value_tests" name="testing.ztest.unit.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.unit.parameter_tests" name="testing.ztest.unit.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.unit.return_value_tests" name="testing.ztest.unit.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.fifo.timeout.poll.vlan_disable_all" name="kernel.fifo.timeout.poll.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.vlan_disable_all" name="net.dns.no_ipv6.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.dns.no_ipv6.vlan_send_data" name="net.dns.no_ipv6.vlan_send_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.address_setup" name="net.vlan.address_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.read (q order: 4, t/o: 70, fifo 0x2000001c)" name="net.vlan.read (q order: 4, t/o: 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeouer: 4, t/o: 70, fifo 0x2000001c)" name="net.vlan.timeouer: 4, t/o: 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_p 70, fifo 0x2000001c)" name="net.vlan.timeout_threads_p 70, fifo 0x2000001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_fail_on_fi00001c)" name="net.vlan.timeout_threads_pend_fail_on_fi00001c)" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_fail_on_fifo" name="net.vlan.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_on_dual_fifos" name="net.vlan.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.timeout_threads_pend_on_fifo" name="net.vlan.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_disable" name="net.vlan.vlan_disable" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_disable_all" name="net.vlan.vlan_disable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_enable" name="net.vlan.vlan_enable" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_enable_all" name="net.vlan.vlan_enable_all" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_send_data" name="net.vlan.vlan_send_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_setup" name="net.vlan.vlan_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.vlan.vlan_tci" name="net.vlan.vlan_tci" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.addr_parse" name="net.util.addr_parse" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.net_addr" name="net.util.net_addr" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.net_pkt_addr_parse" name="net.util.net_pkt_addr_parse" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.set_promisc_mode_off" name="net.util.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.set_promisc_mode_off_again" name="net.util.set_promisc_mode_off_again" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.utils" name="net.util.utils" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.util.verify_data" name="net.util.verify_data" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:usb.device.image_util.collecting" name="use.device.image_util.collecting" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:bluetooth.gatt.gatt_register" name="bluetooth.gatt.gatt_register" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:bluetooth.gatt.gatt_unregister" name="bluetooth.gatt.gatt_unregister" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:bluetooth.gatt.l2cap_register" name="bluetooth.gatt.l2cap_register" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.create_sockets" name="net.socket.register.create_sockets" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.icmpv6" name="net.socket.register.icmpv6" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.create_sockets" name="net.socket.register.tls.create_sockets" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_multiple_chunks" name="net.socket.register.tls.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_two_chunks" name="net.socket.register.tls.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:system.settings.functional.nvs.register_and_loading" name="system.settings.functional.nvs.register_and_loading" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.mbedtls.mbedtls" name="crypto.mbedtls.mbedtls" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_connect" name="net.mqtt.tls.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_disconnect" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_init" name="net.mqtt.tls.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_pingreq" name="net.mqtt.tls.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_publish" name="net.mqtt.tls.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.create_sockets" name="net.socket.register.tls.create_sockets" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_multiple_chunks" name="net.socket.register.tls.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_two_chunks" name="net.socket.register.tls.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials" name="net.tls_credentials" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_add" name="net.tls_credentials.credential_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_delete" name="net.tls_credentials.credential_delete" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_get" name="net.tls_credentials.credential_get" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_internal_iterate" name="net.tls_credentials.credential_internal_iterate" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.arp.mgmt" name="net.arp.mgmt" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_auto_neg" name="net.ethernet_mgmt.change_auto_neg" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_duplex" name="net.ethernet_mgmt.change_duplex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_link" name="net.ethernet_mgmt.change_link" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_mac_when_down" name="net.ethernet_mgmt.change_mac_when_down" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_mac_when_up" name="net.ethernet_mgmt.change_mac_when_up" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_promisc_mode_off" name="net.ethernet_mgmt.change_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_promisc_mode_on" name="net.ethernet_mgmt.change_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_qav_params" name="net.ethernet_mgmt.change_qav_params" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_same_duplex" name="net.ethernet_mgmt.change_same_duplex" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_same_link" name="net.ethernet_mgmt.change_same_link" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_to_same_auto_neg" name="net.ethernet_mgmt.change_to_same_auto_neg" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_to_same_promisc_mode" name="net.ethernet_mgmt.change_to_same_promisc_mode" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.change_unsupported_link" name="net.ethernet_mgmt.change_unsupported_link" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ethernet_mgmt.solicit_node" name="net.ethernet_mgmt.solicit_node" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.hostname.unique.ethernet_get_qav_kerning test - test_net_mgmt_cleanup" name="net.hostname.unique.ethernet_get_qav_kerning test - test_net_mgmt_cleanup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.hostname.unique.net_mgmt_catch_kernel" name="net.hostname.unique.net_mgmt_catch_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.hostname.unique.net_mgmt_catch_user" name="net.hostname.unique.net_mgmt_catch_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.hostname.unique.net_mgmt_cleanup" name="net.hostname.unique.net_mgmt_cleanup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.hostname.unique.net_mgmt_setup" name="net.hostname.unique.net_mgmt_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.management.mgmt" name="net.management.mgmt" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_get_qav_kernel" name="net.socket.mgmt.ethernet_get_qav_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_get_qav_user" name="net.socket.mgmt.ethernet_get_qav_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_get_unknown_opt_kernel" name="net.socket.mgmt.ethernet_get_unknown_opt_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_get_unknown_opt_user" name="net.socket.mgmt.ethernet_get_unknown_opt_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_set_qav_kernel" name="net.socket.mgmt.ethernet_set_qav_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_set_qav_user" name="net.socket.mgmt.ethernet_set_qav_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_set_unknown_opt_kernel" name="net.socket.mgmt.ethernet_set_unknown_opt_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.ethernet_set_unknown_opt_user" name="net.socket.mgmt.ethernet_set_unknown_opt_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.net_mgmt_catch_kernel" name="net.socket.mgmt.net_mgmt_catch_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.net_mgmt_catch_user" name="net.socket.mgmt.net_mgmt_catch_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.net_mgmt_cleanup" name="net.socket.mgmt.net_mgmt_cleanup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.net_mgmt_setup" name="net.socket.mgmt.net_mgmt_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.tr==============================================" name="net.socket.mgmt.tr==============================================" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_status" name="net.socket.mgmt.trickle_1_status" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_stopped" name="net.socket.mgmt.trickle_1_stopped" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_update" name="net.socket.mgmt.trickle_1_update" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_wa====================================" name="net.socket.mgmt.trickle_1_wa====================================" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_wait" name="net.socket.mgmt.trickle_1_wait" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_1_wait_long" name="net.socket.mgmt.trickle_1_wait_long" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_2_inc" name="net.socket.mgmt.trickle_2_inc" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.mgmt.trickle_2_status" name="net.socket.mgmt.trickle_2_status" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.clock_cycle" name="kernel.common.clock_cycle" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.clock_uptime" name="kernel.common.clock_uptime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.misra.clock_cycle" name="kernel.common.misra.clock_cycle" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.common.misra.clock_uptime" name="kernel.common.misra.clock_uptime" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:kernel.tickless.tickless_sysclock" name="kernel.tickless.tickless_sysclock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.address_setup" name="net.ptp.clock.address_setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.check_interfaces" name="net.ptp.clock.check_interfaces" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.deadline" name="net.ptp.clock.deadline" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_get_by_index" name="net.ptp.clock.ptp_clock_get_by_index" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_get_by_index_user" name="net.ptp.clock.ptp_clock_get_by_index_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_get_kernel" name="net.ptp.clock.ptp_clock_get_kernel" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_get_user" name="net.ptp.clock.ptp_clock_get_user" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_iface_1" name="net.ptp.clock.ptp_clock_iface_1" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_iface_2" name="net.ptp.clock.ptp_clock_iface_2" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.ptp.clock.ptp_clock_interfaces" name="net.ptp.clock.ptp_clock_interfaces" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.clock_support" name="portability.posix.clock_support" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:portability.posix.posix_clock" name="portability.posix.posix_clock" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_close" name="filesystem.fs_shell.fat_close" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_mkdir" name="filesystem.fs_shell.fat_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_mount" name="filesystem.fs_shell.fat_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_open" name="filesystem.fs_shell.fat_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_read" name="filesystem.fs_shell.fat_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_readdir" name="filesystem.fs_shell.fat_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_rmdir" name="filesystem.fs_shell.fat_rmdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_unlink" name="filesystem.fs_shell.fat_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fat_write" name="filesystem.fs_shell.fat_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fs_help" name="filesystem.fs_shell.fs_help" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.fs_shell_exit" name="filesystem.fs_shell.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_mkdir" name="filesystem.fs_shell.nffs_mkdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_mount" name="filesystem.fs_shell.nffs_mount" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_open" name="filesystem.fs_shell.nffs_open" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_read" name="filesystem.fs_shell.nffs_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_readdir" name="filesystem.fs_shell.nffs_readdir" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_unlink" name="filesystem.fs_shell.nffs_unlink" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.fs_shell.nffs_write" name="filesystem.fs_shell.nffs_write" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:filesystem.multifs.fs_shell_exit" name="filesystem.multifs.fs_shell_exit" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:libraries.encoding.cmd_shell" name="libraries.encoding.cmd_shell" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:libraries.encoding.shell_wildcards_dynamic" name="libraries.encoding.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:libraries.encoding.shell_wildcards_static" name="libraries.encoding.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.shell" name="net.shell" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.shell.ipv4_addresses" name="net.shell.ipv4_addresses" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.shell.net_shell" name="net.shell.net_shell" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.shell.setup" name="net.shell.setup" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart.shell.uart_fifo_fill" name="peripheral.uart.shell.uart_fifo_fill" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart.shell.uart_fifo_read" name="peripheral.uart.shell.uart_fifo_read" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart.shell.uart_poll_in" name="peripheral.uart.shell.uart_poll_in" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:peripheral.uart.shell.uart_poll_out" name="peripheral.uart.shell.uart_poll_out" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.app_handler" name="shell.app_handler" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_clear" name="shell.cmd_clear" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_help" name="shell.cmd_help" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_history" name="shell.cmd_history" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_resize" name="shell.cmd_resize" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_select" name="shell.cmd_select" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.cmd_shell" name="shell.cmd_shell" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.exit" name="shell.exit" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.help" name="shell.help" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.history_add_get" name="shell.history_add_get" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.history_get_up_and_down" name="shell.history_get_up_and_down" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.history_purge" name="shell.history_purge" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.log_output_raw_string" name="shell.log_output_raw_string" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.log_output_string" name="shell.log_output_string" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.module" name="shell.module" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.no_duplicates_in_a_row" name="shell.no_duplicates_in_a_row" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.select" name="shell.select" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.shell_module" name="shell.shell_module" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.shell_wildcards_dynamic" name="shell.shell_wildcards_dynamic" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.shell_wildcards_static" name="shell.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.storing_long_buffers" name="shell.storing_long_buffers" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:shell.too_long_line_not_stored" name="shell.too_long_line_not_stored" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.coap.mqtt_packet" name="net.coap.mqtt_packet" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_connect" name="net.mqtt.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_disconnect" name="net.mqtt.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_init" name="net.mqtt.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_pingreq" name="net.mqtt.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.mqtt_publish" name="net.mqtt.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.packet.mqtt_packet" name="net.mqtt.packet.mqtt_packet" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.packet.neighbor" name="net.mqtt.packet.neighbor" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_connect" name="net.mqtt.subscriber.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_disconnect" name="net.mqtt.subscriber.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_init" name="net.mqtt.subscriber.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_subscribe" name="net.mqtt.subscriber.mqtt_subscribe" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.subscriber.mqtt_unsubscribe" name="net.mqtt.subscriber.mqtt_unsubscribe" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_connect" name="net.mqtt.tls.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_disconnect" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_init" name="net.mqtt.tls.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_pingreq" name="net.mqtt.tls.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_publish" name="net.mqtt.tls.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:crypto.mbedtls.mbedtls" name="crypto.mbedtls.mbedtls" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_connect" name="net.mqtt.tls.mqtt_connect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_disconnect" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_init" name="net.mqtt.tls.mqtt_init" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_pingreq" name="net.mqtt.tls.mqtt_pingreq" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.mqtt.tls.mqtt_publish" name="net.mqtt.tls.mqtt_publish" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.create_sockets" name="net.socket.register.tls.create_sockets" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_multiple_chunks" name="net.socket.register.tls.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.socket.register.tls.log_hexdump_data_get_two_chunks" name="net.socket.register.tls.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials" name="net.tls_credentials" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_add" name="net.tls_credentials.credential_add" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_delete" name="net.tls_credentials.credential_delete" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_get" name="net.tls_credentials.credential_get" time="0">
      </testcase>
      <testcase classname="mimxrt1050_evk:net.tls_credentials.credential_internal_iterate" name="net.tls_credentials.credential_internal_iterate" time="0">
      </testcase>
  </testsuite>
</testsuites>
