<?xml version="1.0"?>
<testsuites>
    <testsuite tests="648" errors="0" failures="0" name="" skipped="56" time="0">
      <testcase classname="frdm_kl25z:testing.ztest.assert_tests" name="testing.ztest.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.delay" name="testing.ztest.customized_output.delay" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.event_flags_isr" name="testing.ztest.customized_output.event_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.event_flags_signalled" name="testing.ztest.customized_output.event_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.kernel_apis" name="testing.ztest.customized_output.kernel_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mempool" name="testing.ztest.customized_output.mempool" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mempool_dynamic" name="testing.ztest.customized_output.mempool_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.messageq" name="testing.ztest.customized_output.messageq" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mutex" name="testing.ztest.customized_output.mutex" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.mutex_lock_timeout" name="testing.ztest.customized_output.mutex_lock_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.semaphore" name="testing.ztest.customized_output.semaphore" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.t- test_thread_prio_dynamic" name="testing.ztest.customized_output.t- test_thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.te6" name="testing.ztest.customized_output.te6" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thrd B started." name="testing.ztest.customized_output.thrd B started." time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_apis" name="testing.ztest.customized_output.thread_apis" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_apis_dynamic" name="testing.ztest.customized_output.thread_apis_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_flags_isr" name="testing.ztest.customized_output.thread_flags_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_flags_no_wait_timeout" name="testing.ztest.customized_output.thread_flags_no_wait_timeout" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_flags_signalled" name="testing.ztest.customized_output.thread_flags_signalled" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_prio" name="testing.ztest.customized_output.thread_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.thread_prio_dynamic" name="testing.ztest.customized_output.thread_prio_dynamic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.empty_test" name="testing.ztest.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.mock.multi_value_tests" name="testing.ztest.mock.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.mock.parameter_tests" name="testing.ztest.mock.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.mock.return_value_tests" name="testing.ztest.mock.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.assert_pass" name="testing.ztest.regular_output.assert_pass" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.assert_skip" name="testing.ztest.regular_output.assert_skip" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_cancel_main_low_prio" name="testing.ztest.regular_output.poll_cancel_main_low_prio" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_no_wait" name="testing.ztest.regular_output.poll_no_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.poll_wai zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.poll_wait" name="testing.ztest.regular_output.poll_wait" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" name="testing.ztest.regular_output.test OS build zephyr-v2.0.0-1233-g3d4aef8f9987 *****" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.unit.multi_value_tests" name="testing.ztest.unit.multi_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.unit.parameter_tests" name="testing.ztest.unit.parameter_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.unit.return_value_tests" name="testing.ztest.unit.return_value_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.chained_read" name="peripheral.uart_async_api.chained_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.double_buffer" name="peripheral.uart_async_api.double_buffer" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.read_abort" name="peripheral.uart_async_api.read_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.single_read" name="peripheral.uart_async_api.single_read" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.uart_async_api.write_abort" name="peripheral.uart_async_api.write_abort" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_========================================" name="benchmark.boot_time.dns_========================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_q==================" name="benchmark.boot_time.dns_q==================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_invalid_callback" name="benchmark.boot_time.dns_query_invalid_callback" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_invalid_context" name="benchmark.boot_time.dns_query_invalid_context" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_invalid_query" name="benchmark.boot_time.dns_query_invalid_query" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv4_numeric" name="benchmark.boot_time.dns_query_ipv4_numeric" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv4_server=======================" name="benchmark.boot_time.dns_query_ipv4_server=======================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv4_server_count" name="benchmark.boot_time.dns_query_ipv4_server_count" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv4_timeout" name="benchmark.boot_time.dns_query_ipv4_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv6_server_count" name="benchmark.boot_time.dns_query_ipv6_server_count" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv6_t=======" name="benchmark.boot_time.dns_query_ipv6_t=======" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_ipv6_timeout" name="benchmark.boot_time.dns_query_ipv6_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_server_c=" name="benchmark.boot_time.dns_query_server_c=" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_server_count" name="benchmark.boot_time.dns_query_server_count" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.dns_query_too_many" name="benchmark.boot_time.dns_query_too_many" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.boot_time.main" name="benchmark.boot_time.main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.zero_latency_interrupts.arm_zero_latency_irqs" name="arch.zero_latency_interrupts.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.latency.loo6lo_sac1_sam01_dac1_dam01" name="benchmark.latency.loo6lo_sac1_sam01_dac1_dam01" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.latency.loop" name="benchmark.latency.loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.arm_zero_latency_irqs" name="kernel.memory_pool.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.timing.default_kernel" name="benchmark.timing.default_kernel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:benchmark.timing.userspace" name="benchmark.timing.userspace" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_no_userspace.fatal" name="kernel.common.stack_protection_no_userspace.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.access_after_revoke" name="kernel.memory_protection.userspace.access_after_revoke" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.access_other_memdomain" name="kernel.memory_protection.userspace.access_other_memdomain" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.bad_syscall" name="kernel.memory_protection.userspace.bad_syscall" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.disable_mmu_mpu" name="kernel.memory_protection.userspace.disable_mmu_mpu" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_add_part_context_switch" name="kernel.memory_protection.userspace.domain_add_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_add_part_drop_to_user" name="kernel.memory_protection.userspace.domain_add_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_add_thread_context_switch" name="kernel.memory_protection.userspace.domain_add_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_add_thread_drop_to_user" name="kernel.memory_protection.userspace.domain_add_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_remove_part_context_switch" name="kernel.memory_protection.userspace.domain_remove_part_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_remove_part_drop_to_user" name="kernel.memory_protection.userspace.domain_remove_part_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_remove_thread_context_switch" name="kernel.memory_protection.userspace.domain_remove_thread_context_switch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" name="kernel.memory_protection.userspace.domain_remove_thread_drop_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.is_usermode" name="kernel.memory_protection.userspace.is_usermode" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.object_recycle" name="kernel.memory_protection.userspace.object_recycle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.oops_exception" name="kernel.memory_protection.userspace.oops_exception" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.oops_maxint" name="kernel.memory_protection.userspace.oops_maxint" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.oops_oops" name="kernel.memory_protection.userspace.oops_oops" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.oops_panic" name="kernel.memory_protection.userspace.oops_panic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.oops_stackcheck" name="kernel.memory_protection.userspace.oops_stackcheck" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.pass_noperms_object" name="kernel.memory_protection.userspace.pass_noperms_object" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.pass_user_object" name="kernel.memory_protection.userspace.pass_user_object" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.read_kernel_data" name="kernel.memory_protection.userspace.read_kernel_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.read_kernram" name="kernel.memory_protection.userspace.read_kernram" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.read_kobject_user_pipe" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.read_other_stack" name="kernel.memory_protection.userspace.read_other_stack" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.read_priv_stack" name="kernel.memory_protection.userspace.read_priv_stack" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.revoke_noperms_object" name="kernel.memory_protection.userspace.revoke_noperms_object" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.stack_buffer" name="kernel.memory_protection.userspace.stack_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.stackprot" name="kernel.memory_protection.userspace.stackprot" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.start_kernel_thread" name="kernel.memory_protection.userspace.start_kernel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.unimplemented_syscall" name="kernel.memory_protection.userspace.unimplemented_syscall" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.user_mode_enter" name="kernel.memory_protection.userspace.user_mode_enter" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_control" name="kernel.memory_protection.userspace.write_control" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_kernel_data" name="kernel.memory_protection.userspace.write_kernel_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_kernram" name="kernel.memory_protection.userspace.write_kernram" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_kernro" name="kernel.memory_protection.userspace.write_kernro" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_kerntext" name="kernel.memory_protection.userspace.write_kerntext" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_kobject_user_pipe" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_other_stack" name="kernel.memory_protection.userspace.write_other_stack" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.write_priv_stack" name="kernel.memory_protection.userspace.write_priv_stack" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.check_promisc_mode_off" name="net.iface.no_userspace_allowed.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.check_promisc_mode_on" name="net.iface.no_userspace_allowed.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.dn===================================================================" name="net.iface.no_userspace_allowed.dn===================================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.dns_add_cal_MAX_IPV4_COUNT value." name="net.iface.no_userspace_allowed.dns_add_cal_MAX_IPV4_COUNT value." time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.dns_add_callback6" name="net.iface.no_userspace_allowed.dns_add_callback6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.dns_do_not_add_add_callback6" name="net.iface.no_userspace_allowed.dns_do_not_add_add_callback6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.dns_remove_c=========================================================" name="net.iface.no_userspace_allowed.dns_remove_c=========================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.dns_remove_callback6" name="net.iface.no_userspace_allowed.dns_remove_callback6" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.gw_addr_add" name="net.iface.no_userspace_allowed.gw_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.iface_setup" name="net.iface.no_userspace_allowed.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.init" name="net.iface.no_userspace_allowed.init" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.netmask_addr" name="net.iface.no_userspace_allowed.netmask_addr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.netmask_addr_add" name="net.iface.no_userspace_allowed.netmask_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.select_src_iface" name="net.iface.no_userspace_allowed.select_src_iface" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.send_iface1" name="net.iface.no_userspace_allowed.send_iface1" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.send_iface1_down" name="net.iface.no_userspace_allowed.send_iface1_down" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.send_iface1_up" name="net.iface.no_userspace_allowed.send_iface1_up" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.send_iface2" name="net.iface.no_userspace_allowed.send_iface2" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.send_iface3" name="net.iface.no_userspace_allowed.send_iface3" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.senf8f9987 *****" name="net.iface.no_userspace_allowed.senf8f9987 *****" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.set_p===========================================" name="net.iface.no_userspace_allowed.set_p===========================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.set_promisc_mode_off" name="net.iface.no_userspace_allowed.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.set_promisc_mode_on" name="net.iface.no_userspace_allowed.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.set_promisc_mode_on_ag==========================" name="net.iface.no_userspace_allowed.set_promisc_mode_on_ag==========================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.set_promisc_mode_on_again" name="net.iface.no_userspace_allowed.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_adS - v4_addr_lookup" name="net.iface.no_userspace_allowed.v4_adS - v4_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_add" name="net.iface.no_userspace_allowed.v4_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_add_user" name="net.iface.no_userspace_allowed.v4_addr_add_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_lookup" name="net.iface.no_userspace_allowed.v4_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_lookupS - v4_addr_add" name="net.iface.no_userspace_allowed.v4_addr_lookupS - v4_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_lookup_user" name="net.iface.no_userspace_allowed.v4_addr_lookup_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_rm" name="net.iface.no_userspace_allowed.v4_addr_rm" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_rm_usedr_lookup" name="net.iface.no_userspace_allowed.v4_addr_rm_usedr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v4_addr_rm_user" name="net.iface.no_userspace_allowed.v4_addr_rm_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v6_addr_add" name="net.iface.no_userspace_allowed.v6_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v6_addr_add_user" name="net.iface.no_userspace_allowed.v6_addr_add_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v6_addr_lookup" name="net.iface.no_userspace_allowed.v6_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v6_addr_lookup_user" name="net.iface.no_userspace_allowed.v6_addr_lookup_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v6_addr_rm" name="net.iface.no_userspace_allowed.v6_addr_rm" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.no_userspace_allowed.v6_addr_rm_user" name="net.iface.no_userspace_allowed.v6_addr_rm_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.check_promisc_mode_off" name="net.iface.with_userspace.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.check_promisc_mode_on" name="net.iface.with_userspace.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.gw_addr_add" name="net.iface.with_userspace.gw_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.iface_setup" name="net.iface.with_userspace.iface_setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.netmask_addr_add" name="net.iface.with_userspace.netmask_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.queue_get_2threads" name="net.iface.with_userspace.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.queue_isr2thread" name="net.iface.with_userspace.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.queue_thread2isr" name="net.iface.with_userspace.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.select_src_iface" name="net.iface.with_userspace.select_src_iface" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.send_iface1" name="net.iface.with_userspace.send_iface1" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.send_iface1_down" name="net.iface.with_userspace.send_iface1_down" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.send_iface1_up" name="net.iface.with_userspace.send_iface1_up" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.send_iface2" name="net.iface.with_userspace.send_iface2" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.send_iface3" name="net.iface.with_userspace.send_iface3" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.set_promisc_mode_off" name="net.iface.with_userspace.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.set_promisc_mode_on" name="net.iface.with_userspace.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.set_promisc_mode_on_again" name="net.iface.with_userspace.set_promisc_mode_on_again" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v4_addr_add" name="net.iface.with_userspace.v4_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v4_addr_add_user" name="net.iface.with_userspace.v4_addr_add_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v4_addr_lookup" name="net.iface.with_userspace.v4_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v4_addr_lookup_user" name="net.iface.with_userspace.v4_addr_lookup_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v4_addr_rm" name="net.iface.with_userspace.v4_addr_rm" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v4_addr_rm_user" name="net.iface.with_userspace.v4_addr_rm_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v6_addr_add" name="net.iface.with_userspace.v6_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v6_addr_add_user" name="net.iface.with_userspace.v6_addr_add_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v6_addr_lookup" name="net.iface.with_userspace.v6_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v6_addr_lookup_user" name="net.iface.with_userspace.v6_addr_lookup_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v6_addr_rm" name="net.iface.with_userspace.v6_addr_rm" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.iface.with_userspace.v6_addr_rm_user" name="net.iface.with_userspace.v6_addr_rm_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.bsearch" name="libraries.libc.minimal.bsearch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.calloc" name="libraries.libc.minimal.calloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.entropy_get_entropy" name="libraries.libc.minimal.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.free" name="libraries.libc.minimal.free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.gmtime" name="libraries.libc.minimal.gmtime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.malloc" name="libraries.libc.minimal.malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memalloc_all" name="libraries.libc.minimal.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memalloc_max" name="libraries.libc.minimal.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memset" name="libraries.libc.minimal.memset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.realloc" name="libraries.libc.minimal.realloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.reallocarray" name="libraries.libc.minimal.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.s32" name="libraries.libc.minimal.s32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.s64" name="libraries.libc.minimal.s64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strchr" name="libraries.libc.minimal.strchr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strcmp" name="libraries.libc.minimal.strcmp" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strcpy" name="libraries.libc.minimal.strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strlen" name="libraries.libc.minimal.strlen" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strncpy" name="libraries.libc.minimal.strncpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.testarting test - test_strcpy" name="libraries.libc.minimal.testarting test - test_strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.errno.newlib.thread_context" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.calloc" name="libraries.libc.newlib.calloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.free" name="libraries.libc.newlib.free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.malloc" name="libraries.libc.newlib.malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.memalloc_all" name="libraries.libc.newlib.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.memalloc_max" name="libraries.libc.newlib.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.realloc" name="libraries.libc.newlib.realloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.reallocarray" name="libraries.libc.newlib.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_close" name="portability.posix.newlib.fs_close" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_fd_leak" name="portability.posix.newlib.fs_fd_leak" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_mkdir" name="portability.posix.newlib.fs_mkdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_mount" name="portability.posix.newlib.fs_mount" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_open" name="portability.posix.newlib.fs_open" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_read" name="portability.posix.newlib.fs_read" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_readdir" name="portability.posix.newlib.fs_readdir" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_unlink" name="portability.posix.newlib.fs_unlink" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.fs_write" name="portability.posix.newlib.fs_write" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.gen_gz_inc_file_mtime_arg" name="portability.posix.newlib.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_clock" name="portability.posix.newlib.posix_clock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_mqueue" name="portability.posix.newlib.posix_mqueue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_multiple_threads_single_key" name="portability.posix.newlib.posix_multiple_threads_single_key" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_normal_mutex" name="portability.posix.newlib.posix_normal_mutex" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_pthread_execution" name="portability.posix.newlib.posix_pthread_execution" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_pthread_termination" name="portability.posix.newlib.posix_pthread_termination" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_realtime" name="portability.posix.newlib.posix_realtime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_recursive_mutex" name="portability.posix.newlib.posix_recursive_mutex" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_rw_lock" name="portability.posix.newlib.posix_rw_lock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_semaphore" name="portability.posix.newlib.posix_semaphore" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_single_thread_multiple_keys" name="portability.posix.newlib.posix_single_thread_multiple_keys" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.ring_buffer_main" name="portability.posix.newlib.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.ringbuffer_raw" name="portability.posix.newlib.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.ringbuffer_size_put_get_thread_isr" name="portability.posix.newlib.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" name="portability.posix.newlib.te_ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.array" name="misc.app_dev.libcxx.array" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.array" name="misc.app_dev.libcxx.exceptions.array" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.sched_is_preempt_thread" name="misc.app_dev.libcxx.exceptions.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.unlock_nested_sched_lock" name="misc.app_dev.libcxx.exceptions.unlock_nested_sched_lock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.vector" name="misc.app_dev.libcxx.exceptions.vector" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.msg_receiver_unlimited" name="misc.app_dev.libcxx.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.vector" name="misc.app_dev.libcxx.vector" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.entropy_get_entropy" name="libraries.libc.minimal.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.entropy.entropy_get_entropy" name="peripheral.entropy.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.rand32" name="crypto.rand32.rand32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" name="crypto.rand32.random_hw_xoroshiro.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" name="crypto.rand32.random_hw_xoroshiro.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.fatal" name="crypto.rand32.random_sw_systimer.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.rand32" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.te" name="crypto.rand32.random_sw_systimer.te" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.dns.no_ipv6.rand32" name="net.dns.no_ipv6.rand32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.fatal" name="crypto.rand32.random_sw_systimer.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.rand32" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.te" name="crypto.rand32.random_sw_systimer.te" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:buildsystem.include_file.assert_mem_equal" name="buildsystem.include_file.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:buildsystem.include_file.gen_gz_inc_file" name="buildsystem.include_file.gen_gz_inc_file" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:buildsystem.include_file.gen_gz_inc_file_mtime_arg" name="buildsystem.include_file.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:buildsystem.include_file.gen_gz_inc_file_no_mtime" name="buildsystem.include_file.gen_gz_inc_file_no_mtime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:buildsystem.include_file.gen_inc_file" name="buildsystem.include_file.gen_inc_file" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.interrupt.static_idt" name="arch.interrupt.static_idt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.encoding.shell_wildcards_static" name="libraries.encoding.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.shell_wildcards_static" name="shell.shell_wildcards_static" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.create_new_thread_from_user_huge_stacksize" name="kernel.memory_protection.create_new_thread_from_user_huge_stacksize" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" name="kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.create_new_thread_from_user_huge_stacksize" name="kernel.memory_slabs.create_new_thread_from_user_huge_stacksize" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.create_new_thread_from_user_hugting test - test_create_new_thread_from_user_huge_stacksize" name="kernel.memory_slabs.create_new_thread_from_user_hugting test - test_create_new_thread_from_user_huge_stacksize" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling.call_stacks_analyze_idle" name="kernel.profiling.call_stacks_analyze_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling.call_stacks_analyze_main" name="kernel.profiling.call_stacks_analyze_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling.call_stacks_analyze_workq" name="kernel.profiling.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.call_stacks_analyze_workq" name="portability.posix.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.vlan.timeout_threads_pend_on_dual_fifos" name="net.vlan.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.mqtt.mqtt_disconnect" name="net.mqtt.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.mqtt.subscriber.mqtt_disconnect" name="net.mqtt.subscriber.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.mqtt.tls.mqtt_disconnect" name="net.mqtt.tls.mqtt_disconnect" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.bsearch" name="libraries.libc.bsearch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.filter_attach" name="libraries.libc.filter_attach" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.limits" name="libraries.libc.limits" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.memcmp" name="libraries.libc.memcmp" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.memset" name="libraries.libc.memset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.bsearch" name="libraries.libc.minimal.bsearch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.calloc" name="libraries.libc.minimal.calloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.entropy_get_entropy" name="libraries.libc.minimal.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.free" name="libraries.libc.minimal.free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.gmtime" name="libraries.libc.minimal.gmtime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.malloc" name="libraries.libc.minimal.malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memalloc_all" name="libraries.libc.minimal.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memalloc_max" name="libraries.libc.minimal.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memset" name="libraries.libc.minimal.memset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.realloc" name="libraries.libc.minimal.realloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.reallocarray" name="libraries.libc.minimal.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.s32" name="libraries.libc.minimal.s32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.s64" name="libraries.libc.minimal.s64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strchr" name="libraries.libc.minimal.strchr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strcmp" name="libraries.libc.minimal.strcmp" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strcpy" name="libraries.libc.minimal.strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strlen" name="libraries.libc.minimal.strlen" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strncpy" name="libraries.libc.minimal.strncpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.testarting test - test_strcpy" name="libraries.libc.minimal.testarting test - test_strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.calloc" name="libraries.libc.newlib.calloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.free" name="libraries.libc.newlib.free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.malloc" name="libraries.libc.newlib.malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.memalloc_all" name="libraries.libc.newlib.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.memalloc_max" name="libraries.libc.newlib.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.realloc" name="libraries.libc.newlib.realloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.newlib.reallocarray" name="libraries.libc.newlib.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.receive_timeout" name="libraries.libc.receive_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.se====" name="libraries.libc.se====" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.sen==================================================" name="libraries.libc.sen==================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_and_forget" name="libraries.libc.send_and_forget" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_callback" name="libraries.libc.send_callback" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receive_buffer" name="libraries.libc.send_receive_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receive_ext" name="libraries.libc.send_receive_ext" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receive_ext_masked" name="libraries.libc.send_receive_ext_masked" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receive_std" name="libraries.libc.send_receive_std" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receive_std_masked" name="libraries.libc.send_receive_std_masked" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receive_wrong_id" name="libraries.libc.send_receive_wrong_id" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.send_receivrting test - test_send_receive_std_masked" name="libraries.libc.send_receivrting test - test_send_receive_std_masked" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.set_loopback" name="libraries.libc.set_loopback" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.sprintf_double" name="libraries.libc.sprintf_double" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.sprintf_integer" name="libraries.libc.sprintf_integer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.sprintf_misc" name="libraries.libc.sprintf_misc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.sprintf_string" name="libraries.libc.sprintf_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.ssize_t" name="libraries.libc.ssize_t" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.stdbool" name="libraries.libc.stdbool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.stddef" name="libraries.libc.stddef" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.stdint" name="libraries.libc.stdint" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.strchr" name="libraries.libc.strchr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.strcmp" name="libraries.libc.strcmp" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.strcpy" name="libraries.libc.strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.strlen" name="libraries.libc.strlen" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.strncpy" name="libraries.libc.strncpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.strxspn" name="libraries.libc.strxspn" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.tet_send_receive_ext" name="libraries.libc.tet_send_receive_ext" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.vsnprintf" name="libraries.libc.vsnprintf" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.vsprintf" name="libraries.libc.vsprintf" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.array" name="misc.app_dev.libcxx.array" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.array" name="misc.app_dev.libcxx.exceptions.array" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.sched_is_preempt_thread" name="misc.app_dev.libcxx.exceptions.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.unlock_nested_sched_lock" name="misc.app_dev.libcxx.exceptions.unlock_nested_sched_lock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.exceptions.vector" name="misc.app_dev.libcxx.exceptions.vector" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.msg_receiver_unlimited" name="misc.app_dev.libcxx.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:misc.app_dev.libcxx.vector" name="misc.app_dev.libcxx.vector" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_arguments" name="logging.log_core.log_arguments" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_backend_runtime_filtering" name="logging.log_core.log_backend_runtime_filtering" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_from_declared_module" name="logging.log_core.log_from_declared_module" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_msg_dropped_notification" name="logging.log_core.log_msg_dropped_notification" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_overflow" name="logging.log_core.log_overflow" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_panic" name="logging.log_core.log_panic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_strdup_detect_miss" name="logging.log_core.log_strdup_detect_miss" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_strdup_gc" name="logging.log_core.log_strdup_gc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.strdup_trimming" name="logging.log_core.strdup_trimming" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.log_list" name="logging.log_list.log_list" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.log_list_multiple_items" name="logging.log_list.log_list_multiple_items" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.osdesc_feature" name="logging.log_list.osdesc_feature" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.usb_dc_api" name="logging.log_list.usb_dc_api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.usb_dc_api_read_write" name="logging.log_list.usb_dc_api_read_write" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.usb_deconfig" name="logging.log_list.usb_deconfig" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_list.usb_disable" name="logging.log_list.usb_disable" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_output.log_list" name="logging.log_output.log_list" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_output.log_list_multiple_items" name="logging.log_output.log_list_multiple_items" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_core.log_msg_dropped_notification" name="logging.log_core.log_msg_dropped_notification" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_msg.arm_irq_vector_table" name="logging.log_msg.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_msg.log_hexdump_data_get_multiple_chunks" name="logging.log_msg.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_msg.log_hexdump_data_get_single_chunk" name="logging.log_msg.log_hexdump_data_get_single_chunk" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_msg.log_hexdump_data_get_two_chunks" name="logging.log_msg.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_msg.log_hexdump_msg" name="logging.log_msg.log_hexdump_msg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_msg.log_std_msg" name="logging.log_msg.log_std_msg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_output.log_list" name="logging.log_output.log_list" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_output.log_list_multiple_items" name="logging.log_output.log_list_multiple_items" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_output.log_output_raw_string" name="logging.log_output.log_output_raw_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:logging.log_output.log_output_string" name="logging.log_output.log_output_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.log_output_raw_string" name="shell.log_output_raw_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:shell.log_output_string" name="shell.log_output_string" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.userspace.is_usermode" name="kernel.memory_protection.userspace.is_usermode" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.stack_random.stack_pt_randomization" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_00p 0x0000 0x0000" name="kernel.common.adc_00p 0x0000 0x0000" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_asynchronous_call" name="kernel.common.adc_asynchronous_call" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_invalid_request" name="kernel.common.adc_invalid_request" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_repeated_sampling" name="kernel.common.adc_repeated_sampling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_repeated_samplings" name="kernel.common.adc_repeated_samplings" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_sample_two_channels" name="kernel.common.adc_sample_two_channels" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_sample_with_inter: 0x0150 0x0ck: done 5" name="kernel.common.adc_sample_with_inter: 0x0150 0x0ck: done 5" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_sample_with_interval" name="kernel.common.adc_sample_with_interval" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc" name="peripheral.adc.adc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_asynchronous_call" name="peripheral.adc.adc_asynchronous_call" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_invalid_request" name="peripheral.adc.adc_invalid_request" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_repeated_samplings" name="peripheral.adc.adc_repeated_samplings" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_sample" name="peripheral.adc.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_sample_one_channel" name="peripheral.adc.adc_sample_one_channel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_sample_two_channels" name="peripheral.adc.adc_sample_two_channels" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.adc_sample_with_interval" name="peripheral.adc.adc_sample_with_interval" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.poll_mode.adc_sample" name="peripheral.adc.poll_mode.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.resolution_10.adc_sample" name="peripheral.adc.resolution_10.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.resolution_12.adc_sample" name="peripheral.adc.resolution_12.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.resolution_6.adc_sample" name="peripheral.adc.resolution_6.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.resolution_8.adc_sample" name="peripheral.adc.resolution_8.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.s32" name="peripheral.adc.s32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.s64" name="peripheral.adc.s64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.adc.threads_spawn_params" name="peripheral.adc.threads_spawn_params" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.can.adc_invalid_request" name="peripheral.can.adc_invalid_request" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.rbtree.rbtree_spam" name="libraries.data_structures.rbtree.rbtree_spam" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.byte_put_free" name="libraries.data_structures.byte_put_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.capacity" name="libraries.data_structures.capacity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.rbtree.rbtree_spam" name="libraries.data_structures.rbtree.rbtree_spam" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.reset" name="libraries.data_structures.reset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ring_buffer_main" name="libraries.data_structures.ring_buffer_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_alloc_put" name="libraries.data_structures.ringbuffer_alloc_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_declare_pow2" name="libraries.data_structures.ringbuffer_declare_pow2" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_declare_size" name="libraries.data_structures.ringbuffer_declare_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_init" name="libraries.data_structures.ringbuffer_init" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" name="libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_put_get_isr" name="libraries.data_structures.ringbuffer_put_get_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_put_get_thread" name="libraries.data_structures.ringbuffer_put_get_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_put_get_thread_isr" name="libraries.data_structures.ringbuffer_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_raw" name="libraries.data_structures.ringbuffer_raw" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.data_structures.ringbuffer_size_put_get_thread_isr" name="libraries.data_structures.ringbuffer_size_put_get_thread_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.bsearch" name="libraries.libc.minimal.bsearch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.calloc" name="libraries.libc.minimal.calloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.entropy_get_entropy" name="libraries.libc.minimal.entropy_get_entropy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.free" name="libraries.libc.minimal.free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.gmtime" name="libraries.libc.minimal.gmtime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.malloc" name="libraries.libc.minimal.malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memalloc_all" name="libraries.libc.minimal.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memalloc_max" name="libraries.libc.minimal.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.memset" name="libraries.libc.minimal.memset" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.realloc" name="libraries.libc.minimal.realloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.reallocarray" name="libraries.libc.minimal.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.s32" name="libraries.libc.minimal.s32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.s64" name="libraries.libc.minimal.s64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strchr" name="libraries.libc.minimal.strchr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strcmp" name="libraries.libc.minimal.strcmp" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strcpy" name="libraries.libc.minimal.strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strlen" name="libraries.libc.minimal.strlen" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.strncpy" name="libraries.libc.minimal.strncpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:libraries.libc.minimal.testarting test - test_strcpy" name="libraries.libc.minimal.testarting test - test_strcpy" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.arm_thread_swap" name="arch.arm.swap.common.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.no_optimizations.hostname_set" name="arch.arm.swap.common.fp_sharing.no_optimizations.hostname_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.fp_sharing.pool_block_get" name="arch.arm.swap.common.fp_sharing.pool_block_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.arm.swap.common.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.common.xip.globals" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.common.xip.nondefault.globals" name="arch.common.xip.nondefault.globals" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common" name="kernel.common" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_00p 0x0000 0x0000" name="kernel.common.adc_00p 0x0000 0x0000" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_asynchronous_call" name="kernel.common.adc_asynchronous_call" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_invalid_request" name="kernel.common.adc_invalid_request" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_repeated_sampling" name="kernel.common.adc_repeated_sampling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_repeated_samplings" name="kernel.common.adc_repeated_samplings" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_sample_two_channels" name="kernel.common.adc_sample_two_channels" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_sample_with_inter: 0x0150 0x0ck: done 5" name="kernel.common.adc_sample_with_inter: 0x0150 0x0ck: done 5" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.adc_sample_with_interval" name="kernel.common.adc_sample_with_interval" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.atomic" name="kernel.common.atomic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.bitfield" name="kernel.common.bitfield" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.bounds_check_mitigation" name="kernel.common.bounds_check_mitigation" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.busy_wait" name="kernel.common.busy_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.byteorder_mem_swap" name="kernel.common.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.byteorder_memcpy_swap" name="kernel.common.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.clock_cycle" name="kernel.common.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.clock_uptime" name="kernel.common.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.critical" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.dlist" name="kernel.common.dlist" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.errno.newlib.thread_context" name="kernel.common.errno.newlib.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.errno.thread_context" name="kernel.common.errno.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.init.verify_bootdelay" name="kernel.common.init.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.intmath" name="kernel.common.intmath" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.irq_offload" name="kernel.common.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.k_sleep" name="kernel.common.k_sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.k_yield" name="kernel.common.k_yield" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_cpu_idle" name="kernel.common.kernel_cpu_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_cpu_idle_atomic" name="kernel.common.kernel_cpu_idle_atomic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_ctx_thread" name="kernel.common.kernel_ctx_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_interrupts" name="kernel.common.kernel_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_thread" name="kernel.common.kernel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_timer_interrupts" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.main" name="kernel.common.main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.atomic" name="kernel.common.misra.atomic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.bitfield" name="kernel.common.misra.bitfield" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.bounds_check_mitigation" name="kernel.common.misra.bounds_check_mitigation" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.byteorder_mem_swap" name="kernel.common.misra.byteorder_mem_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.byteorder_memcpy_swap" name="kernel.common.misra.byteorder_memcpy_swap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.clock_cycle" name="kernel.common.misra.clock_cycle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.clock_uptime" name="kernel.common.misra.clock_uptime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.dlist" name="kernel.common.misra.dlist" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.intmath" name="kernel.common.misra.intmath" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.irq_offload" name="kernel.common.misra.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.msg_receive===" name="kernel.common.misra.msg_receive===" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.multilib" name="kernel.common.misra.multilib" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.printk" name="kernel.common.misra.printk" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.slist" name="kernel.common.misra.slist" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_get_be16" name="kernel.common.misra.sys_get_be16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_get_be32" name="kernel.common.misra.sys_get_be32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_get_be64" name="kernel.common.misra.sys_get_be64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_get_le16" name="kernel.common.misra.sys_get_le16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_get_le32" name="kernel.common.misra.sys_get_le32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_get_le64" name="kernel.common.misra.sys_get_le64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_put_be16" name="kernel.common.misra.sys_put_be16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_put_be32" name="kernel.common.misra.sys_put_be32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_put_be64" name="kernel.common.misra.sys_put_be64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_put_le16" name="kernel.common.misra.sys_put_le16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_put_le32" name="kernel.common.misra.sys_put_le32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.sys_put_le64" name="kernel.common.misra.sys_put_le64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.thread_context" name="kernel.common.misra.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.timeout_order" name="kernel.common.misra.timeout_order" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.vector" name="kernel.common.misra.vector" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.verify_bootdelay" name="kernel.common.misra.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.misra.version" name="kernel.common.misra.version" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.multilib" name="kernel.common.multilib" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.obj_tracing" name="kernel.common.obj_tracing" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.printk" name="kernel.common.printk" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.priority_cooperative" name="kernel.common.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sam.critical" name="kernel.common.sam.critical" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.slist" name="kernel.common.slist" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection.fata0000000  s[2]:  0x00000000  s[3]:  0x00000000" name="kernel.common.stack_protection.fata0000000  s[2]:  0x00000000  s[3]:  0x00000000" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection.fatal" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.fatal" name="kernel.common.stack_protection_arm_fp_sharing.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_forever_timeout" name="kernel.common.stack_protection_arm_fp_sharing.pipe_forever_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_forever_wait" name="kernel.common.stack_protection_arm_fp_sharing.pipe_forever_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_get_invalid_size" name="kernel.common.stack_protection_arm_fp_sharing.pipe_get_invalid_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_get_on_empty_pipe" name="kernel.common.stack_protection_arm_fp_sharing.pipe_get_on_empty_pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_timeoung test - test_pipe_get_invalid_size" name="kernel.common.stack_protection_arm_fp_sharing.pipe_timeoung test - test_pipe_get_invalid_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.pipe_timeout" name="kernel.common.stack_protection_arm_fp_sharing.pipe_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_no_userspace.fatal" name="kernel.common.stack_protection_no_userspace.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_get_be16" name="kernel.common.sys_get_be16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_get_be32" name="kernel.common.sys_get_be32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_get_be64" name="kernel.common.sys_get_be64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_get_le16" name="kernel.common.sys_get_le16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_get_le32" name="kernel.common.sys_get_le32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_get_le64" name="kernel.common.sys_get_le64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_put_be16" name="kernel.common.sys_put_be16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_put_be32" name="kernel.common.sys_put_be32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_put_be64" name="kernel.common.sys_put_be64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_put_le16" name="kernel.common.sys_put_le16" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_put_le32" name="kernel.common.sys_put_le32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.sys_put_le64" name="kernel.common.sys_put_le64" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.te========" name="kernel.common.te========" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.thread_context" name="kernel.common.thread_context" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timeout_order" name="kernel.common.timeout_order" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.assert_mem_equal" name="kernel.common.timing.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.assert_tests" name="kernel.common.timing.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.fatal" name="kernel.common.timing.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.pending" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.sleep" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.usleep" name="kernel.common.timing.usleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.verify_bootdelay" name="kernel.common.verify_bootdelay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.version" name="kernel.common.version" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.arm.k_float_disable_common" name="kernel.fp_sharing.float_disable.arm.k_float_disable_common" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fp_sharing.float_disable.x86.k_float_disable_common" name="kernel.fp_sharing.float_disable.x86.k_float_disable_common" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.unit.multi_value_tests" name="testing.ztest.unit.multi_value_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.unit.parameter_tests" name="testing.ztest.unit.parameter_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.unit.return_value_tests" name="testing.ztest.unit.return_value_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.assert_mem_equal" name="testing.ztest.verbose_0.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.assert_tests" name="testing.ztest.verbose_0.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_0.empty_test" name="testing.ztest.verbose_0.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.assert_mem_equal" name="testing.ztest.verbose_1.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.assert_tests" name="testing.ztest.verbose_1.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.empty_test" name="testing.ztest.verbose_1.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_msg_dropped_notification" name="testing.ztest.verbose_1.log_msg_dropped_notification" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_1.log_panic" name="testing.ztest.verbose_1.log_panic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.assert_mem_equal" name="testing.ztest.verbose_2.assert_mem_equal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.assert_tests" name="testing.ztest.verbose_2.assert_tests" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.verbose_2.empty_test" name="testing.ztest.verbose_2.empty_test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.fatal" name="crypto.rand32.random_sw_systimer.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.rand32" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer.te" name="crypto.rand32.random_sw_systimer.te" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.kernel_timer_interrupts" name="kernel.common.kernel_timer_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.multiq.wakeup_expired_timer_thread" name="kernel.sched.multiq.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.multiq_no_timeslicing.wakeup_expired_timer_thread" name="kernel.sched.multiq_no_timeslicing.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.native_posix.wakeup_expired_timer_thread" name="kernel.sched.native_posix.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.wakeup_expired_timer_thread" name="kernel.sched.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched_no_timeslicing.wakeup_expired_timer_thread" name="kernel.sched_no_timeslicing.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.wakeup_expired_timer_thread" name="kernel.tickless.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.check=========================================================" name="kernel.timer.check=========================================================" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.check_promisc_mode_4_addr_add" name="kernel.timer.check_promisc_mode_4_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.check_promisc_mode_off" name="kernel.timer.check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.check_promisc_mode_on" name="kernel.timer.check_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.gw_addr_add" name="kernel.timer.gw_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.select_src_iface" name="kernel.timer.select_src_iface" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.send_iface1_up" name="kernel.timer.send_iface1_up" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.set_promisc_mode_on" name="kernel.timer.set_promisc_mode_on" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer" name="kernel.timer.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_duration_period" name="kernel.timer.timer_duration_period" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_expirefn_null" name="kernel.timer.timer_expirefn_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_k_define" name="kernel.timer.timer_k_define" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_period_0" name="kernel.timer.timer_period_0" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_periodicity" name="kernel.timer.timer_periodicity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_remaining_get" name="kernel.timer.timer_remaining_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_status_get" name="kernel.timer.timer_status_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_status_get_anytime" name="kernel.timer.timer_status_get_anytime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_status_sync" name="kernel.timer.timer_status_sync" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_user_data" name="kernel.timer.timer_user_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v4_addr_add" name="kernel.timer.v4_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v4_addr_add_usASS - check_promisc_mode_off" name="kernel.timer.v4_addr_add_usASS - check_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v4_addr_add_user" name="kernel.timer.v4_addr_add_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v4_addr_lookup" name="kernel.timer.v4_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v4_addr_rm" name="kernel.timer.v4_addr_rm" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6_addr_add" name="kernel.timer.v6_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6_addr_add_user" name="kernel.timer.v6_addr_add_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6_addr_lookup" name="kernel.timer.v6_addr_lookup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6_addr_lookup_ - v6_addr_add" name="kernel.timer.v6_addr_lookup_ - v6_addr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6_addr_lookup_user" name="kernel.timer.v6_addr_lookup_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6_addr_rm" name="kernel.timer.v6_addr_rm" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.v6ddr_add" name="kernel.timer.v6ddr_add" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:peripheral.counter.aon_periodic_timer" name="peripheral.counter.aon_periodic_timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.cmsis_rtos_v1.timer" name="portability.cmsis_rtos_v1.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.cmsis_rtos_v2.timer" name="portability.cmsis_rtos_v2.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.newlib.posix_timer" name="portability.posix.newlib.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.posix_timer" name="portability.posix.posix_timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.timer" name="portability.posix.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:portability.posix.timer_support" name="portability.posix.timer_support" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:testing.ztest.customized_output.timer" name="testing.ztest.customized_output.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.addr_parse" name="net.util.addr_parse" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.net_addr" name="net.util.net_addr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.net_pkt_addr_parse" name="net.util.net_pkt_addr_parse" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.set_promisc_mode_off" name="net.util.set_promisc_mode_off" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.set_promisc_mode_off_again" name="net.util.set_promisc_mode_off_again" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.utils" name="net.util.utils" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:net.util.verify_data" name="net.util.verify_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:usb.device.image_util.collecting" name="use.device.image_util.collecting" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.common.xip.globals" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:arch.common.xip.nondefault.globals" name="arch.common.xip.nondefault.globals" time="0">
      </testcase>
  </testsuite>
</testsuites>
