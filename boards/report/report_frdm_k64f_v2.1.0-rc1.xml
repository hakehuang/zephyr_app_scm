<?xml version="1.0"?>
<testsuites>
    <testsuite tests="368" errors="0" failures="3" name="" skipped="2" time="0">
      <testcase classname="frdm_k64f:benchmark.latency" name="benchmark.latency" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:benchmark.latency.rand32" name="benchmark.latency.rand32" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.no_optimizations" name="arch.interrupt.no_optimizations" time="0">
          <failure message="failed" type="failure">
          </failure>
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.no_optimizations.arm_interrupt" name="arch.interrupt.no_optimizations.arm_interrupt" time="0">
          <failure message="failed" type="failure">
          </failure>
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.no_optimizations.fatal" name="arch.interrupt.no_optimizations.fatal" time="0">
          <failure message="failed" type="failure">
          </failure>
      </testcase>
      <testcase classname="frdm_k64f:arch.common.xip" name="arch.common.xip" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.common.xip.globals" name="arch.common.xip.globals" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.common.xip.nondefault.globals" name="arch.common.xip.nondefault.globals" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.mqtt.packet" name="net.mqtt.packet" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.mqtt.packet.mqtt_packet" name="net.mqtt.packet.mqtt_packet" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.stack_random" name="kernel.memory_protection.stack_random" time="0">
      </testcase>
      <testcase classname="frdm_k64f:kernel.memory_protection.stack_random.stack_pt_randomization" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_output" name="logging.log_output" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_output.log_output_raw_string" name="logging.log_output.log_output_raw_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_output.log_output_string" name="logging.log_output.log_output_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_msg" name="logging.log_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_msg.log_hexdump_data_get_multiple_chunks" name="logging.log_msg.log_hexdump_data_get_multiple_chunks" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_msg.log_hexdump_data_get_single_chunk" name="logging.log_msg.log_hexdump_data_get_single_chunk" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_msg.log_hexdump_data_get_two_chunks" name="logging.log_msg.log_hexdump_data_get_two_chunks" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_msg.log_hexdump_msg" name="logging.log_msg.log_hexdump_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_msg.log_std_msg" name="logging.log_msg.log_std_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_list" name="logging.log_list" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_list.log_list" name="logging.log_list.log_list" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_list.log_list_multiple_items" name="logging.log_list.log_list_multiple_items" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core" name="logging.log_core" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_arguments" name="logging.log_core.log_arguments" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_backend_runtime_filtering" name="logging.log_core.log_backend_runtime_filtering" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_from_declared_module" name="logging.log_core.log_from_declared_module" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_msg_dropped_notification" name="logging.log_core.log_msg_dropped_notification" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_overflow" name="logging.log_core.log_overflow" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_panic" name="logging.log_core.log_panic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_strdup_detect_miss" name="logging.log_core.log_strdup_detect_miss" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.log_strdup_gc" name="logging.log_core.log_strdup_gc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:logging.log_core.strdup_trimming" name="logging.log_core.strdup_trimming" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf" name="libraries.libc.sprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_double" name="libraries.libc.sprintf.sprintf_double" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_integer" name="libraries.libc.sprintf.sprintf_integer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_misc" name="libraries.libc.sprintf.sprintf_misc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_string" name="libraries.libc.sprintf.sprintf_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.vsnprintf" name="libraries.libc.sprintf.vsnprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.vsprintf" name="libraries.libc.sprintf.vsprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_double" name="libraries.libc.sprintf_double" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_integer" name="libraries.libc.sprintf_integer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_misc" name="libraries.libc.sprintf_misc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_string" name="libraries.libc.sprintf_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.jwt" name="libraries.encoding.jwt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.jwt.jwt" name="libraries.encoding.jwt.jwt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json" name="libraries.encoding.json" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_decoding" name="libraries.encoding.json.json_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_decoding_array_array" name="libraries.encoding.json.json_decoding_array_array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_encoding" name="libraries.encoding.json.json_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_escape" name="libraries.encoding.json.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_escape_bounds_check" name="libraries.encoding.json.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_escape_empty" name="libraries.encoding.json.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_escape_no_op" name="libraries.encoding.json.json_escape_no_op" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_escape_one" name="libraries.encoding.json.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_invalid_bool" name="libraries.encoding.json.json_invalid_bool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_invalid_null" name="libraries.encoding.json.json_invalid_null" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_invalid_number" name="libraries.encoding.json.json_invalid_number" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_invalid_string" name="libraries.encoding.json.json_invalid_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_item_wrong_type" name="libraries.encoding.json.json_item_wrong_type" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_key_not_in_descr" name="libraries.encoding.json.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_missing_quote" name="libraries.encoding.json.json_missing_quote" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_obj_arr_decoding" name="libraries.encoding.json.json_obj_arr_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_obj_arr_encoding" name="libraries.encoding.json.json_obj_arr_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json.json_wrong_token" name="libraries.encoding.json.json_wrong_token" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_decoding" name="libraries.encoding.json_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_decoding_array_array" name="libraries.encoding.json_decoding_array_array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_encoding" name="libraries.encoding.json_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_escape" name="libraries.encoding.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_escape_bounds_check" name="libraries.encoding.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_escape_empty" name="libraries.encoding.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_escape_no_op" name="libraries.encoding.json_escape_no_op" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_escape_one" name="libraries.encoding.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_invalid_unicode" name="libraries.encoding.json_invalid_unicode" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_item_wrong_type" name="libraries.encoding.json_item_wrong_type" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_key_not_in_descr" name="libraries.encoding.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_missing_quote" name="libraries.encoding.json_missing_quote" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_obj_arr_decoding" name="libraries.encoding.json_obj_arr_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_obj_arr_encoding" name="libraries.encoding.json_obj_arr_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.encoding.json_wrong_token" name="libraries.encoding.json_wrong_token" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.gen_isr_table" name="arch.interrupt.gen_isr_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.gen_isr_table.main" name="arch.interrupt.gen_isr_table.main" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt" name="arch.interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arc" name="arch.interrupt.arc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arc.main" name="arch.interrupt.arc.main" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.arm_interrupt" name="arch.interrupt.arm.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table" name="arch.interrupt.arm.irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table.arm_irq_vector_table" name="arch.interrupt.arm.irq_vector_table.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table.arm_thread_swap" name="arch.interrupt.arm.irq_vector_table.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.nmi" name="arch.interrupt.arm.nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.nmi.arm_runtime_nmi" name="arch.interrupt.arm.nmi.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.nmi.nmi_test_isr" name="arch.interrupt.arm.nmi.nmi_test_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_interrupt" name="arch.interrupt.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_thread_swap" name="arch.interrupt.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.gen_isr_table" name="arch.interrupt.gen_isr_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.gen_isr_table.main" name="arch.interrupt.gen_isr_table.main" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.idt_stub" name="arch.interrupt.idt_stub" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.irq_offload" name="arch.interrupt.irq_offload" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.isr_dynamic" name="arch.interrupt.isr_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_async_multiple_put" name="arch.interrupt.mbox_async_multiple_put" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_async_put_get_block" name="arch.interrupt.mbox_async_put_get_block" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_async_put_to_waiting_get" name="arch.interrupt.mbox_async_put_to_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_block_get_buff_to_pool" name="arch.interrupt.mbox_block_get_buff_to_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_block_get_buff_to_smaller_pool" name="arch.interrupt.mbox_block_get_buff_to_smaller_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_block_get_invalid_pool" name="arch.interrupt.mbox_block_get_invalid_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_clean_up_tx_pool" name="arch.interrupt.mbox_clean_up_tx_pool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_dispose_size_0_msg" name="arch.interrupt.mbox_dispose_size_0_msg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_get_waiting_put_incorrect_tid" name="arch.interrupt.mbox_get_waiting_put_incorrect_tid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_incorrect_receiver_tid" name="arch.interrupt.mbox_incorrect_receiver_tid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_incorrect_transmit_tid" name="arch.interrupt.mbox_incorrect_transmit_tid" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_msg_tid_mismatch" name="arch.interrupt.mbox_msg_tid_mismatch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_multiple_waiting_get" name="arch.interrupt.mbox_multiple_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_target_source_thread_block" name="arch.interrupt.mbox_target_source_thread_block" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_target_source_thread_buffer" name="arch.interrupt.mbox_target_source_thread_buffer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.mbox_timed_out_mbox_get" name="arch.interrupt.mbox_timed_out_mbox_get" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.nested_isr" name="arch.interrupt.nested_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.no_optimizations" name="arch.interrupt.no_optimizations" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.no_optimizations.arm_interrupt" name="arch.interrupt.no_optimizations.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.no_optimizations.fatal" name="arch.interrupt.no_optimizations.fatal" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.nodyn" name="arch.interrupt.nodyn" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.nodyn.nested_isr" name="arch.interrupt.nodyn.nested_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.nodyn.prevent_interruption" name="arch.interrupt.nodyn.prevent_interruption" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.prevent_interruption" name="arch.interrupt.prevent_interruption" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.static_idt" name="arch.interrupt.static_idt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.x86.idt_stub" name="arch.interrupt.x86.idt_stub" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.x86.static_idt" name="arch.interrupt.x86.static_idt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.http" name="net.http" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.http.header_nread_value" name="net.http.header_nread_value" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.http.http_header_fields" name="net.http.http_header_fields" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.http.method_str" name="net.http.method_str" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.http.parse_url" name="net.http.parse_url" time="0">
      </testcase>
      <testcase classname="frdm_k64f:net.http.preserve_data" name="net.http.preserve_data" time="0">
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file" name="buildsystem.include_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_gz_inc_file" name="buildsystem.include_file.gen_gz_inc_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_gz_inc_file_mtime_arg" name="buildsystem.include_file.gen_gz_inc_file_mtime_arg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_gz_inc_file_no_mtime" name="buildsystem.include_file.gen_gz_inc_file_no_mtime" time="0">
      </testcase>
      <testcase classname="frdm_k64f:buildsystem.include_file.gen_inc_file" name="buildsystem.include_file.gen_inc_file" time="0">
      </testcase>
      <testcase classname="frdm_k64f:storage.flash_map_mpu.flash_area_get_sectors" name="storage.flash_map_mpu.flash_area_get_sectors" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable" name="libraries.os.fdtable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable.z_alloc_fd" name="libraries.os.fdtable.z_alloc_fd" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable.z_finalize_fd" name="libraries.os.fdtable.z_finalize_fd" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable.z_free_fd" name="libraries.os.fdtable.z_free_fd" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable.z_get_fd_obj" name="libraries.os.fdtable.z_get_fd_obj" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable.z_get_fd_obj_and_vtable" name="libraries.os.fdtable.z_get_fd_obj_and_vtable" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.os.fdtable.z_reserve_fd" name="libraries.os.fdtable.z_reserve_fd" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32" name="crypto.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.rand32" name="crypto.rand32.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_ctr_drbg" name="crypto.rand32.random_ctr_drbg" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_ctr_drbg.rand32" name="crypto.rand32.random_ctr_drbg.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro" name="crypto.rand32.random_hw_xoroshiro" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro.arm_zero_latency_irqs" name="crypto.rand32.random_hw_xoroshiro.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_hw_xoroshiro.rand32" name="crypto.rand32.random_hw_xoroshiro.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_sw_systimer.early_sleep" name="crypto.rand32.random_sw_systimer.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_sw_systimer.rand32" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_sw_systimer.early_sleep" name="crypto.rand32.random_sw_systimer.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.rand32.random_sw_systimer.rand32" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.mbedtls" name="crypto.mbedtls" time="0">
      </testcase>
      <testcase classname="frdm_k64f:crypto.mbedtls.mbedtls" name="crypto.mbedtls.mbedtls" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx" name="misc.app_dev.libcxx" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.array" name="misc.app_dev.libcxx.array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions" name="misc.app_dev.libcxx.exceptions" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions.array" name="misc.app_dev.libcxx.exceptions.array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions.make_unique" name="misc.app_dev.libcxx.exceptions.make_unique" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions.vector" name="misc.app_dev.libcxx.exceptions.vector" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.make_unique" name="misc.app_dev.libcxx.make_unique" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.vector" name="misc.app_dev.libcxx.vector" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.zephyr_cpp" name="misc.app_dev.libcxx.zephyr_cpp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.zephyr_cpp.array" name="misc.app_dev.libcxx.zephyr_cpp.array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.zephyr_cpp.make_unique" name="misc.app_dev.libcxx.zephyr_cpp.make_unique" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.zephyr_cpp.vector" name="misc.app_dev.libcxx.zephyr_cpp.vector" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions" name="misc.app_dev.libcxx.exceptions" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions.array" name="misc.app_dev.libcxx.exceptions.array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions.make_unique" name="misc.app_dev.libcxx.exceptions.make_unique" time="0">
      </testcase>
      <testcase classname="frdm_k64f:misc.app_dev.libcxx.exceptions.vector" name="misc.app_dev.libcxx.exceptions.vector" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2" name="portability.cmsis_rtos_v2" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.delay" name="portability.cmsis_rtos_v2.delay" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.event_flags_isr" name="portability.cmsis_rtos_v2.event_flags_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.event_flags_no_wait_timeout" name="portability.cmsis_rtos_v2.event_flags_no_wait_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.event_flags_signalled" name="portability.cmsis_rtos_v2.event_flags_signalled" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.kernel_apis" name="portability.cmsis_rtos_v2.kernel_apis" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.mempool" name="portability.cmsis_rtos_v2.mempool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.mempool_dynamic" name="portability.cmsis_rtos_v2.mempool_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.messageq" name="portability.cmsis_rtos_v2.messageq" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.mutex" name="portability.cmsis_rtos_v2.mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.mutex_lock_timeout" name="portability.cmsis_rtos_v2.mutex_lock_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.semaphore" name="portability.cmsis_rtos_v2.semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_apis" name="portability.cmsis_rtos_v2.thread_apis" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_apis_dynamic" name="portability.cmsis_rtos_v2.thread_apis_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_detached" name="portability.cmsis_rtos_v2.thread_detached" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_flags_isr" name="portability.cmsis_rtos_v2.thread_flags_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_flags_no_wait_timeout" name="portability.cmsis_rtos_v2.thread_flags_no_wait_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_flags_signalled" name="portability.cmsis_rtos_v2.thread_flags_signalled" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_join" name="portability.cmsis_rtos_v2.thread_join" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_joinable_detach" name="portability.cmsis_rtos_v2.thread_joinable_detach" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_joinable_terminate" name="portability.cmsis_rtos_v2.thread_joinable_terminate" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_prio" name="portability.cmsis_rtos_v2.thread_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.thread_prio_dynamic" name="portability.cmsis_rtos_v2.thread_prio_dynamic" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v2.timer" name="portability.cmsis_rtos_v2.timer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1" name="portability.cmsis_rtos_v1" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.kernel_start" name="portability.cmsis_rtos_v1.kernel_start" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.kernel_systick" name="portability.cmsis_rtos_v1.kernel_systick" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.mailq" name="portability.cmsis_rtos_v1.mailq" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.mempool" name="portability.cmsis_rtos_v1.mempool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.messageq" name="portability.cmsis_rtos_v1.messageq" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.mutex" name="portability.cmsis_rtos_v1.mutex" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.mutex_lock_timeout" name="portability.cmsis_rtos_v1.mutex_lock_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.semaphore" name="portability.cmsis_rtos_v1.semaphore" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.signal_events_isr" name="portability.cmsis_rtos_v1.signal_events_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.signal_events_no_wait" name="portability.cmsis_rtos_v1.signal_events_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.signal_events_signalled" name="portability.cmsis_rtos_v1.signal_events_signalled" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.signal_events_timeout" name="portability.cmsis_rtos_v1.signal_events_timeout" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.thread_apis" name="portability.cmsis_rtos_v1.thread_apis" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.thread_instances" name="portability.cmsis_rtos_v1.thread_instances" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.thread_prio" name="portability.cmsis_rtos_v1.thread_prio" time="0">
      </testcase>
      <testcase classname="frdm_k64f:portability.cmsis_rtos_v1.timer" name="portability.cmsis_rtos_v1.timer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc" name="libraries.libc.minimal.mem_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.calloc" name="libraries.libc.minimal.mem_alloc.calloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.free" name="libraries.libc.minimal.mem_alloc.free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.malloc" name="libraries.libc.minimal.mem_alloc.malloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.memalloc_all" name="libraries.libc.minimal.mem_alloc.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.memalloc_max" name="libraries.libc.minimal.mem_alloc.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.realloc" name="libraries.libc.minimal.mem_alloc.realloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.reallocarray" name="libraries.libc.minimal.mem_alloc.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc" name="libraries.libc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.bsearch" name="libraries.libc.bsearch" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.limits" name="libraries.libc.limits" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.memcmp" name="libraries.libc.memcmp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.memset" name="libraries.libc.memset" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.calloc" name="libraries.libc.minimal.calloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.free" name="libraries.libc.minimal.free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.malloc" name="libraries.libc.minimal.malloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc" name="libraries.libc.minimal.mem_alloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.calloc" name="libraries.libc.minimal.mem_alloc.calloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.free" name="libraries.libc.minimal.mem_alloc.free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.malloc" name="libraries.libc.minimal.mem_alloc.malloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.memalloc_all" name="libraries.libc.minimal.mem_alloc.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.memalloc_max" name="libraries.libc.minimal.mem_alloc.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.realloc" name="libraries.libc.minimal.mem_alloc.realloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.mem_alloc.reallocarray" name="libraries.libc.minimal.mem_alloc.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.memalloc_all" name="libraries.libc.minimal.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.memalloc_max" name="libraries.libc.minimal.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.realloc" name="libraries.libc.minimal.realloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.minimal.reallocarray" name="libraries.libc.minimal.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib" name="libraries.libc.newlib" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.calloc" name="libraries.libc.newlib.calloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.free" name="libraries.libc.newlib.free" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.malloc" name="libraries.libc.newlib.malloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.memalloc_all" name="libraries.libc.newlib.memalloc_all" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.memalloc_max" name="libraries.libc.newlib.memalloc_max" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.realloc" name="libraries.libc.newlib.realloc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.newlib.reallocarray" name="libraries.libc.newlib.reallocarray" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf" name="libraries.libc.sprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_double" name="libraries.libc.sprintf.sprintf_double" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_integer" name="libraries.libc.sprintf.sprintf_integer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_misc" name="libraries.libc.sprintf.sprintf_misc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.sprintf_string" name="libraries.libc.sprintf.sprintf_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.vsnprintf" name="libraries.libc.sprintf.vsnprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf.vsprintf" name="libraries.libc.sprintf.vsprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_double" name="libraries.libc.sprintf_double" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_integer" name="libraries.libc.sprintf_integer" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_misc" name="libraries.libc.sprintf_misc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.sprintf_string" name="libraries.libc.sprintf_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.ssize_t" name="libraries.libc.ssize_t" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.stdbool" name="libraries.libc.stdbool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.stddef" name="libraries.libc.stddef" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.stdint" name="libraries.libc.stdint" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.strchr" name="libraries.libc.strchr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.strcmp" name="libraries.libc.strcmp" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.strcpy" name="libraries.libc.strcpy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.strlen" name="libraries.libc.strlen" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.strncpy" name="libraries.libc.strncpy" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.strxspn" name="libraries.libc.strxspn" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.vsnprintf" name="libraries.libc.vsnprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:libraries.libc.vsprintf" name="libraries.libc.vsprintf" time="0">
      </testcase>
      <testcase classname="frdm_k64f:benchmark.timing.userspace" name="benchmark.timing.userspace" time="0">
      </testcase>
      <testcase classname="frdm_k64f:benchmark.kernel" name="benchmark.kernel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:benchmark.timing.default_kernel" name="benchmark.timing.default_kernel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.ramfunc" name="arch.ramfunc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.ramfunc.arm_ramfunc" name="arch.ramfunc.arm_ramfunc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table" name="arch.interrupt.arm.irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table.arm_irq_vector_table" name="arch.interrupt.arm.irq_vector_table.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table.arm_thread_swap" name="arch.interrupt.arm.irq_vector_table.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.arm_interrupt" name="arch.interrupt.arm.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table" name="arch.interrupt.arm.irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table.arm_irq_vector_table" name="arch.interrupt.arm.irq_vector_table.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.irq_vector_table.arm_thread_swap" name="arch.interrupt.arm.irq_vector_table.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.nmi" name="arch.interrupt.arm.nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.nmi.arm_runtime_nmi" name="arch.interrupt.arm.nmi.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm.nmi.nmi_test_isr" name="arch.interrupt.arm.nmi.nmi_test_isr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_interrupt" name="arch.interrupt.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_irq_vector_table" name="arch.interrupt.arm_irq_vector_table" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_runtime_nmi" name="arch.interrupt.arm_runtime_nmi" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.interrupt.arm_thread_swap" name="arch.interrupt.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.zero_latency_interrupts" name="arch.zero_latency_interrupts" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.zero_latency_interrupts.arm_interrupt" name="arch.zero_latency_interrupts.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.zero_latency_interrupts.arm_zero_latency_irqs" name="arch.zero_latency_interrupts.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common" name="arch.arm.swap.common" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.arm_thread_swap" name="arch.arm.swap.common.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing" name="arch.arm.swap.common.fp_sharing" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_decoding" name="arch.arm.swap.common.fp_sharing.json_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_decoding_array_array" name="arch.arm.swap.common.fp_sharing.json_decoding_array_array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_encoding" name="arch.arm.swap.common.fp_sharing.json_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape" name="arch.arm.swap.common.fp_sharing.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_bounds_check" name="arch.arm.swap.common.fp_sharing.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_empty" name="arch.arm.swap.common.fp_sharing.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_no_op" name="arch.arm.swap.common.fp_sharing.json_escape_no_op" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_one" name="arch.arm.swap.common.fp_sharing.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_bool" name="arch.arm.swap.common.fp_sharing.json_invalid_bool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_null" name="arch.arm.swap.common.fp_sharing.json_invalid_null" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_number" name="arch.arm.swap.common.fp_sharing.json_invalid_number" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_string" name="arch.arm.swap.common.fp_sharing.json_invalid_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_item_wrong_type" name="arch.arm.swap.common.fp_sharing.json_item_wrong_type" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_key_not_in_descr" name="arch.arm.swap.common.fp_sharing.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_missing_quote" name="arch.arm.swap.common.fp_sharing.json_missing_quote" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_obj_arr_decoding" name="arch.arm.swap.common.fp_sharing.json_obj_arr_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_obj_arr_encoding" name="arch.arm.swap.common.fp_sharing.json_obj_arr_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_wrong_token" name="arch.arm.swap.common.fp_sharing.json_wrong_token" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations" name="arch.arm.swap.common.fp_sharing.no_optimizations" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations.arm_zero_latency_irqs" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.no_optimizations" name="arch.arm.swap.common.no_optimizations" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.no_optimizations" name="arch.arm.swap.common.no_optimizations" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing" name="arch.arm.swap.common.fp_sharing" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_decoding" name="arch.arm.swap.common.fp_sharing.json_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_decoding_array_array" name="arch.arm.swap.common.fp_sharing.json_decoding_array_array" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_encoding" name="arch.arm.swap.common.fp_sharing.json_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape" name="arch.arm.swap.common.fp_sharing.json_escape" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_bounds_check" name="arch.arm.swap.common.fp_sharing.json_escape_bounds_check" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_empty" name="arch.arm.swap.common.fp_sharing.json_escape_empty" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_no_op" name="arch.arm.swap.common.fp_sharing.json_escape_no_op" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_escape_one" name="arch.arm.swap.common.fp_sharing.json_escape_one" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_bool" name="arch.arm.swap.common.fp_sharing.json_invalid_bool" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_null" name="arch.arm.swap.common.fp_sharing.json_invalid_null" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_number" name="arch.arm.swap.common.fp_sharing.json_invalid_number" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_invalid_string" name="arch.arm.swap.common.fp_sharing.json_invalid_string" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_item_wrong_type" name="arch.arm.swap.common.fp_sharing.json_item_wrong_type" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_key_not_in_descr" name="arch.arm.swap.common.fp_sharing.json_key_not_in_descr" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_missing_quote" name="arch.arm.swap.common.fp_sharing.json_missing_quote" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_obj_arr_decoding" name="arch.arm.swap.common.fp_sharing.json_obj_arr_decoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_obj_arr_encoding" name="arch.arm.swap.common.fp_sharing.json_obj_arr_encoding" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.json_wrong_token" name="arch.arm.swap.common.fp_sharing.json_wrong_token" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations" name="arch.arm.swap.common.fp_sharing.no_optimizations" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations.arm_zero_latency_irqs" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations" name="arch.arm.swap.common.fp_sharing.no_optimizations" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_thread_swap" time="0">
      </testcase>
      <testcase classname="frdm_k64f:arch.arm.swap.common.fp_sharing.no_optimizations.arm_zero_latency_irqs" name="arch.arm.swap.common.fp_sharing.no_optimizations.arm_zero_latency_irqs" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc" name="peripheral.adc.adc" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_asynchronous_call" name="peripheral.adc.adc_asynchronous_call" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_invalid_request" name="peripheral.adc.adc_invalid_request" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_repeated_samplings" name="peripheral.adc.adc_repeated_samplings" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_sample" name="peripheral.adc.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_sample_one_channel" name="peripheral.adc.adc_sample_one_channel" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_sample_two_channels" name="peripheral.adc.adc_sample_two_channels" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.adc_sample_with_interval" name="peripheral.adc.adc_sample_with_interval" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.poll_mode.adc_sample" name="peripheral.adc.poll_mode.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.resolution_10.adc_sample" name="peripheral.adc.resolution_10.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.resolution_12.adc_sample" name="peripheral.adc.resolution_12.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.resolution_6.adc_sample" name="peripheral.adc.resolution_6.adc_sample" time="0">
      </testcase>
      <testcase classname="frdm_k64f:peripheral.adc.resolution_8.adc_sample" name="peripheral.adc.resolution_8.adc_sample" time="0">
      </testcase>
  </testsuite>
</testsuites>
