<?xml version="1.0"?>
<testsuites>
    <testsuite tests="861" errors="0" failures="2" name="" skipped="10" time="0">
      <testcase classname="frdm_kl25z:kernel.common.stack_sentinel" name="kernel.common.stack_sentinel" time="0">
          <failure message="failed" type="failure">
          </failure>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
          <failure message="failed" type="failure">
          </failure>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api" name="kernel.pipe.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.half_pipe_block_put_sema" name="kernel.pipe.api.half_pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.half_pipe_get_put" name="kernel.pipe.api.half_pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_alloc" name="kernel.pipe.api.pipe_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_block_put" name="kernel.pipe.api.pipe_block_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_block_put_sema" name="kernel.pipe.api.pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_block_writer_wait" name="kernel.pipe.api.pipe_block_writer_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_get_fail" name="kernel.pipe.api.pipe_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_get_put" name="kernel.pipe.api.pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_put_fail" name="kernel.pipe.api.pipe_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_reader_wait" name="kernel.pipe.api.pipe_reader_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_thread2thread" name="kernel.pipe.api.pipe_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_user_get_fail" name="kernel.pipe.api.pipe_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_user_put_fail" name="kernel.pipe.api.pipe_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_user_thread2thread" name="kernel.pipe.api.pipe_user_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.resource_pool_auto_free" name="kernel.pipe.api.resource_pool_auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.half_pipe_block_put_sema" name="kernel.pipe.half_pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.half_pipe_get_put" name="kernel.pipe.half_pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_alloc" name="kernel.pipe.pipe_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_block_put" name="kernel.pipe.pipe_block_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_block_put_sema" name="kernel.pipe.pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_block_writer_wait" name="kernel.pipe.pipe_block_writer_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_forever_timeout" name="kernel.pipe.pipe_forever_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_forever_wait" name="kernel.pipe.pipe_forever_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_fail" name="kernel.pipe.pipe_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_invalid_size" name="kernel.pipe.pipe_get_invalid_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_on_empty_pipe" name="kernel.pipe.pipe_get_on_empty_pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_put" name="kernel.pipe.pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_timeout" name="kernel.pipe.pipe_get_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_on_multiple_elements" name="kernel.pipe.pipe_on_multiple_elements" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_on_single_elements" name="kernel.pipe.pipe_on_single_elements" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_put_fail" name="kernel.pipe.pipe_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_reader_wait" name="kernel.pipe.pipe_reader_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_thread2thread" name="kernel.pipe.pipe_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_timeout" name="kernel.pipe.pipe_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_user_get_fail" name="kernel.pipe.pipe_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_user_put_fail" name="kernel.pipe.pipe_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_user_thread2thread" name="kernel.pipe.pipe_user_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.resource_pool_auto_free" name="kernel.pipe.resource_pool_auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_alloc" name="kernel.message_queue.msgq_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_attrs_get" name="kernel.message_queue.msgq_attrs_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_get_fail" name="kernel.message_queue.msgq_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_isr" name="kernel.message_queue.msgq_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_pend_thread" name="kernel.message_queue.msgq_pend_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_purge_when_put" name="kernel.message_queue.msgq_purge_when_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_put_fail" name="kernel.message_queue.msgq_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_thread" name="kernel.message_queue.msgq_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_thread_overflow" name="kernel.message_queue.msgq_thread_overflow" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_user_attrs_get" name="kernel.message_queue.msgq_user_attrs_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_user_get_fail" name="kernel.message_queue.msgq_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_user_purge_when_put" name="kernel.message_queue.msgq_user_purge_when_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_user_put_fail" name="kernel.message_queue.msgq_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_user_thread" name="kernel.message_queue.msgq_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.message_queue.msgq_user_thread_overflow" name="kernel.message_queue.msgq_user_thread_overflow" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex.mutex" name="kernel.mutex.mutex" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex.mutex_lock_unlock" name="kernel.mutex.mutex_lock_unlock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex.mutex_reent_lock_forever" name="kernel.mutex.mutex_reent_lock_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex.mutex_reent_lock_no_wait" name="kernel.mutex.mutex_reent_lock_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex.mutex_reent_lock_timeout_fail" name="kernel.mutex.mutex_reent_lock_timeout_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mutex.mutex_reent_lock_timeout_pass" name="kernel.mutex.mutex_reent_lock_timeout_pass" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api" name="kernel.pipe.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.half_pipe_block_put_sema" name="kernel.pipe.api.half_pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.half_pipe_get_put" name="kernel.pipe.api.half_pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_alloc" name="kernel.pipe.api.pipe_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_block_put" name="kernel.pipe.api.pipe_block_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_block_put_sema" name="kernel.pipe.api.pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_block_writer_wait" name="kernel.pipe.api.pipe_block_writer_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_get_fail" name="kernel.pipe.api.pipe_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_get_put" name="kernel.pipe.api.pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_put_fail" name="kernel.pipe.api.pipe_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_reader_wait" name="kernel.pipe.api.pipe_reader_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_thread2thread" name="kernel.pipe.api.pipe_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_user_get_fail" name="kernel.pipe.api.pipe_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_user_put_fail" name="kernel.pipe.api.pipe_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.pipe_user_thread2thread" name="kernel.pipe.api.pipe_user_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.api.resource_pool_auto_free" name="kernel.pipe.api.resource_pool_auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.half_pipe_block_put_sema" name="kernel.pipe.half_pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.half_pipe_get_put" name="kernel.pipe.half_pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_alloc" name="kernel.pipe.pipe_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_block_put" name="kernel.pipe.pipe_block_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_block_put_sema" name="kernel.pipe.pipe_block_put_sema" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_block_writer_wait" name="kernel.pipe.pipe_block_writer_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_forever_timeout" name="kernel.pipe.pipe_forever_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_forever_wait" name="kernel.pipe.pipe_forever_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_fail" name="kernel.pipe.pipe_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_invalid_size" name="kernel.pipe.pipe_get_invalid_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_on_empty_pipe" name="kernel.pipe.pipe_get_on_empty_pipe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_put" name="kernel.pipe.pipe_get_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_get_timeout" name="kernel.pipe.pipe_get_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_on_multiple_elements" name="kernel.pipe.pipe_on_multiple_elements" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_on_single_elements" name="kernel.pipe.pipe_on_single_elements" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_put_fail" name="kernel.pipe.pipe_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_reader_wait" name="kernel.pipe.pipe_reader_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_thread2thread" name="kernel.pipe.pipe_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_timeout" name="kernel.pipe.pipe_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_user_get_fail" name="kernel.pipe.pipe_user_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_user_put_fail" name="kernel.pipe.pipe_user_put_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.pipe_user_thread2thread" name="kernel.pipe.pipe_user_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pipe.resource_pool_auto_free" name="kernel.pipe.resource_pool_auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_cancel_main_high_prio" name="kernel.poll.poll_cancel_main_high_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_cancel_main_low_prio" name="kernel.poll.poll_cancel_main_low_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_multi" name="kernel.poll.poll_multi" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_no_wait" name="kernel.poll.poll_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_threadstate" name="kernel.poll.poll_threadstate" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.poll.poll_wait" name="kernel.poll.poll_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.auto_free" name="kernel.queue.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.auto_free" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc_append_user" name="kernel.queue.poll.queue_alloc_append_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc_prepend_user" name="kernel.queue.poll.queue_alloc_prepend_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_get_2threads" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_get_fail" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_isr2thread" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_loop" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_supv_to_user" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_thread2isr" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_thread2thread" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_alloc" name="kernel.queue.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_alloc_append_user" name="kernel.queue.queue_alloc_append_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_alloc_prepend_user" name="kernel.queue.queue_alloc_prepend_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_get_2threads" name="kernel.queue.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_get_fail" name="kernel.queue.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_isr2thread" name="kernel.queue.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_loop" name="kernel.queue.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_supv_to_user" name="kernel.queue.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_thread2isr" name="kernel.queue.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.queue_thread2thread" name="kernel.queue.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.auto_free" name="kernel.queue.poll.auto_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc" name="kernel.queue.poll.queue_alloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc_append_user" name="kernel.queue.poll.queue_alloc_append_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_alloc_prepend_user" name="kernel.queue.poll.queue_alloc_prepend_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_get_2threads" name="kernel.queue.poll.queue_get_2threads" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_get_fail" name="kernel.queue.poll.queue_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_isr2thread" name="kernel.queue.poll.queue_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_loop" name="kernel.queue.poll.queue_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_supv_to_user" name="kernel.queue.poll.queue_supv_to_user" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_thread2isr" name="kernel.queue.poll.queue_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.queue.poll.queue_thread2thread" name="kernel.queue.poll.queue_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection" name="kernel.common.stack_protection" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection.fatal" name="kernel.common.stack_protection.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing" name="kernel.common.stack_protection_arm_fp_sharing" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_arm_fp_sharing.fatal" name="kernel.common.stack_protection_arm_fp_sharing.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_no_userspace" name="kernel.common.stack_protection_no_userspace" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_no_userspace.arm_interrupt" name="kernel.common.stack_protection_no_userspace.arm_interrupt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_protection_no_userspace.fatal" name="kernel.common.stack_protection_no_userspace.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_sentinel" name="kernel.common.stack_sentinel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.stack_sentinel.fatal" name="kernel.common.stack_sentinel.fatal" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage" name="kernel.stack.usage" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.dual_stack_play" name="kernel.stack.usage.dual_stack_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.isr_stack_play" name="kernel.stack.usage.isr_stack_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.single_stack_play" name="kernel.stack.usage.single_stack_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.stack_alloc_thread2thread" name="kernel.stack.usage.stack_alloc_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.stack_pop_fail" name="kernel.stack.usage.stack_pop_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.stack_thread2isr" name="kernel.stack.usage.stack_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.stack_thread2thread" name="kernel.stack.usage.stack_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.stack_user_pop_fail" name="kernel.stack.usage.stack_user_pop_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.stack.usage.stack_user_thread2thread" name="kernel.stack.usage.stack_user_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.monotonic" name="kernel.timer.monotonic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.monotonic.timer" name="kernel.timer.monotonic.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.time_conversions" name="kernel.timer.time_conversions" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer" name="kernel.timer.timer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_duration_period" name="kernel.timer.timer_duration_period" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_expirefn_null" name="kernel.timer.timer_expirefn_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_k_define" name="kernel.timer.timer_k_define" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_period_0" name="kernel.timer.timer_period_0" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_periodicity" name="kernel.timer.timer_periodicity" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_remaining_get" name="kernel.timer.timer_remaining_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_status_get" name="kernel.timer.timer_status_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_status_get_anytime" name="kernel.timer.timer_status_get_anytime" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_status_sync" name="kernel.timer.timer_status_sync" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.timer_user_data" name="kernel.timer.timer_user_data" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.already_triggered" name="kernel.workqueue.already_triggered" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api" name="kernel.workqueue.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.api.delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.api.delayed_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_isr" name="kernel.workqueue.api.delayed_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_thread" name="kernel.workqueue.api.delayed_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_isr" name="kernel.workqueue.api.delayed_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_thread" name="kernel.workqueue.api.delayed_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_to_queue_isr" name="kernel.workqueue.api.delayed_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_to_queue_thread" name="kernel.workqueue.api.delayed_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_from_queue_isr" name="kernel.workqueue.api.triggered_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_from_queue_thread" name="kernel.workqueue.api.triggered_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_isr" name="kernel.workqueue.api.triggered_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_thread" name="kernel.workqueue.api.triggered_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_isr" name="kernel.workqueue.api.triggered_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_thread" name="kernel.workqueue.api.triggered_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_to_queue_isr" name="kernel.workqueue.api.triggered_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_to_queue_thread" name="kernel.workqueue.api.triggered_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_work_submit_to_queue_thread" name="kernel.workqueue.api.user_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_workq_granted_access" name="kernel.workqueue.api.user_workq_granted_access" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_workq_granted_access_setup" name="kernel.workqueue.api.user_workq_granted_access_setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_workq_start_before_submit" name="kernel.workqueue.api.user_workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_resubmit_to_queue" name="kernel.workqueue.api.work_resubmit_to_queue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_isr" name="kernel.workqueue.api.work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_thread" name="kernel.workqueue.api.work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_to_multipleq" name="kernel.workqueue.api.work_submit_to_multipleq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_to_queue_isr" name="kernel.workqueue.api.work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_to_queue_thread" name="kernel.workqueue.api.work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.workq_start_before_submit" name="kernel.workqueue.api.workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed" name="kernel.workqueue.delayed" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_cancel" name="kernel.workqueue.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_resubmit" name="kernel.workqueue.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_resubmit_thread" name="kernel.workqueue.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_isr" name="kernel.workqueue.delayed_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_thread" name="kernel.workqueue.delayed_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_isr" name="kernel.workqueue.delayed_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_thread" name="kernel.workqueue.delayed_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_to_queue_isr" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_to_queue_thread" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.resubmit" name="kernel.workqueue.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.sequence" name="kernel.workqueue.sequence" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered" name="kernel.workqueue.triggered" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_no_wait" name="kernel.workqueue.triggered_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_no_wait_expired" name="kernel.workqueue.triggered_no_wait_expired" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_resubmit" name="kernel.workqueue.triggered_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_wait" name="kernel.workqueue.triggered_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_wait_expired" name="kernel.workqueue.triggered_wait_expired" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_work_submit_to_queue_thread" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_workq_granted_access" name="kernel.workqueue.user_workq_granted_access" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_workq_granted_access_setup" name="kernel.workqueue.user_workq_granted_access_setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_workq_start_before_submit" name="kernel.workqueue.user_workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_resubmit_to_queue" name="kernel.workqueue.work_resubmit_to_queue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_isr" name="kernel.workqueue.work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_thread" name="kernel.workqueue.work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_to_multipleq" name="kernel.workqueue.work_submit_to_multipleq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_to_queue_isr" name="kernel.workqueue.work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_to_queue_thread" name="kernel.workqueue.work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.workq_start_before_submit" name="kernel.workqueue.workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.abort_handler" name="kernel.threads.abort_handler" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis" name="kernel.threads.apis" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.abort_handler" name="kernel.threads.apis.abort_handler" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.customdata_get_set_coop" name="kernel.threads.apis.customdata_get_set_coop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.customdata_get_set_preempt" name="kernel.threads.apis.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.delayed_thread_abort" name="kernel.threads.apis.delayed_thread_abort" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.essential_thread_operation" name="kernel.threads.apis.essential_thread_operation" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.k_thread_foreach" name="kernel.threads.apis.k_thread_foreach" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.systhreads_idle" name="kernel.threads.apis.systhreads_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.systhreads_main" name="kernel.threads.apis.systhreads_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.thread_name_get_set" name="kernel.threads.apis.thread_name_get_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.thread_name_user_get_set" name="kernel.threads.apis.thread_name_user_get_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.thread_start" name="kernel.threads.apis.thread_start" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_abort_others" name="kernel.threads.apis.threads_abort_others" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_abort_repeat" name="kernel.threads.apis.threads_abort_repeat" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_abort_self" name="kernel.threads.apis.threads_abort_self" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_cpu_mask" name="kernel.threads.apis.threads_cpu_mask" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_priority_set" name="kernel.threads.apis.threads_priority_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_delay" name="kernel.threads.apis.threads_spawn_delay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_forever" name="kernel.threads.apis.threads_spawn_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_params" name="kernel.threads.apis.threads_spawn_params" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_priority" name="kernel.threads.apis.threads_spawn_priority" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend" name="kernel.threads.apis.threads_suspend" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend_resume_cooperative" name="kernel.threads.apis.threads_suspend_resume_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend_resume_preemptible" name="kernel.threads.apis.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend_timeout" name="kernel.threads.apis.threads_suspend_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.user_mode" name="kernel.threads.apis.user_mode" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.customdata_get_set_coop" name="kernel.threads.customdata_get_set_coop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.customdata_get_set_preempt" name="kernel.threads.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.delayed_thread_abort" name="kernel.threads.delayed_thread_abort" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic" name="kernel.threads.dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.dyn_thread_perms" name="kernel.threads.dynamic.dyn_thread_perms" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.kernel_create_dyn_user_thread" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.thread_index_management" name="kernel.threads.dynamic.thread_index_management" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.user_create_dyn_user_thread" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.essential_thread_operation" name="kernel.threads.essential_thread_operation" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init" name="kernel.threads.init" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kdefine_coop_thread" name="kernel.threads.init.kdefine_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kdefine_preempt_thread" name="kernel.threads.init.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kinit_coop_thread" name="kernel.threads.init.kinit_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kinit_preempt_thread" name="kernel.threads.init.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.k_thread_foreach" name="kernel.threads.k_thread_foreach" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kdefine_coop_thread" name="kernel.threads.kdefine_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kdefine_preempt_thread" name="kernel.threads.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kinit_coop_thread" name="kernel.threads.kinit_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kinit_preempt_thread" name="kernel.threads.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.systhreads_idle" name="kernel.threads.systhreads_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.systhreads_main" name="kernel.threads.systhreads_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.thread_name_get_set" name="kernel.threads.thread_name_get_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.thread_start" name="kernel.threads.thread_start" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_abort_others" name="kernel.threads.threads_abort_others" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_abort_repeat" name="kernel.threads.threads_abort_repeat" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_abort_self" name="kernel.threads.threads_abort_self" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_cpu_mask" name="kernel.threads.threads_cpu_mask" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_priority_set" name="kernel.threads.threads_priority_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_delay" name="kernel.threads.threads_spawn_delay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_forever" name="kernel.threads.threads_spawn_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_params" name="kernel.threads.threads_spawn_params" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_priority" name="kernel.threads.threads_spawn_priority" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_suspend_resume_cooperative" name="kernel.threads.threads_suspend_resume_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_suspend_resume_preemptible" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.user_mode" name="kernel.threads.user_mode" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.abort_handler" name="kernel.threads.abort_handler" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis" name="kernel.threads.apis" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.abort_handler" name="kernel.threads.apis.abort_handler" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.customdata_get_set_coop" name="kernel.threads.apis.customdata_get_set_coop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.customdata_get_set_preempt" name="kernel.threads.apis.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.delayed_thread_abort" name="kernel.threads.apis.delayed_thread_abort" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.essential_thread_operation" name="kernel.threads.apis.essential_thread_operation" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.k_thread_foreach" name="kernel.threads.apis.k_thread_foreach" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.systhreads_idle" name="kernel.threads.apis.systhreads_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.systhreads_main" name="kernel.threads.apis.systhreads_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.thread_name_get_set" name="kernel.threads.apis.thread_name_get_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.thread_name_user_get_set" name="kernel.threads.apis.thread_name_user_get_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.thread_start" name="kernel.threads.apis.thread_start" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_abort_others" name="kernel.threads.apis.threads_abort_others" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_abort_repeat" name="kernel.threads.apis.threads_abort_repeat" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_abort_self" name="kernel.threads.apis.threads_abort_self" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_cpu_mask" name="kernel.threads.apis.threads_cpu_mask" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_priority_set" name="kernel.threads.apis.threads_priority_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_delay" name="kernel.threads.apis.threads_spawn_delay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_forever" name="kernel.threads.apis.threads_spawn_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_params" name="kernel.threads.apis.threads_spawn_params" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_spawn_priority" name="kernel.threads.apis.threads_spawn_priority" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend" name="kernel.threads.apis.threads_suspend" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend_resume_cooperative" name="kernel.threads.apis.threads_suspend_resume_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend_resume_preemptible" name="kernel.threads.apis.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.threads_suspend_timeout" name="kernel.threads.apis.threads_suspend_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.apis.user_mode" name="kernel.threads.apis.user_mode" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.customdata_get_set_coop" name="kernel.threads.customdata_get_set_coop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.customdata_get_set_preempt" name="kernel.threads.customdata_get_set_preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.delayed_thread_abort" name="kernel.threads.delayed_thread_abort" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic" name="kernel.threads.dynamic" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.dyn_thread_perms" name="kernel.threads.dynamic.dyn_thread_perms" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.kernel_create_dyn_user_thread" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.thread_index_management" name="kernel.threads.dynamic.thread_index_management" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.dynamic.user_create_dyn_user_thread" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.essential_thread_operation" name="kernel.threads.essential_thread_operation" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init" name="kernel.threads.init" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kdefine_coop_thread" name="kernel.threads.init.kdefine_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kdefine_preempt_thread" name="kernel.threads.init.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kinit_coop_thread" name="kernel.threads.init.kinit_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.init.kinit_preempt_thread" name="kernel.threads.init.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.k_thread_foreach" name="kernel.threads.k_thread_foreach" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kdefine_coop_thread" name="kernel.threads.kdefine_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kdefine_preempt_thread" name="kernel.threads.kdefine_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kinit_coop_thread" name="kernel.threads.kinit_coop_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.kinit_preempt_thread" name="kernel.threads.kinit_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.systhreads_idle" name="kernel.threads.systhreads_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.systhreads_main" name="kernel.threads.systhreads_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.thread_name_get_set" name="kernel.threads.thread_name_get_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.thread_start" name="kernel.threads.thread_start" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_abort_others" name="kernel.threads.threads_abort_others" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_abort_repeat" name="kernel.threads.threads_abort_repeat" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_abort_self" name="kernel.threads.threads_abort_self" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_cpu_mask" name="kernel.threads.threads_cpu_mask" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_priority_set" name="kernel.threads.threads_priority_set" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_delay" name="kernel.threads.threads_spawn_delay" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_forever" name="kernel.threads.threads_spawn_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_params" name="kernel.threads.threads_spawn_params" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_spawn_priority" name="kernel.threads.threads_spawn_priority" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_suspend_resume_cooperative" name="kernel.threads.threads_suspend_resume_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.threads_suspend_resume_preemptible" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.user_mode" name="kernel.threads.user_mode" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.early_sleep" name="kernel.common.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sleep" name="kernel.sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sleep.early_sleep" name="kernel.sleep.early_sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.pending" name="kernel.common.timing.pending" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.timing.sleep" name="kernel.common.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timing" name="kernel.timing" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timing.sleep" name="kernel.timing.sleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timing.sleep_forever" name="kernel.timing.sleep_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timing.usleep" name="kernel.timing.usleep" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api" name="kernel.memory_pool.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_free_isr" name="kernel.memory_pool.api.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_free_thread" name="kernel.memory_pool.api.mpool_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_size" name="kernel.memory_pool.api.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_timeout" name="kernel.memory_pool.api.mpool_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_kdefine_extern" name="kernel.memory_pool.api.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.sys_heap_mem_pool_assign" name="kernel.memory_pool.api.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept" name="kernel.memory_pool.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_size_roundup" name="kernel.memory_pool.concept.mpool_alloc_size_roundup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_wait_prio" name="kernel.memory_pool.concept.mpool_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_free_isr" name="kernel.memory_pool.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_free_thread" name="kernel.memory_pool.mpool_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_size" name="kernel.memory_pool.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_size_roundup" name="kernel.memory_pool.mpool_alloc_size_roundup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_timeout" name="kernel.memory_pool.mpool_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_wait_prio" name="kernel.memory_pool.mpool_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_kdefine_extern" name="kernel.memory_pool.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_threadsafe" name="kernel.memory_pool.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get" name="kernel.memory_pool.pool_block_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get_timeout" name="kernel.memory_pool.pool_block_get_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get_wait" name="kernel.memory_pool.pool_block_get_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_malloc" name="kernel.memory_pool.pool_malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys" name="kernel.memory_pool.sys" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_heap_mem_pool_assign" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.threadsafe" name="kernel.memory_pool.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.threadsafe.mpool_threadsafe" name="kernel.memory_pool.threadsafe.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api" name="kernel.memory_pool.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_free_isr" name="kernel.memory_pool.api.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_free_thread" name="kernel.memory_pool.api.mpool_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_size" name="kernel.memory_pool.api.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_timeout" name="kernel.memory_pool.api.mpool_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_kdefine_extern" name="kernel.memory_pool.api.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.sys_heap_mem_pool_assign" name="kernel.memory_pool.api.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept" name="kernel.memory_pool.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_size_roundup" name="kernel.memory_pool.concept.mpool_alloc_size_roundup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_wait_prio" name="kernel.memory_pool.concept.mpool_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_free_isr" name="kernel.memory_pool.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_free_thread" name="kernel.memory_pool.mpool_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_size" name="kernel.memory_pool.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_size_roundup" name="kernel.memory_pool.mpool_alloc_size_roundup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_timeout" name="kernel.memory_pool.mpool_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_wait_prio" name="kernel.memory_pool.mpool_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_kdefine_extern" name="kernel.memory_pool.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_threadsafe" name="kernel.memory_pool.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get" name="kernel.memory_pool.pool_block_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get_timeout" name="kernel.memory_pool.pool_block_get_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get_wait" name="kernel.memory_pool.pool_block_get_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_malloc" name="kernel.memory_pool.pool_malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys" name="kernel.memory_pool.sys" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_heap_mem_pool_assign" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.threadsafe" name="kernel.memory_pool.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.threadsafe.mpool_threadsafe" name="kernel.memory_pool.threadsafe.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api" name="kernel.memory_pool.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_free_isr" name="kernel.memory_pool.api.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_free_thread" name="kernel.memory_pool.api.mpool_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_size" name="kernel.memory_pool.api.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_alloc_timeout" name="kernel.memory_pool.api.mpool_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.mpool_kdefine_extern" name="kernel.memory_pool.api.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.api.sys_heap_mem_pool_assign" name="kernel.memory_pool.api.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept" name="kernel.memory_pool.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_parent" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.concept.mpool_alloc_merge_failed_diff_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_size_roundup" name="kernel.memory_pool.concept.mpool_alloc_size_roundup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.concept.mpool_alloc_wait_prio" name="kernel.memory_pool.concept.mpool_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_free_isr" name="kernel.memory_pool.mpool_alloc_free_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_free_thread" name="kernel.memory_pool.mpool_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_merge_failed_diff_size" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_size" name="kernel.memory_pool.mpool_alloc_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_size_roundup" name="kernel.memory_pool.mpool_alloc_size_roundup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_timeout" name="kernel.memory_pool.mpool_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_alloc_wait_prio" name="kernel.memory_pool.mpool_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_kdefine_extern" name="kernel.memory_pool.mpool_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.mpool_threadsafe" name="kernel.memory_pool.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get" name="kernel.memory_pool.pool_block_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get_timeout" name="kernel.memory_pool.pool_block_get_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_block_get_wait" name="kernel.memory_pool.pool_block_get_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.pool_malloc" name="kernel.memory_pool.pool_malloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys" name="kernel.memory_pool.sys" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_heap_mem_pool_assign" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_alloc_align4" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_alloc_free" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.sys_mem_pool_min_block_size" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.threadsafe" name="kernel.memory_pool.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_pool.threadsafe.mpool_threadsafe" name="kernel.memory_pool.threadsafe.mpool_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.stackprot" name="kernel.memory_protection.stackprot" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.stackprot.create_alt_thread" name="kernel.memory_protection.stackprot.create_alt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.stackprot.stackprot" name="kernel.memory_protection.stackprot.stackprot" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.common.critical" name="kernel.common.critical" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.critical" name="kernel.critical" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.critical.critical" name="kernel.critical.critical" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.critical.sam.critical" name="kernel.critical.sam.critical" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_cancel_wait" name="kernel.fifo.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_get_fail" name="kernel.fifo.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_is_empty_isr" name="kernel.fifo.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_is_empty_thread" name="kernel.fifo.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_isr2thread" name="kernel.fifo.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_loop" name="kernel.fifo.fifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_thread2isr" name="kernel.fifo.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.fifo_thread2thread" name="kernel.fifo.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.mytest3" name="kernel.fifo.mytest3" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.mytest4" name="kernel.fifo.mytest4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_cancel_wait" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_get_fail" name="kernel.fifo.poll.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_is_empty_isr" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_is_empty_thread" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_isr2thread" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_loop" name="kernel.fifo.poll.fifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_thread2isr" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_thread2thread" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout" name="kernel.fifo.timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_empty_fifo" name="kernel.fifo.timeout.poll.timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_fifo_thread" name="kernel.fifo.timeout.poll.timeout_fifo_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_non_empty_fifo" name="kernel.fifo.timeout.poll.timeout_non_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_empty_fifo" name="kernel.fifo.timeout.timeout_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_fifo_thread" name="kernel.fifo.timeout.timeout_fifo_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_non_empty_fifo" name="kernel.fifo.timeout.timeout_non_empty_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_threads_pend_fail_on_fifo" name="kernel.fifo.timeout.timeout_threads_pend_fail_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_threads_pend_on_dual_fifos" name="kernel.fifo.timeout.timeout_threads_pend_on_dual_fifos" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.timeout.timeout_threads_pend_on_fifo" name="kernel.fifo.timeout.timeout_threads_pend_on_fifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage" name="kernel.fifo.usage" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.dual_fifo_play" name="kernel.fifo.usage.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.isr_fifo_play" name="kernel.fifo.usage.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.dual_fifo_play" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.isr_fifo_play" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.single_fifo_play" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.single_fifo_play" name="kernel.fifo.usage.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_cancel_wait" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_get_fail" name="kernel.fifo.poll.fifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_is_empty_isr" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_is_empty_thread" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_isr2thread" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_loop" name="kernel.fifo.poll.fifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_thread2isr" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.poll.fifo_thread2thread" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage" name="kernel.fifo.usage" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.dual_fifo_play" name="kernel.fifo.usage.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.isr_fifo_play" name="kernel.fifo.usage.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.dual_fifo_play" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.isr_fifo_play" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.single_fifo_play" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.single_fifo_play" name="kernel.fifo.usage.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.dual_fifo_play" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.isr_fifo_play" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.fifo.usage.poll.single_fifo_play" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo" name="kernel.lifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.lifo_get_fail" name="kernel.lifo.lifo_get_fail" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.lifo_isr2thread" name="kernel.lifo.lifo_isr2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.lifo_loop" name="kernel.lifo.lifo_loop" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.lifo_thread2isr" name="kernel.lifo.lifo_thread2isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.lifo_thread2thread" name="kernel.lifo.lifo_thread2thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage" name="kernel.lifo.usage" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage.lifo_nowait" name="kernel.lifo.usage.lifo_nowait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage.lifo_wait" name="kernel.lifo.usage.lifo_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage.timeout_empty_lifo" name="kernel.lifo.usage.timeout_empty_lifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage.timeout_lifo_thread" name="kernel.lifo.usage.timeout_lifo_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage.timeout_non_empty_lifo" name="kernel.lifo.usage.timeout_non_empty_lifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.lifo.usage.timeout_threads_pend_on_lifo" name="kernel.lifo.usage.timeout_threads_pend_on_lifo" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api" name="kernel.mailbox.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.bad_priorities" name="kernel.mailbox.api.bad_priorities" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.lock_preemptible" name="kernel.mailbox.api.lock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_async_multiple_put" name="kernel.mailbox.api.mbox_async_multiple_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_async_put_get_block" name="kernel.mailbox.api.mbox_async_put_get_block" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_async_put_get_buffer" name="kernel.mailbox.api.mbox_async_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_async_put_to_waiting_get" name="kernel.mailbox.api.mbox_async_put_to_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_block_get_buff_to_pool" name="kernel.mailbox.api.mbox_block_get_buff_to_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_block_get_buff_to_smaller_pool" name="kernel.mailbox.api.mbox_block_get_buff_to_smaller_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_block_get_invalid_pool" name="kernel.mailbox.api.mbox_block_get_invalid_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_clean_up_tx_pool" name="kernel.mailbox.api.mbox_clean_up_tx_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_dispose_size_0_msg" name="kernel.mailbox.api.mbox_dispose_size_0_msg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_get_waiting_put_incorrect_tid" name="kernel.mailbox.api.mbox_get_waiting_put_incorrect_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_incorrect_receiver_tid" name="kernel.mailbox.api.mbox_incorrect_receiver_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_incorrect_transmit_tid" name="kernel.mailbox.api.mbox_incorrect_transmit_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_kdefine" name="kernel.mailbox.api.mbox_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_kinit" name="kernel.mailbox.api.mbox_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_msg_tid_mismatch" name="kernel.mailbox.api.mbox_msg_tid_mismatch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_multiple_waiting_get" name="kernel.mailbox.api.mbox_multiple_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_put_get_buffer" name="kernel.mailbox.api.mbox_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_put_get_null" name="kernel.mailbox.api.mbox_put_get_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_target_source_thread_block" name="kernel.mailbox.api.mbox_target_source_thread_block" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_target_source_thread_buffer" name="kernel.mailbox.api.mbox_target_source_thread_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.mbox_timed_out_mbox_get" name="kernel.mailbox.api.mbox_timed_out_mbox_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.pending_thread_wakeup" name="kernel.mailbox.api.pending_thread_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.priority_cooperative" name="kernel.mailbox.api.priority_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.priority_preemptible" name="kernel.mailbox.api.priority_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.priority_scheduling" name="kernel.mailbox.api.priority_scheduling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.sched_is_preempt_thread" name="kernel.mailbox.api.sched_is_preempt_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.sleep_cooperative" name="kernel.mailbox.api.sleep_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.sleep_wakeup_preemptible" name="kernel.mailbox.api.sleep_wakeup_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.unlock_nested_sched_lock" name="kernel.mailbox.api.unlock_nested_sched_lock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.unlock_preemptible" name="kernel.mailbox.api.unlock_preemptible" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.user_k_is_preempt" name="kernel.mailbox.api.user_k_is_preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.user_k_wakeup" name="kernel.mailbox.api.user_k_wakeup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.wakeup_expired_timer_thread" name="kernel.mailbox.api.wakeup_expired_timer_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.api.yield_cooperative" name="kernel.mailbox.api.yield_cooperative" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_multiple_put" name="kernel.mailbox.mbox_async_multiple_put" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_put_get_block" name="kernel.mailbox.mbox_async_put_get_block" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_put_get_buffer" name="kernel.mailbox.mbox_async_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_async_put_to_waiting_get" name="kernel.mailbox.mbox_async_put_to_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_block_get_buff_to_pool" name="kernel.mailbox.mbox_block_get_buff_to_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_block_get_buff_to_smaller_pool" name="kernel.mailbox.mbox_block_get_buff_to_smaller_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_block_get_invalid_pool" name="kernel.mailbox.mbox_block_get_invalid_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_clean_up_tx_pool" name="kernel.mailbox.mbox_clean_up_tx_pool" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_dispose_size_0_msg" name="kernel.mailbox.mbox_dispose_size_0_msg" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_get_waiting_put_incorrect_tid" name="kernel.mailbox.mbox_get_waiting_put_incorrect_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_incorrect_receiver_tid" name="kernel.mailbox.mbox_incorrect_receiver_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_incorrect_transmit_tid" name="kernel.mailbox.mbox_incorrect_transmit_tid" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_kdefine" name="kernel.mailbox.mbox_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_kinit" name="kernel.mailbox.mbox_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_msg_tid_mismatch" name="kernel.mailbox.mbox_msg_tid_mismatch" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_multiple_waiting_get" name="kernel.mailbox.mbox_multiple_waiting_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_put_get_buffer" name="kernel.mailbox.mbox_put_get_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_put_get_null" name="kernel.mailbox.mbox_put_get_null" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_target_source_thread_block" name="kernel.mailbox.mbox_target_source_thread_block" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_target_source_thread_buffer" name="kernel.mailbox.mbox_target_source_thread_buffer" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.mbox_timed_out_mbox_get" name="kernel.mailbox.mbox_timed_out_mbox_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.msg_receiver" name="kernel.mailbox.msg_receiver" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.msg_receiver_unlimited" name="kernel.mailbox.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.usage" name="kernel.mailbox.usage" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.usage.msg_receiver" name="kernel.mailbox.usage.msg_receiver" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.mailbox.usage.msg_receiver_unlimited" name="kernel.mailbox.usage.msg_receiver_unlimited" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_heap" name="kernel.memory_heap" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_heap.mheap_block_desc" name="kernel.memory_heap.mheap_block_desc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_heap.mheap_calloc" name="kernel.memory_heap.mheap_calloc" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_heap.mheap_malloc_align4" name="kernel.memory_heap.mheap_malloc_align4" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_heap.mheap_malloc_free" name="kernel.memory_heap.mheap_malloc_free" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_heap.mheap_min_block_size" name="kernel.memory_heap.mheap_min_block_size" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser" name="kernel.memory_protection.sys_sem.nouser" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_give_limit" name="kernel.memory_protection.sys_sem.nouser.sem_give_limit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_give_take_from_isr" name="kernel.memory_protection.sys_sem.nouser.sem_give_take_from_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_multiple_threads_wait" name="kernel.memory_protection.sys_sem.nouser.sem_multiple_threads_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_multiple" name="kernel.memory_protection.sys_sem.nouser.sem_take_multiple" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_no_wait" name="kernel.memory_protection.sys_sem.nouser.sem_take_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_no_wait_fails" name="kernel.memory_protection.sys_sem.nouser.sem_take_no_wait_fails" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_timeout" name="kernel.memory_protection.sys_sem.nouser.sem_take_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_timeout_fails" name="kernel.memory_protection.sys_sem.nouser.sem_take_timeout_fails" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_timeout_forever" name="kernel.memory_protection.sys_sem.nouser.sem_take_timeout_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.sem_take_timeout_isr" name="kernel.memory_protection.sys_sem.nouser.sem_take_timeout_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.simple_sem_from_isr" name="kernel.memory_protection.sys_sem.nouser.simple_sem_from_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_protection.sys_sem.nouser.simple_sem_from_task" name="kernel.memory_protection.sys_sem.nouser.simple_sem_from_task" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api" name="kernel.memory_slabs.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_align" name="kernel.memory_slabs.api.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_free_thread" name="kernel.memory_slabs.api.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_timeout" name="kernel.memory_slabs.api.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine" name="kernel.memory_slabs.api.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine_extern" name="kernel.memory_slabs.api.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kinit" name="kernel.memory_slabs.api.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_used_get" name="kernel.memory_slabs.api.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test" name="kernel.memory_slabs.api.test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test.mslab" name="kernel.memory_slabs.api.test.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept" name="kernel.memory_slabs.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept.mslab_alloc_wait_prio" name="kernel.memory_slabs.concept.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_align" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_free_thread" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_timeout" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_wait_prio" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine_extern" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kinit" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_used_get" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe" name="kernel.memory_slabs.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe.mslab_threadsafe" name="kernel.memory_slabs.threadsafe.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api" name="kernel.memory_slabs.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_align" name="kernel.memory_slabs.api.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_free_thread" name="kernel.memory_slabs.api.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_timeout" name="kernel.memory_slabs.api.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine" name="kernel.memory_slabs.api.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine_extern" name="kernel.memory_slabs.api.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kinit" name="kernel.memory_slabs.api.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_used_get" name="kernel.memory_slabs.api.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test" name="kernel.memory_slabs.api.test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test.mslab" name="kernel.memory_slabs.api.test.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept" name="kernel.memory_slabs.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept.mslab_alloc_wait_prio" name="kernel.memory_slabs.concept.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_align" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_free_thread" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_timeout" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_wait_prio" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine_extern" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kinit" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_used_get" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe" name="kernel.memory_slabs.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe.mslab_threadsafe" name="kernel.memory_slabs.threadsafe.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api" name="kernel.memory_slabs.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_align" name="kernel.memory_slabs.api.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_free_thread" name="kernel.memory_slabs.api.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_timeout" name="kernel.memory_slabs.api.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine" name="kernel.memory_slabs.api.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine_extern" name="kernel.memory_slabs.api.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kinit" name="kernel.memory_slabs.api.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_used_get" name="kernel.memory_slabs.api.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test" name="kernel.memory_slabs.api.test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test.mslab" name="kernel.memory_slabs.api.test.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept" name="kernel.memory_slabs.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept.mslab_alloc_wait_prio" name="kernel.memory_slabs.concept.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_align" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_free_thread" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_timeout" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_wait_prio" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine_extern" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kinit" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_used_get" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe" name="kernel.memory_slabs.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe.mslab_threadsafe" name="kernel.memory_slabs.threadsafe.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api" name="kernel.memory_slabs.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_align" name="kernel.memory_slabs.api.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_free_thread" name="kernel.memory_slabs.api.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_alloc_timeout" name="kernel.memory_slabs.api.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine" name="kernel.memory_slabs.api.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kdefine_extern" name="kernel.memory_slabs.api.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_kinit" name="kernel.memory_slabs.api.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.mslab_used_get" name="kernel.memory_slabs.api.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test" name="kernel.memory_slabs.api.test" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.api.test.mslab" name="kernel.memory_slabs.api.test.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept" name="kernel.memory_slabs.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.concept.mslab_alloc_wait_prio" name="kernel.memory_slabs.concept.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab" name="kernel.memory_slabs.mslab" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_align" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_free_thread" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_timeout" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_alloc_wait_prio" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine" name="kernel.memory_slabs.mslab_kdefine" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kdefine_extern" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_kinit" name="kernel.memory_slabs.mslab_kinit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_threadsafe" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.mslab_used_get" name="kernel.memory_slabs.mslab_used_get" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe" name="kernel.memory_slabs.threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.memory_slabs.threadsafe.mslab_threadsafe" name="kernel.memory_slabs.threadsafe.mslab_threadsafe" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:sys.mutex.nouser" name="sys.mutex.nouser" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:sys.mutex.nouser.mutex" name="sys.mutex.nouser.mutex" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:sys.mutex.nouser.supervisor_access" name="sys.mutex.nouser.supervisor_access" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:sys.mutex.nouser.thread_06@119" name="sys.mutex.nouser.thread_06@119" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:sys.mutex.nouser.thread_06@119. Failed to take mutex 0x0012e088" name="sys.mutex.nouser.thread_06@119. Failed to take mutex 0x0012e088" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:sys.mutex.nouser.thread_06@119. Failed to take mutex 0x20002288" name="sys.mutex.nouser.thread_06@119. Failed to take mutex 0x20002288" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pending" name="kernel.pending" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.pending.pending" name="kernel.pending.pending" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling" name="kernel.profiling" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling.call_stacks_analyze_idle" name="kernel.profiling.call_stacks_analyze_idle" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling.call_stacks_analyze_main" name="kernel.profiling.call_stacks_analyze_main" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.profiling.call_stacks_analyze_workq" name="kernel.profiling.call_stacks_analyze_workq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.deadline" name="kernel.sched.deadline" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.deadline.deadline" name="kernel.sched.deadline.deadline" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.deadline.mutex_lock_unlock" name="kernel.sched.deadline.mutex_lock_unlock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.deadline.mutex_reent_lock_forever" name="kernel.sched.deadline.mutex_reent_lock_forever" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.deadline.mutex_reent_lock_no_wait" name="kernel.sched.deadline.mutex_reent_lock_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.metairq" name="kernel.sched.metairq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.metairq.preempt" name="kernel.sched.metairq.preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.preempt" name="kernel.sched.preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.sched.preempt.preempt" name="kernel.sched.preempt.preempt" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.concept" name="kernel.tickless.concept" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.concept.tickless_slice" name="kernel.tickless.concept.tickless_slice" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.concept.tickless_sysclock" name="kernel.tickless.concept.tickless_sysclock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tickless" name="kernel.tickless.tickless" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tickless_slice" name="kernel.tickless.tickless_slice" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.tickless.tickless_sysclock" name="kernel.tickless.tickless_sysclock" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
         <skipped message="Skipped" type="skipped"/>
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.already_triggered" name="kernel.workqueue.already_triggered" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api" name="kernel.workqueue.api" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.api.delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.api.delayed_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_isr" name="kernel.workqueue.api.delayed_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_cancel_thread" name="kernel.workqueue.api.delayed_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_isr" name="kernel.workqueue.api.delayed_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_thread" name="kernel.workqueue.api.delayed_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_to_queue_isr" name="kernel.workqueue.api.delayed_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.delayed_work_submit_to_queue_thread" name="kernel.workqueue.api.delayed_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_from_queue_isr" name="kernel.workqueue.api.triggered_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_from_queue_thread" name="kernel.workqueue.api.triggered_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_isr" name="kernel.workqueue.api.triggered_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_cancel_thread" name="kernel.workqueue.api.triggered_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_isr" name="kernel.workqueue.api.triggered_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_thread" name="kernel.workqueue.api.triggered_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_to_queue_isr" name="kernel.workqueue.api.triggered_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.triggered_work_submit_to_queue_thread" name="kernel.workqueue.api.triggered_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_work_submit_to_queue_thread" name="kernel.workqueue.api.user_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_workq_granted_access" name="kernel.workqueue.api.user_workq_granted_access" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_workq_granted_access_setup" name="kernel.workqueue.api.user_workq_granted_access_setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.user_workq_start_before_submit" name="kernel.workqueue.api.user_workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_resubmit_to_queue" name="kernel.workqueue.api.work_resubmit_to_queue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_isr" name="kernel.workqueue.api.work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_thread" name="kernel.workqueue.api.work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_to_multipleq" name="kernel.workqueue.api.work_submit_to_multipleq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_to_queue_isr" name="kernel.workqueue.api.work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.work_submit_to_queue_thread" name="kernel.workqueue.api.work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.api.workq_start_before_submit" name="kernel.workqueue.api.workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed" name="kernel.workqueue.delayed" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_cancel" name="kernel.workqueue.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_resubmit" name="kernel.workqueue.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_resubmit_thread" name="kernel.workqueue.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_from_queue_isr" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_from_queue_thread" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_isr" name="kernel.workqueue.delayed_work_cancel_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_cancel_thread" name="kernel.workqueue.delayed_work_cancel_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_isr" name="kernel.workqueue.delayed_work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_thread" name="kernel.workqueue.delayed_work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_to_queue_isr" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.delayed_work_submit_to_queue_thread" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed" name="kernel.workqueue.poll.delayed" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_cancel" name="kernel.workqueue.poll.delayed_cancel" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_resubmit" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.delayed_resubmit_thread" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.resubmit" name="kernel.workqueue.poll.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.poll.sequence" name="kernel.workqueue.poll.sequence" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.resubmit" name="kernel.workqueue.resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.sequence" name="kernel.workqueue.sequence" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered" name="kernel.workqueue.triggered" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_no_wait" name="kernel.workqueue.triggered_no_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_no_wait_expired" name="kernel.workqueue.triggered_no_wait_expired" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_resubmit" name="kernel.workqueue.triggered_resubmit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_wait" name="kernel.workqueue.triggered_wait" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.triggered_wait_expired" name="kernel.workqueue.triggered_wait_expired" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_work_submit_to_queue_thread" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_workq_granted_access" name="kernel.workqueue.user_workq_granted_access" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_workq_granted_access_setup" name="kernel.workqueue.user_workq_granted_access_setup" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.user_workq_start_before_submit" name="kernel.workqueue.user_workq_start_before_submit" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_resubmit_to_queue" name="kernel.workqueue.work_resubmit_to_queue" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_isr" name="kernel.workqueue.work_submit_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_thread" name="kernel.workqueue.work_submit_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_to_multipleq" name="kernel.workqueue.work_submit_to_multipleq" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_to_queue_isr" name="kernel.workqueue.work_submit_to_queue_isr" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.work_submit_to_queue_thread" name="kernel.workqueue.work_submit_to_queue_thread" time="0">
      </testcase>
      <testcase classname="frdm_kl25z:kernel.workqueue.workq_start_before_submit" name="kernel.workqueue.workq_start_before_submit" time="0">
      </testcase>
  </testsuite>
</testsuites>
