<?xml version="1.0"?>
<testsuites>
    <testsuite tests="158" errors="0" failures="0" name="" skipped="1" time="0">
          <testcase classname="mimx8mm_evk:kernel.sched" name="kernel.sched" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.bad_priorities" name="kernel.scheduler.no_timeslicing.bad_priorities" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.lock_preemptible" name="kernel.scheduler.no_timeslicing.lock_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.pending_thread_wakeup" name="kernel.scheduler.no_timeslicing.pending_thread_wakeup" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.priority_cooperative" name="kernel.scheduler.no_timeslicing.priority_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.priority_preemptible" name="kernel.scheduler.no_timeslicing.priority_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.priority_scheduling" name="kernel.scheduler.no_timeslicing.priority_scheduling" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.sched_is_preempt_thread" name="kernel.scheduler.no_timeslicing.sched_is_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.sleep_cooperative" name="kernel.scheduler.no_timeslicing.sleep_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.sleep_wakeup_preempConsole now belongs to simulator." name="kernel.scheduler.no_timeslicing.sleep_wakeup_preempConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.sleep_wakeup_preemptible" name="kernel.scheduler.no_timeslicing.sleep_wakeup_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.slice_reset" name="kernel.scheduler.no_timeslicing.slice_reset" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.slice_scheduling" name="kernel.scheduler.no_timeslicing.slice_scheduling" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.time_slicing_disable_preemptible" name="kernel.scheduler.no_timeslicing.time_slicing_disable_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.time_slicing_preemptible" name="kernel.scheduler.no_timeslicing.time_slicing_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.unlock_nested_sched_lock" name="kernel.scheduler.no_timeslicing.unlock_nested_sched_lock" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.unlock_preemptible" name="kernel.scheduler.no_timeslicing.unlock_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.user_k_is_preempt" name="kernel.scheduler.no_timeslicing.user_k_is_preempt" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.user_k_wakeup" name="kernel.scheduler.no_timeslicing.user_k_wakeup" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.wakeup_expired_timer_thread" name="kernel.scheduler.no_timeslicing.wakeup_expired_timer_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.no_timeslicing.yield_cooperative" name="kernel.scheduler.no_timeslicing.yield_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.bad_priorities" name="kernel.scheduler.multiq.bad_priorities" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.lock_preemptible" name="kernel.scheduler.multiq.lock_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.pending_thread_wakeup" name="kernel.scheduler.multiq.pending_thread_wakeup" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.priority_cooperative" name="kernel.scheduler.multiq.priority_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.priority_preemptible" name="kernel.scheduler.multiq.priority_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.priority_scheduling" name="kernel.scheduler.multiq.priority_scheduling" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.sched_is_preempt_thread" name="kernel.scheduler.multiq.sched_is_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.sleep_cooperative" name="kernel.scheduler.multiq.sleep_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.sleep_wakeup_preemptible" name="kernel.scheduler.multiq.sleep_wakeup_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.slice_reset" name="kernel.scheduler.multiq.slice_reset" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.slice_scheduling" name="kernel.scheduler.multiq.slice_scheduling" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.time_slicing_disable_preemptible" name="kernel.scheduler.multiq.time_slicing_disable_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.time_slicing_preemptible" name="kernel.scheduler.multiq.time_slicing_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.unlock_nested_sched_lock" name="kernel.scheduler.multiq.unlock_nested_sched_lock" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.unlock_preemptible" name="kernel.scheduler.multiq.unlock_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.user_k_is_preempt" name="kernel.scheduler.multiq.user_k_is_preempt" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.user_k_wakeup" name="kernel.scheduler.multiq.user_k_wakeup" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.wakeup_expired_timer_thread" name="kernel.scheduler.multiq.wakeup_expired_timer_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq.yield_cooperative" name="kernel.scheduler.multiq.yield_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.bad_priorities" name="kernel.scheduler.multiq_no_timeslicing.bad_priorities" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.lock_preemptible" name="kernel.scheduler.multiq_no_timeslicing.lock_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.pending_thread_wakeup" name="kernel.scheduler.multiq_no_timeslicing.pending_thread_wakeup" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.priority_cooperative" name="kernel.scheduler.multiq_no_timeslicing.priority_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.priority_preemptible" name="kernel.scheduler.multiq_no_timeslicing.priority_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.priority_scheduling" name="kernel.scheduler.multiq_no_timeslicing.priority_scheduling" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.sched_is_preempt_thread" name="kernel.scheduler.multiq_no_timeslicing.sched_is_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.sleep_cooperative" name="kernel.scheduler.multiq_no_timeslicing.sleep_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.sleep_wakeup_preemptible" name="kernel.scheduler.multiq_no_timeslicing.sleep_wakeup_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.slice_reset" name="kernel.scheduler.multiq_no_timeslicing.slice_reset" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.slice_scheduling" name="kernel.scheduler.multiq_no_timeslicing.slice_scheduling" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.time_slicing_disable_preemptible" name="kernel.scheduler.multiq_no_timeslicing.time_slicing_disable_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.time_slicing_preemptible" name="kernel.scheduler.multiq_no_timeslicing.time_slicing_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.unlock_nested_sched_lock" name="kernel.scheduler.multiq_no_timeslicing.unlock_nested_sched_lock" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.unlock_preemptible" name="kernel.scheduler.multiq_no_timeslicing.unlock_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.user_k_is_preempt" name="kernel.scheduler.multiq_no_timeslicing.user_k_is_preempt" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.user_k_wakeup" name="kernel.scheduler.multiq_no_timeslicing.user_k_wakeup" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.wakeup_expired_timer_threConsole now belongs to simulator." name="kernel.scheduler.multiq_no_timeslicing.wakeup_expired_timer_threConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.wakeup_expired_timer_thread" name="kernel.scheduler.multiq_no_timeslicing.wakeup_expired_timer_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.scheduler.multiq_no_timeslicing.yield_cooperative" name="kernel.scheduler.multiq_no_timeslicing.yield_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.abort_handler" name="kernel.threads.abort_handler" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis" name="kernel.threads.apis" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.abort_handler" name="kernel.threads.apis.abort_handler" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.customdata_get_set_coop" name="kernel.threads.apis.customdata_get_set_coop" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.customdata_get_set_preempt" name="kernel.threads.apis.customdata_get_set_preempt" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.delayed_thread_abort" name="kernel.threads.apis.delayed_thread_abort" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.essential_thread_operation" name="kernel.threads.apis.essential_thread_operation" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.k_thread_foreach" name="kernel.threads.apis.k_thread_foreach" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.systhreads_idle" name="kernel.threads.apis.systhreads_idle" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.systhreads_main" name="kernel.threads.apis.systhreads_main" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.thread_join" name="kernel.threads.apis.thread_join" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.thread_join_deadlock" name="kernel.threads.apis.thread_join_deadlock" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.thread_join_isr" name="kernel.threads.apis.thread_join_isr" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.thread_name_get_set" name="kernel.threads.apis.thread_name_get_set" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.thread_name_user_get_set" name="kernel.threads.apis.thread_name_user_get_set" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.thread_start" name="kernel.threads.apis.thread_start" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_abort_others" name="kernel.threads.apis.threads_abort_others" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_abort_repeat" name="kernel.threads.apis.threads_abort_repeat" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_abort_self" name="kernel.threads.apis.threads_abort_self" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_cpu_mask" name="kernel.threads.apis.threads_cpu_mask" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_priority_set" name="kernel.threads.apis.threads_priority_set" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_spawn_delay" name="kernel.threads.apis.threads_spawn_delay" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_spawn_forever" name="kernel.threads.apis.threads_spawn_forever" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_spawn_params" name="kernel.threads.apis.threads_spawn_params" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_spawn_priority" name="kernel.threads.apis.threads_spawn_priority" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_suspend" name="kernel.threads.apis.threads_suspend" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_suspend_resume_cooperative" name="kernel.threads.apis.threads_suspend_resume_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_suspend_resume_preemptible" name="kernel.threads.apis.threads_suspend_resume_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.threads_suspend_timeout" name="kernel.threads.apis.threads_suspend_timeout" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.apis.user_mode" name="kernel.threads.apis.user_mode" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.customdata_get_set_coop" name="kernel.threads.customdata_get_set_coop" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.customdata_get_set_preempt" name="kernel.threads.customdata_get_set_preempt" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.delayed_thread_abort" name="kernel.threads.delayed_thread_abort" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.dynamic" name="kernel.threads.dynamic" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.dynamic.dyn_thread_perms" name="kernel.threads.dynamic.dyn_thread_perms" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.dynamic.kernel_create_dyn_user_thrConsole now belongs to simulator." name="kernel.threads.dynamic.kernel_create_dyn_user_thrConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.dynamic.kernel_create_dyn_user_thread" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.dynamic.thread_index_management" name="kernel.threads.dynamic.thread_index_management" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.dynamic.user_create_dyn_user_thread" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.essential_thread_operation" name="kernel.threads.essential_thread_operation" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.init" name="kernel.threads.init" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.init.kdefine_coop_thread" name="kernel.threads.init.kdefine_coop_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.init.kdefine_preempt_thread" name="kernel.threads.init.kdefine_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.init.kinit_coop_thread" name="kernel.threads.init.kinit_coop_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.init.kinit_preempt_thread" name="kernel.threads.init.kinit_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.k_thread_foreach" name="kernel.threads.k_thread_foreach" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.kdefine_coop_thread" name="kernel.threads.kdefine_coop_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.kdefine_preempt_thread" name="kernel.threads.kdefine_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.kinit_coop_thread" name="kernel.threads.kinit_coop_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.kinit_preempt_thread" name="kernel.threads.kinit_preempt_thread" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.no-multithreading" name="kernel.threads.no-multithreading" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.systhreads_idle" name="kernel.threads.systhreads_idle" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.systhreads_main" name="kernel.threads.systhreads_main" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.thread_name_get_set" name="kernel.threads.thread_name_get_set" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.thread_start" name="kernel.threads.thread_start" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_abort_others" name="kernel.threads.threads_abort_others" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_abort_repeat" name="kernel.threads.threads_abort_repeat" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_abort_self" name="kernel.threads.threads_abort_self" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_cpu_mask" name="kernel.threads.threads_cpu_mask" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_priority_set" name="kernel.threads.threads_priority_set" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_spawn_delay" name="kernel.threads.threads_spawn_delay" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_spawn_forever" name="kernel.threads.threads_spawn_forever" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_spawn_params" name="kernel.threads.threads_spawn_params" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_spawn_priority" name="kernel.threads.threads_spawn_priority" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_suspend_resume_cooperative" name="kernel.threads.threads_suspend_resume_cooperative" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.threads_suspend_resume_preemptible" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.threads.user_mode" name="kernel.threads.user_mode" time="0">
          </testcase>
         <testcase classname="mimx8mm_evk:kernel.timer" name="kernel.timer" time="0">
         <skipped message="Skipped" type="skipped"/>
         </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.monotonic" name="kernel.timer.monotonic" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.monotonic.timer" name="kernel.timer.monotonic.timer" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.starve.starve" name="kernel.timer.starve.starve" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.time_conversions" name="kernel.timer.tickless.time_conversions" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timeout_abs" name="kernel.timer.tickless.timeout_abs" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_duration_period" name="kernel.timer.tickless.timer_duration_period" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_expirefn_null" name="kernel.timer.tickless.timer_expirefn_null" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_k_define" name="kernel.timer.tickless.timer_k_define" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_period_0" name="kernel.timer.tickless.timer_period_0" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_periodicity" name="kernel.timer.tickless.timer_periodicity" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_remaining" name="kernel.timer.tickless.timer_remaining" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_remaining_get" name="kernel.timer.tickless.timer_remaining_get" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_status_get" name="kernel.timer.tickless.timer_status_get" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_status_get_anytime" name="kernel.timer.tickless.timer_status_get_anytime" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_status_sync" name="kernel.timer.tickless.timer_status_sync" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.tickless.timer_user_data" name="kernel.timer.tickless.timer_user_data" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timConsole now belongs to simulator." name="kernel.timer.timConsole now belongs to simulator." time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.time_conversions" name="kernel.timer.time_conversions" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timeout_abs" name="kernel.timer.timeout_abs" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer" name="kernel.timer.timer" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_duration_period" name="kernel.timer.timer_duration_period" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_expirefn_null" name="kernel.timer.timer_expirefn_null" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_k_define" name="kernel.timer.timer_k_define" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_period_0" name="kernel.timer.timer_period_0" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_periodicity" name="kernel.timer.timer_periodicity" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_remaining" name="kernel.timer.timer_remaining" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_remaining_get" name="kernel.timer.timer_remaining_get" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_status_get" name="kernel.timer.timer_status_get" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_status_get_anytime" name="kernel.timer.timer_status_get_anytime" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_status_sync" name="kernel.timer.timer_status_sync" time="0">
          </testcase>
          <testcase classname="mimx8mm_evk:kernel.timer.timer_user_data" name="kernel.timer.timer_user_data" time="0">
          </testcase>
  </testsuite>
</testsuites>
