<?xml version="1.0"?>
<testsuites>
  <testsuite errors="350" failures="0" name="Sanitycheck" skipped="0" tests="350" time="0">
    <testcase classname="frdm_kl25z:buildsystem.include_file" name="buildsystem.include_file.gen_gz_inc_file" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:buildsystem.include_file" name="buildsystem.include_file.gen_inc_file" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:crypto.rand32" name="crypto.rand32.rand32" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:crypto.rand32.random_sw_systimer" name="crypto.rand32.random_sw_systimer.rand32" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.adc" name="peripheral.adc.adc_sample_with_interval" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.adc" name="peripheral.adc.adc_repeated_samplings" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.adc" name="peripheral.adc.adc_sample_one_channel" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.adc" name="peripheral.adc.adc_sample_two_channels" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.adc" name="peripheral.adc.adc_asynchronous_call" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.adc" name="peripheral.adc.adc_invalid_request" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:peripheral.device_id" name="peripheral.device_id.device_id_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:arch.interrupt" name="arch.interrupt.arm_runtime_nmi" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.kernel_cpu_idle_atomic" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.kernel_timer_interrupts" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.kernel_ctx_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.kernel_cpu_idle" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.kernel_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.busy_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.kernel_interrupts" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.k_yield" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.k_sleep" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.critical" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common" name="kernel.common.early_sleep" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common.stack_sentinel" name="kernel.common.stack_sentinel.fatal" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_is_empty_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_is_empty_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_isr2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_cancel_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_loop" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo" name="kernel.fifo.fifo_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_cancel_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_is_empty_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_is_empty_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_loop" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.poll" name="kernel.fifo.poll.fifo_isr2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.usage" name="kernel.fifo.usage.dual_fifo_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.usage" name="kernel.fifo.usage.single_fifo_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.usage" name="kernel.fifo.usage.isr_fifo_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll.single_fifo_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll.isr_fifo_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll.dual_fifo_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.lifo" name="kernel.lifo.lifo_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.lifo" name="kernel.lifo.lifo_loop" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.lifo" name="kernel.lifo.lifo_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.lifo" name="kernel.lifo.lifo_isr2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.lifo" name="kernel.lifo.lifo_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_kinit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_put_get_null" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_kdefine" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_msg_tid_mismatch" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_async_put_get_block" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_dispose_size_0_msg" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_clean_up_tx_pool" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_block_get_buff_to_smaller_pool" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_block_get_invalid_pool" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_async_multiple_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_incorrect_transmit_tid" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_multiple_waiting_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_block_get_buff_to_pool" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_incorrect_receiver_tid" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_put_get_buffer" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_get_waiting_put_incorrect_tid" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_target_source_thread_buffer" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_timed_out_mbox_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_async_put_get_buffer" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_async_put_to_waiting_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.mbox_target_source_thread_block" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.msg_receiver_unlimited" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mailbox" name="kernel.mailbox.msg_receiver" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_heap" name="kernel.memory_heap.mheap_malloc_align4" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_heap" name="kernel.memory_heap.mheap_min_block_size" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_heap" name="kernel.memory_heap.mheap_calloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_heap" name="kernel.memory_heap.mheap_malloc_free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_heap" name="kernel.memory_heap.mheap_block_desc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_size" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_free_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_timeout" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_kdefine_extern" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_free_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_size" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_size_roundup" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_wait_prio" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_pool" name="kernel.memory_pool.mpool_threadsafe" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_protection.stack_random" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_protection" name="kernel.memory_protection.stackprot" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_used_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_kinit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_kdefine_extern" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_kdefine" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_align" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_timeout" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.memory_slabs" name="kernel.memory_slabs.mslab_threadsafe" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_alloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_thread_overflow" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_attrs_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_user_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_put_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_user_thread_overflow" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_user_purge_when_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_pend_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_user_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_purge_when_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_user_attrs_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.message_queue" name="kernel.message_queue.msgq_user_put_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex.mutex" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex.mutex_reent_lock_timeout_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex.mutex_reent_lock_no_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex.mutex_reent_lock_timeout_pass" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex.mutex_reent_lock_forever" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.mutex" name="kernel.mutex.mutex_lock_unlock" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common.timing" name="kernel.common.timing.pending" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_on_multiple_elements" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_on_single_elements" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_forever_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_get_invalid_size" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_get_timeout" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_forever_timeout" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_timeout" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_get_on_empty_pipe" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_reader_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_user_put_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_put_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_user_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.half_pipe_get_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_user_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_block_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_block_put_sema" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.resource_pool_auto_free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_get_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_block_writer_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.half_pipe_block_put_sema" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.pipe" name="kernel.pipe.pipe_alloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll.poll_multi" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll.poll_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll.poll_cancel_main_high_prio" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll.poll_no_wait" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll.poll_cancel_main_low_prio" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.poll" name="kernel.poll.poll_threadstate" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.profiling" name="kernel.profiling.call_stacks_analyze_main" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.profiling" name="kernel.profiling.call_stacks_analyze_workq" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.profiling" name="kernel.profiling.call_stacks_analyze_idle" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_alloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_get_2threads" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_loop" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_supv_to_user" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.auto_free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue" name="kernel.queue.queue_isr2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.auto_free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_supv_to_user" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_isr2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_alloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_get_2threads" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_loop" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.queue.poll" name="kernel.queue.poll.queue_get_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.sched.deadline" name="kernel.sched.deadline.deadline" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.sched.preempt" name="kernel.sched.preempt.preempt" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.semaphore" name="kernel.semaphore.sema_reset" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.semaphore" name="kernel.semaphore.sema_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.semaphore" name="kernel.semaphore.sema_count_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.semaphore" name="kernel.semaphore.sema_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.common.timing" name="kernel.common.timing.sleep" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack" name="kernel.stack.stack_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack" name="kernel.stack.stack_pop_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack" name="kernel.stack.stack_alloc_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack" name="kernel.stack.stack_user_thread2thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack" name="kernel.stack.stack_user_pop_fail" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack" name="kernel.stack.stack_thread2isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack.usage" name="kernel.stack.usage.single_stack_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack.usage" name="kernel.stack.usage.isr_stack_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.stack.usage" name="kernel.stack.usage.dual_stack_play" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads.dynamic" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads.dynamic" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads.dynamic" name="kernel.threads.dynamic.dyn_thread_perms" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_abort_others" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.thread_start" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.user_mode" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_cpu_mask" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_spawn_priority" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_abort_self" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_abort_repeat" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.delayed_thread_abort" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.systhreads_main" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.customdata_get_set_coop" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_spawn_delay" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_spawn_forever" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_suspend_resume_preemptible" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.k_thread_foreach" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_spawn_params" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.thread_name_get_set" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_suspend_resume_cooperative" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.essential_thread_operation" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.threads_priority_set" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.customdata_get_set_preempt" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.systhreads_idle" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.abort_handler" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.kdefine_preempt_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.kdefine_coop_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.kinit_coop_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.threads" name="kernel.threads.kinit_preempt_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.tickless" name="kernel.tickless.tickless_sysclock" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.tickless" name="kernel.tickless.tickless_slice" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_k_define" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_remaining_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_periodicity" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_status_sync" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_status_get_anytime" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_expirefn_null" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_duration_period" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_period_0" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_status_get" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer_user_data" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.timer" name="kernel.timer.timer" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.sequence" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_resubmit_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_cancel" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.resubmit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_resubmit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue.poll" name="kernel.workqueue.poll.sequence" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed_cancel" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue.poll" name="kernel.workqueue.poll.resubmit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed_resubmit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.work_submit_to_multipleq" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.work_submit_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.work_resubmit_to_queue" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.work_submit_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.workq_start_before_submit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.user_workq_granted_access_setup" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.user_workq_start_before_submit" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.work_submit_to_queue_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.user_workq_granted_access" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.work_submit_to_queue_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:arch.common.xip" name="arch.common.xip.globals" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.base64_codec" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.stdbool" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.strchr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.memset" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.strlen" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.strcmp" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.stddef" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.stdint" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.strcpy" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.memcmp" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.strncpy" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.limits" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_obj_arr_encoding" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_escape_empty" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_escape_no_op" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_obj_arr_decoding" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_key_not_in_descr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_encoding" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_item_wrong_type" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_wrong_token" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_decoding" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_invalid_unicode" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_escape_bounds_check" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_missing_quote" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_decoding_array_array" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_escape_one" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.encoding" name="libraries.encoding.json_escape" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.calloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.realloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.reallocarray" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.memalloc_max" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.malloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.minimal" name="libraries.libc.minimal.memalloc_all" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.memalloc_max" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.calloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.realloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.malloc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.reallocarray" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc.newlib" name="libraries.libc.newlib.memalloc_all" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures.rbtree" name="libraries.data_structures.rbtree.rbtree_spam" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_put_get_thread_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_raw" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.byte_put_free" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_alloc_put" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_pow2_put_get_thread_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_declare_size" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ring_buffer_main" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_declare_pow2" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_init" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_size_put_get_thread_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_put_get_isr" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.data_structures" name="libraries.data_structures.ringbuffer_put_get_thread" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.sprintf_string" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.vsprintf" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.sprintf_misc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.sprintf_double" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.sprintf_integer" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:libraries.libc" name="libraries.libc.vsnprintf" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:util_test" name="util_test.COND_CODE_0" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:util_test" name="util_test.COND_CODE_1" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:util_test" name="util_test.UTIL_LISTIFY" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_overflow" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_arguments" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_msg_dropped_notification" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_panic" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_backend_runtime_filtering" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_from_declared_module" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.log_strdup_gc" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_core" name="logging.log_core.strdup_trimming" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_list" name="logging.log_list.log_list" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_list" name="logging.log_list.log_list_multiple_items" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_msg" name="logging.log_msg.log_hexdump_msg" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_msg" name="logging.log_msg.log_hexdump_data_get_single_chunk" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_msg" name="logging.log_msg.log_std_msg" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_msg" name="logging.log_msg.log_hexdump_data_get_two_chunks" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_msg" name="logging.log_msg.log_hexdump_data_get_multiple_chunks" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_output" name="logging.log_output.log_output_raw_string" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:logging.log_output" name="logging.log_output.log_output_string" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:testing.ztest.verbose_0" name="testing.ztest.verbose_0.assert_tests" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:testing.ztest.verbose_0" name="testing.ztest.verbose_0.empty_test" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:testing.ztest.verbose_1" name="testing.ztest.verbose_1.assert_tests" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:testing.ztest.verbose_1" name="testing.ztest.verbose_1.empty_test" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:testing.ztest.verbose_2" name="testing.ztest.verbose_2.assert_tests" time="0">
      <error message="failed" type="failure"/>
    </testcase>
    <testcase classname="frdm_kl25z:testing.ztest.verbose_2" name="testing.ztest.verbose_2.empty_test" time="0">
      <error message="failed" type="failure"/>
    </testcase>
  </testsuite>
</testsuites>
